{
	"id": "75632fdd161bb4d1a4d1762d2064aa10",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/l2/t1/SignatureNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\npragma solidity ^0.8.25;\n\ncontract SignatureNFT is ERC721 {\n    address immutable public signer; //签名地址\n    mapping (address => bool) public mintedAddress; //记录已经mint的地址\n\n    constructor(string memory _name, string memory _symbol, address _signer) ERC721(_name, _symbol) {\n        signer = _signer;\n    }\n\n    //利用ECDSA验证签名并mint\n    function mint(address _account, uint256 _tokenId, bytes memory _signature) external {\n        bytes32 _msgHash = getMessageHash(_account, _tokenId);//将_account和_tockenId打包消息\n        bytes32 _ethSignedMessageHash = MessageHashUtils.toEthSignedMessageHash(_msgHash);\n\n        require(verify(_ethSignedMessageHash, _signature), \"Invalid signature\"); //ECDAS检验通过\n        require(!mintedAddress[_account], \"Already minted!\"); //地址没有mint过\n        _mint(_account, _tokenId); //mint\n        mintedAddress[_account] = true; //记录mint过的地址\n    }\n\n    /*\n     * 将mint地址（address类型）和tokenId（uint256类型）拼成消息msgHash\n     * _account: 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\n     * _tokenId: 0\n     * 对应的消息: 0x1bf2c0ce4546651a1a2feb457b39d891a6b83931cc2454434f39961345ac378c\n     */\n    function getMessageHash(address _account, uint256 _tokenId) public pure returns(bytes32) {\n        return keccak256(abi.encodePacked(_account, _tokenId));\n    }\n\n    // ECDSA验证，调用ECDSA库的verify()函数\n    function verify(bytes32 _msgHash, bytes memory _signature) \n        public view returns(bool)\n    {\n        address recovered = ECDSA.recover(_msgHash, _signature);\n        return recovered == signer;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/l2/t1/SignatureNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 AND DUP7 0x29 0x26 PREVRANDAO RETURNDATACOPY 0x26 SLT 0xC0 0xBD 0x23 DUP9 BLOBBASEFEE 0xB4 SIGNEXTEND DUP12 SELFBALANCE SAR CREATE2 CALLDATASIZE 0xF6 DUP13 0xEA 0xEE SWAP14 PUSH9 0x5B0DF4B6364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "344:7386:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 AND DUP7 0x29 0x26 PREVRANDAO RETURNDATACOPY 0x26 SLT 0xC0 0xBD 0x23 DUP9 BLOBBASEFEE 0xB4 SIGNEXTEND DUP12 SELFBALANCE SAR CREATE2 CALLDATASIZE 0xF6 DUP13 0xEA 0xEE SWAP14 PUSH9 0x5B0DF4B6364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "344:7386:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/l2/t1/SignatureNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH RETURNDATASIZE 0xEF 0xB6 SMOD 0xF 0xBF GASLIMIT 0xC4 0xC5 SWAP16 0xAD 0xDC 0xDD SWAP8 PUSH9 0xCF85BA2973F43C2EE6 SLOAD 0xE8 0xEA 0xC5 BLOCKHASH CODECOPY BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "521:3235:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH RETURNDATASIZE 0xEF 0xB6 SMOD 0xF 0xBF GASLIMIT 0xC4 0xC5 SWAP16 0xAD 0xDC 0xDD SWAP8 PUSH9 0xCF85BA2973F43C2EE6 SLOAD 0xE8 0xEA 0xC5 BLOCKHASH CODECOPY BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "521:3235:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/l2/t1/SignatureNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/l2/t1/SignatureNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/l2/t1/SignatureNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/l2/t1/SignatureNFT.sol": {
				"SignatureNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mintedAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_msgHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/l2/t1/SignatureNFT.sol\":254:1878  contract SignatureNFT is ERC721 {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/l2/t1/SignatureNFT.sol\":425:554  constructor(string memory _name, string memory _symbol, address _signer) ERC721(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/l2/t1/SignatureNFT.sol\":505:510  _name */\n  dup3\n    /* \"contracts/l2/t1/SignatureNFT.sol\":512:519  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/l2/t1/SignatureNFT.sol\":540:547  _signer */\n  dup1\n    /* \"contracts/l2/t1/SignatureNFT.sol\":531:547  signer = _signer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/l2/t1/SignatureNFT.sol\":425:554  constructor(string memory _name, string memory _symbol, address _signer) ERC721(_name, _symbol) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/l2/t1/SignatureNFT.sol\":254:1878  contract SignatureNFT is ERC721 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_57\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_59\n  tag_18\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1030:1118   */\ntag_58:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_61\n  tag_12\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_62\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_65\n  tag_18\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1434:1490   */\ntag_64:\n    /* \"#utility.yul\":1508:1537   */\n  tag_66\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_22:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_23:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_69\n    /* \"#utility.yul\":1885:1934   */\n  tag_70\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_21\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1869:1935   */\n  tag_20\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_72\n  tag_16\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2010:2122   */\ntag_71:\n    /* \"#utility.yul\":2131:2183   */\n  tag_73\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_22\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_24:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_76\n  tag_15\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2292:2414   */\ntag_75:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_77\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_23\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_25:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_26:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_80\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_27:\n    /* \"#utility.yul\":2877:2901   */\n  tag_82\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_26\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_83:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_28:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_85\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  dup1\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_88\n  tag_13\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3222:3341   */\ntag_87:\n    /* \"#utility.yul\":3401:3402   */\n  0x00\n    /* \"#utility.yul\":3390:3399   */\n  dup5\n    /* \"#utility.yul\":3386:3403   */\n  add\n    /* \"#utility.yul\":3380:3404   */\n  mload\n    /* \"#utility.yul\":3431:3449   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3420:3450   */\n  gt\n    /* \"#utility.yul\":3417:3534   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3453:3532   */\n  tag_90\n  tag_14\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3417:3534   */\ntag_89:\n    /* \"#utility.yul\":3558:3632   */\n  tag_91\n    /* \"#utility.yul\":3624:3631   */\n  dup7\n    /* \"#utility.yul\":3615:3621   */\n  dup3\n    /* \"#utility.yul\":3604:3613   */\n  dup8\n    /* \"#utility.yul\":3600:3622   */\n  add\n    /* \"#utility.yul\":3558:3632   */\n  tag_24\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3632   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3642   */\n  pop\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"#utility.yul\":3691:3700   */\n  dup5\n    /* \"#utility.yul\":3687:3705   */\n  add\n    /* \"#utility.yul\":3681:3706   */\n  mload\n    /* \"#utility.yul\":3733:3751   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3725:3731   */\n  dup2\n    /* \"#utility.yul\":3722:3752   */\n  gt\n    /* \"#utility.yul\":3719:3836   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3755:3834   */\n  tag_93\n  tag_14\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3719:3836   */\ntag_92:\n    /* \"#utility.yul\":3860:3934   */\n  tag_94\n    /* \"#utility.yul\":3926:3933   */\n  dup7\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3906:3915   */\n  dup8\n    /* \"#utility.yul\":3902:3924   */\n  add\n    /* \"#utility.yul\":3860:3934   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3850:3934   */\n  swap3\n  pop\n    /* \"#utility.yul\":3652:3944   */\n  pop\n    /* \"#utility.yul\":3983:3985   */\n  0x40\n    /* \"#utility.yul\":4009:4073   */\n  tag_95\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":4009:4073   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3999:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3954:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4195   */\ntag_29:\n    /* \"#utility.yul\":4148:4154   */\n  0x00\n    /* \"#utility.yul\":4182:4187   */\n  dup2\n    /* \"#utility.yul\":4176:4188   */\n  mload\n    /* \"#utility.yul\":4166:4188   */\n  swap1\n  pop\n    /* \"#utility.yul\":4096:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4381   */\ntag_30:\n    /* \"#utility.yul\":4249:4326   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4246:4247   */\n  0x00\n    /* \"#utility.yul\":4239:4327   */\n  mstore\n    /* \"#utility.yul\":4346:4350   */\n  0x22\n    /* \"#utility.yul\":4343:4344   */\n  0x04\n    /* \"#utility.yul\":4336:4351   */\n  mstore\n    /* \"#utility.yul\":4370:4374   */\n  0x24\n    /* \"#utility.yul\":4367:4368   */\n  0x00\n    /* \"#utility.yul\":4360:4375   */\n  revert\n    /* \"#utility.yul\":4387:4707   */\ntag_31:\n    /* \"#utility.yul\":4431:4437   */\n  0x00\n    /* \"#utility.yul\":4468:4469   */\n  0x02\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  div\n    /* \"#utility.yul\":4448:4470   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4516   */\n  0x01\n    /* \"#utility.yul\":4509:4513   */\n  dup3\n    /* \"#utility.yul\":4505:4517   */\n  and\n    /* \"#utility.yul\":4536:4554   */\n  dup1\n    /* \"#utility.yul\":4526:4607   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4592:4596   */\n  0x7f\n    /* \"#utility.yul\":4584:4590   */\n  dup3\n    /* \"#utility.yul\":4580:4597   */\n  and\n    /* \"#utility.yul\":4570:4597   */\n  swap2\n  pop\n    /* \"#utility.yul\":4526:4607   */\ntag_99:\n    /* \"#utility.yul\":4654:4656   */\n  0x20\n    /* \"#utility.yul\":4646:4652   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  lt\n    /* \"#utility.yul\":4623:4641   */\n  dup2\n    /* \"#utility.yul\":4620:4658   */\n  sub\n    /* \"#utility.yul\":4617:4701   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4673:4691   */\n  tag_101\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4617:4701   */\ntag_100:\n    /* \"#utility.yul\":4438:4707   */\n  pop\n    /* \"#utility.yul\":4387:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4854   */\ntag_32:\n    /* \"#utility.yul\":4762:4766   */\n  0x00\n    /* \"#utility.yul\":4785:4788   */\n  dup2\n    /* \"#utility.yul\":4777:4788   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4805:4806   */\n  0x00\n    /* \"#utility.yul\":4798:4812   */\n  mstore\n    /* \"#utility.yul\":4842:4846   */\n  0x20\n    /* \"#utility.yul\":4839:4840   */\n  0x00\n    /* \"#utility.yul\":4829:4847   */\n  keccak256\n    /* \"#utility.yul\":4821:4847   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4860:4953   */\ntag_33:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4944:4946   */\n  0x20\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4932:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  add\n    /* \"#utility.yul\":4924:4947   */\n  div\n    /* \"#utility.yul\":4914:4947   */\n  swap1\n  pop\n    /* \"#utility.yul\":4860:4953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5066   */\ntag_34:\n    /* \"#utility.yul\":5003:5011   */\n  0x00\n    /* \"#utility.yul\":5053:5058   */\n  dup3\n    /* \"#utility.yul\":5047:5051   */\n  dup3\n    /* \"#utility.yul\":5043:5059   */\n  shl\n    /* \"#utility.yul\":5022:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5465   */\ntag_35:\n    /* \"#utility.yul\":5141:5147   */\n  0x00\n    /* \"#utility.yul\":5191:5192   */\n  0x08\n    /* \"#utility.yul\":5179:5189   */\n  dup4\n    /* \"#utility.yul\":5175:5193   */\n  mul\n    /* \"#utility.yul\":5214:5311   */\n  tag_106\n    /* \"#utility.yul\":5244:5310   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5233:5242   */\n  dup3\n    /* \"#utility.yul\":5214:5311   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5332:5371   */\n  tag_107\n    /* \"#utility.yul\":5362:5370   */\n  dup7\n    /* \"#utility.yul\":5351:5360   */\n  dup4\n    /* \"#utility.yul\":5332:5371   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5320:5371   */\n  swap6\n  pop\n    /* \"#utility.yul\":5404:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5409   */\n  not\n    /* \"#utility.yul\":5393:5398   */\n  dup5\n    /* \"#utility.yul\":5389:5410   */\n  and\n    /* \"#utility.yul\":5380:5410   */\n  swap4\n  pop\n    /* \"#utility.yul\":5453:5457   */\n  dup1\n    /* \"#utility.yul\":5443:5451   */\n  dup7\n    /* \"#utility.yul\":5439:5458   */\n  and\n    /* \"#utility.yul\":5432:5437   */\n  dup5\n    /* \"#utility.yul\":5429:5459   */\n  or\n    /* \"#utility.yul\":5419:5459   */\n  swap3\n  pop\n    /* \"#utility.yul\":5148:5465   */\n  pop\n  pop\n    /* \"#utility.yul\":5072:5465   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5471:5548   */\ntag_36:\n    /* \"#utility.yul\":5508:5515   */\n  0x00\n    /* \"#utility.yul\":5537:5542   */\n  dup2\n    /* \"#utility.yul\":5526:5542   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5554:5614   */\ntag_37:\n    /* \"#utility.yul\":5582:5585   */\n  0x00\n    /* \"#utility.yul\":5603:5608   */\n  dup2\n    /* \"#utility.yul\":5596:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5554:5614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5620:5762   */\ntag_38:\n    /* \"#utility.yul\":5670:5679   */\n  0x00\n    /* \"#utility.yul\":5703:5756   */\n  tag_111\n    /* \"#utility.yul\":5721:5755   */\n  tag_112\n    /* \"#utility.yul\":5730:5754   */\n  tag_113\n    /* \"#utility.yul\":5748:5753   */\n  dup5\n    /* \"#utility.yul\":5730:5754   */\n  tag_36\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5721:5755   */\n  tag_37\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5703:5756   */\n  tag_36\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5690:5756   */\n  swap1\n  pop\n    /* \"#utility.yul\":5620:5762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5768:5843   */\ntag_39:\n    /* \"#utility.yul\":5811:5814   */\n  0x00\n    /* \"#utility.yul\":5832:5837   */\n  dup2\n    /* \"#utility.yul\":5825:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5768:5843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5849:6118   */\ntag_40:\n    /* \"#utility.yul\":5959:5998   */\n  tag_116\n    /* \"#utility.yul\":5990:5997   */\n  dup4\n    /* \"#utility.yul\":5959:5998   */\n  tag_38\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6020:6111   */\n  tag_117\n    /* \"#utility.yul\":6069:6110   */\n  tag_118\n    /* \"#utility.yul\":6093:6109   */\n  dup3\n    /* \"#utility.yul\":6069:6110   */\n  tag_39\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6061:6067   */\n  dup5\n    /* \"#utility.yul\":6054:6058   */\n  dup5\n    /* \"#utility.yul\":6048:6059   */\n  sload\n    /* \"#utility.yul\":6020:6111   */\n  tag_35\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6014:6018   */\n  dup3\n    /* \"#utility.yul\":6007:6112   */\n  sstore\n    /* \"#utility.yul\":5925:6118   */\n  pop\n    /* \"#utility.yul\":5849:6118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6124:6197   */\ntag_41:\n    /* \"#utility.yul\":6169:6172   */\n  0x00\n    /* \"#utility.yul\":6124:6197   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6203:6392   */\ntag_42:\n    /* \"#utility.yul\":6280:6312   */\n  tag_121\n  tag_41\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6321:6386   */\n  tag_122\n    /* \"#utility.yul\":6379:6385   */\n  dup2\n    /* \"#utility.yul\":6371:6377   */\n  dup5\n    /* \"#utility.yul\":6365:6369   */\n  dup5\n    /* \"#utility.yul\":6321:6386   */\n  tag_40\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6256:6392   */\n  pop\n    /* \"#utility.yul\":6203:6392   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6398:6584   */\ntag_43:\n    /* \"#utility.yul\":6458:6578   */\ntag_124:\n    /* \"#utility.yul\":6475:6478   */\n  dup2\n    /* \"#utility.yul\":6468:6473   */\n  dup2\n    /* \"#utility.yul\":6465:6479   */\n  lt\n    /* \"#utility.yul\":6458:6578   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":6529:6568   */\n  tag_127\n    /* \"#utility.yul\":6566:6567   */\n  0x00\n    /* \"#utility.yul\":6559:6564   */\n  dup3\n    /* \"#utility.yul\":6529:6568   */\n  tag_42\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6502:6503   */\n  0x01\n    /* \"#utility.yul\":6495:6500   */\n  dup2\n    /* \"#utility.yul\":6491:6504   */\n  add\n    /* \"#utility.yul\":6482:6504   */\n  swap1\n  pop\n    /* \"#utility.yul\":6458:6578   */\n  jump(tag_124)\ntag_126:\n    /* \"#utility.yul\":6398:6584   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6590:7133   */\ntag_44:\n    /* \"#utility.yul\":6691:6693   */\n  0x1f\n    /* \"#utility.yul\":6686:6689   */\n  dup3\n    /* \"#utility.yul\":6683:6694   */\n  gt\n    /* \"#utility.yul\":6680:7126   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6725:6763   */\n  tag_130\n    /* \"#utility.yul\":6757:6762   */\n  dup2\n    /* \"#utility.yul\":6725:6763   */\n  tag_32\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6809:6838   */\n  tag_131\n    /* \"#utility.yul\":6827:6837   */\n  dup5\n    /* \"#utility.yul\":6809:6838   */\n  tag_33\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6799:6807   */\n  dup2\n    /* \"#utility.yul\":6795:6839   */\n  add\n    /* \"#utility.yul\":6992:6994   */\n  0x20\n    /* \"#utility.yul\":6980:6990   */\n  dup6\n    /* \"#utility.yul\":6977:6995   */\n  lt\n    /* \"#utility.yul\":6974:7023   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7013:7021   */\n  dup2\n    /* \"#utility.yul\":6998:7021   */\n  swap1\n  pop\n    /* \"#utility.yul\":6974:7023   */\ntag_132:\n    /* \"#utility.yul\":7036:7116   */\n  tag_133\n    /* \"#utility.yul\":7092:7114   */\n  tag_134\n    /* \"#utility.yul\":7110:7113   */\n  dup6\n    /* \"#utility.yul\":7092:7114   */\n  tag_33\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7082:7090   */\n  dup4\n    /* \"#utility.yul\":7078:7115   */\n  add\n    /* \"#utility.yul\":7065:7076   */\n  dup3\n    /* \"#utility.yul\":7036:7116   */\n  tag_43\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6695:7126   */\n  pop\n  pop\n    /* \"#utility.yul\":6680:7126   */\ntag_129:\n    /* \"#utility.yul\":6590:7133   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7139:7256   */\ntag_45:\n    /* \"#utility.yul\":7193:7201   */\n  0x00\n    /* \"#utility.yul\":7243:7248   */\n  dup3\n    /* \"#utility.yul\":7237:7241   */\n  dup3\n    /* \"#utility.yul\":7233:7249   */\n  shr\n    /* \"#utility.yul\":7212:7249   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7431   */\ntag_46:\n    /* \"#utility.yul\":7306:7312   */\n  0x00\n    /* \"#utility.yul\":7339:7390   */\n  tag_137\n    /* \"#utility.yul\":7387:7388   */\n  0x00\n    /* \"#utility.yul\":7383:7389   */\n  not\n    /* \"#utility.yul\":7375:7380   */\n  dup5\n    /* \"#utility.yul\":7372:7373   */\n  0x08\n    /* \"#utility.yul\":7368:7381   */\n  mul\n    /* \"#utility.yul\":7339:7390   */\n  tag_45\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7335:7391   */\n  not\n    /* \"#utility.yul\":7420:7424   */\n  dup1\n    /* \"#utility.yul\":7414:7418   */\n  dup4\n    /* \"#utility.yul\":7410:7425   */\n  and\n    /* \"#utility.yul\":7400:7425   */\n  swap2\n  pop\n    /* \"#utility.yul\":7313:7431   */\n  pop\n    /* \"#utility.yul\":7262:7431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7731   */\ntag_47:\n    /* \"#utility.yul\":7512:7516   */\n  0x00\n    /* \"#utility.yul\":7658:7687   */\n  tag_139\n    /* \"#utility.yul\":7683:7686   */\n  dup4\n    /* \"#utility.yul\":7677:7681   */\n  dup4\n    /* \"#utility.yul\":7658:7687   */\n  tag_46\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7650:7687   */\n  swap2\n  pop\n    /* \"#utility.yul\":7720:7723   */\n  dup3\n    /* \"#utility.yul\":7717:7718   */\n  0x02\n    /* \"#utility.yul\":7713:7724   */\n  mul\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7704:7725   */\n  or\n    /* \"#utility.yul\":7696:7725   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:9131   */\ntag_8:\n    /* \"#utility.yul\":7853:7890   */\n  tag_141\n    /* \"#utility.yul\":7886:7889   */\n  dup3\n    /* \"#utility.yul\":7853:7890   */\n  tag_29\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7955:7973   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7947:7953   */\n  dup2\n    /* \"#utility.yul\":7944:7974   */\n  gt\n    /* \"#utility.yul\":7941:7997   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":7977:7995   */\n  tag_143\n  tag_18\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7941:7997   */\ntag_142:\n    /* \"#utility.yul\":8021:8059   */\n  tag_144\n    /* \"#utility.yul\":8053:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8058   */\n  sload\n    /* \"#utility.yul\":8021:8059   */\n  tag_31\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8106:8173   */\n  tag_145\n    /* \"#utility.yul\":8166:8172   */\n  dup3\n    /* \"#utility.yul\":8158:8164   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup6\n    /* \"#utility.yul\":8106:8173   */\n  tag_44\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8200:8201   */\n  0x00\n    /* \"#utility.yul\":8224:8228   */\n  0x20\n    /* \"#utility.yul\":8211:8228   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8258   */\n  0x1f\n    /* \"#utility.yul\":8248:8254   */\n  dup4\n    /* \"#utility.yul\":8245:8259   */\n  gt\n    /* \"#utility.yul\":8273:8274   */\n  0x01\n    /* \"#utility.yul\":8268:8886   */\n  dup2\n  eq\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8930:8931   */\n  0x00\n    /* \"#utility.yul\":8947:8953   */\n  dup5\n    /* \"#utility.yul\":8944:9021   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":8996:9005   */\n  dup3\n    /* \"#utility.yul\":8991:8994   */\n  dup8\n    /* \"#utility.yul\":8987:9006   */\n  add\n    /* \"#utility.yul\":8981:9007   */\n  mload\n    /* \"#utility.yul\":8972:9007   */\n  swap1\n  pop\n    /* \"#utility.yul\":8944:9021   */\ntag_148:\n    /* \"#utility.yul\":9047:9114   */\n  tag_149\n    /* \"#utility.yul\":9107:9113   */\n  dup6\n    /* \"#utility.yul\":9100:9105   */\n  dup3\n    /* \"#utility.yul\":9047:9114   */\n  tag_47\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":9041:9045   */\n  dup7\n    /* \"#utility.yul\":9034:9115   */\n  sstore\n    /* \"#utility.yul\":8903:9125   */\n  pop\n    /* \"#utility.yul\":8238:9125   */\n  jump(tag_146)\n    /* \"#utility.yul\":8268:8886   */\ntag_147:\n    /* \"#utility.yul\":8320:8324   */\n  0x1f\n    /* \"#utility.yul\":8316:8325   */\n  not\n    /* \"#utility.yul\":8308:8314   */\n  dup5\n    /* \"#utility.yul\":8304:8326   */\n  and\n    /* \"#utility.yul\":8354:8391   */\n  tag_150\n    /* \"#utility.yul\":8386:8390   */\n  dup7\n    /* \"#utility.yul\":8354:8391   */\n  tag_32\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8413:8414   */\n  0x00\n    /* \"#utility.yul\":8427:8635   */\ntag_151:\n    /* \"#utility.yul\":8441:8448   */\n  dup3\n    /* \"#utility.yul\":8438:8439   */\n  dup2\n    /* \"#utility.yul\":8435:8449   */\n  lt\n    /* \"#utility.yul\":8427:8635   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8520:8529   */\n  dup5\n    /* \"#utility.yul\":8515:8518   */\n  dup10\n    /* \"#utility.yul\":8511:8530   */\n  add\n    /* \"#utility.yul\":8505:8531   */\n  mload\n    /* \"#utility.yul\":8497:8503   */\n  dup3\n    /* \"#utility.yul\":8490:8532   */\n  sstore\n    /* \"#utility.yul\":8571:8572   */\n  0x01\n    /* \"#utility.yul\":8563:8569   */\n  dup3\n    /* \"#utility.yul\":8559:8573   */\n  add\n    /* \"#utility.yul\":8549:8573   */\n  swap2\n  pop\n    /* \"#utility.yul\":8618:8620   */\n  0x20\n    /* \"#utility.yul\":8607:8616   */\n  dup6\n    /* \"#utility.yul\":8603:8621   */\n  add\n    /* \"#utility.yul\":8590:8621   */\n  swap5\n  pop\n    /* \"#utility.yul\":8464:8468   */\n  0x20\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8457:8469   */\n  add\n    /* \"#utility.yul\":8452:8469   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8635   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":8663:8669   */\n  dup7\n    /* \"#utility.yul\":8654:8661   */\n  dup4\n    /* \"#utility.yul\":8651:8670   */\n  lt\n    /* \"#utility.yul\":8648:8827   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8721:8730   */\n  dup5\n    /* \"#utility.yul\":8716:8719   */\n  dup10\n    /* \"#utility.yul\":8712:8731   */\n  add\n    /* \"#utility.yul\":8706:8732   */\n  mload\n    /* \"#utility.yul\":8764:8812   */\n  tag_155\n    /* \"#utility.yul\":8806:8810   */\n  0x1f\n    /* \"#utility.yul\":8798:8804   */\n  dup10\n    /* \"#utility.yul\":8794:8811   */\n  and\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8764:8812   */\n  tag_46\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8756:8762   */\n  dup4\n    /* \"#utility.yul\":8749:8813   */\n  sstore\n    /* \"#utility.yul\":8671:8827   */\n  pop\n    /* \"#utility.yul\":8648:8827   */\ntag_154:\n    /* \"#utility.yul\":8873:8874   */\n  0x01\n    /* \"#utility.yul\":8869:8870   */\n  0x02\n    /* \"#utility.yul\":8861:8867   */\n  dup9\n    /* \"#utility.yul\":8857:8871   */\n  mul\n    /* \"#utility.yul\":8853:8875   */\n  add\n    /* \"#utility.yul\":8847:8851   */\n  dup9\n    /* \"#utility.yul\":8840:8876   */\n  sstore\n    /* \"#utility.yul\":8275:8886   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8238:9125   */\ntag_146:\n  pop\n    /* \"#utility.yul\":7828:9131   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7736:9131   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/l2/t1/SignatureNFT.sol\":254:1878  contract SignatureNFT is ERC721 {... */\ntag_11:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x07b06f230b995d022db8c49d76ce50023a36b147c3153d93f7ae059cef27fe9b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/l2/t1/SignatureNFT.sol\":254:1878  contract SignatureNFT is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x630303c6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x630303c6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x94d008ef\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x238ac933\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x258ae582\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x512c91df\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":292:323  address immutable public signer */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1670:1876  function verify(bytes32 _msgHash, bytes memory _signature) ... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1451:1611  function getMessageHash(address _account, uint256 _tokenId) public pure returns(bytes32) {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/l2/t1/SignatureNFT.sol\":344:390  mapping (address => bool) public mintedAddress */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/l2/t1/SignatureNFT.sol\":597:1172  function mint(address _account, uint256 _tokenId, bytes memory _signature) external {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_103\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_109\n      jump\t// in\n    tag_110:\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/l2/t1/SignatureNFT.sol\":292:323  address immutable public signer */\n    tag_45:\n      immutable(\"0x07b06f230b995d022db8c49d76ce50023a36b147c3153d93f7ae059cef27fe9b\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1670:1876  function verify(bytes32 _msgHash, bytes memory _signature) ... */\n    tag_54:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1758:1762  bool */\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1778:1795  address recovered */\n      dup1\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1798:1833  ECDSA.recover(_msgHash, _signature) */\n      tag_134\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1812:1820  _msgHash */\n      dup5\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1822:1832  _signature */\n      dup5\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1798:1811  ECDSA.recover */\n      tag_135\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1798:1833  ECDSA.recover(_msgHash, _signature) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1778:1833  address recovered = ECDSA.recover(_msgHash, _signature) */\n      swap1\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1863:1869  signer */\n      immutable(\"0x07b06f230b995d022db8c49d76ce50023a36b147c3153d93f7ae059cef27fe9b\")\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1850:1869  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1850:1859  recovered */\n      dup2\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1850:1869  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1843:1869  return recovered == signer */\n      swap2\n      pop\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1670:1876  function verify(bytes32 _msgHash, bytes memory _signature) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1451:1611  function getMessageHash(address _account, uint256 _tokenId) public pure returns(bytes32) {... */\n    tag_61:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1531:1538  bytes32 */\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1584:1592  _account */\n      dup3\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1594:1602  _tokenId */\n      dup3\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1567:1603  abi.encodePacked(_account, _tokenId) */\n      add(0x20, mload(0x40))\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1557:1604  keccak256(abi.encodePacked(_account, _tokenId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1550:1604  return keccak256(abi.encodePacked(_account, _tokenId)) */\n      swap1\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1451:1611  function getMessageHash(address _account, uint256 _tokenId) public pure returns(bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/l2/t1/SignatureNFT.sol\":344:390  mapping (address => bool) public mintedAddress */\n    tag_67:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/l2/t1/SignatureNFT.sol\":597:1172  function mint(address _account, uint256 _tokenId, bytes memory _signature) external {... */\n    tag_81:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":691:707  bytes32 _msgHash */\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":710:744  getMessageHash(_account, _tokenId) */\n      tag_147\n        /* \"contracts/l2/t1/SignatureNFT.sol\":725:733  _account */\n      dup5\n        /* \"contracts/l2/t1/SignatureNFT.sol\":735:743  _tokenId */\n      dup5\n        /* \"contracts/l2/t1/SignatureNFT.sol\":710:724  getMessageHash */\n      tag_61\n        /* \"contracts/l2/t1/SignatureNFT.sol\":710:744  getMessageHash(_account, _tokenId) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":691:744  bytes32 _msgHash = getMessageHash(_account, _tokenId) */\n      swap1\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":791:820  bytes32 _ethSignedMessageHash */\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":823:872  MessageHashUtils.toEthSignedMessageHash(_msgHash) */\n      tag_148\n        /* \"contracts/l2/t1/SignatureNFT.sol\":863:871  _msgHash */\n      dup3\n        /* \"contracts/l2/t1/SignatureNFT.sol\":823:862  MessageHashUtils.toEthSignedMessageHash */\n      tag_149\n        /* \"contracts/l2/t1/SignatureNFT.sol\":823:872  MessageHashUtils.toEthSignedMessageHash(_msgHash) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":791:872  bytes32 _ethSignedMessageHash = MessageHashUtils.toEthSignedMessageHash(_msgHash) */\n      swap1\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":891:932  verify(_ethSignedMessageHash, _signature) */\n      tag_150\n        /* \"contracts/l2/t1/SignatureNFT.sol\":898:919  _ethSignedMessageHash */\n      dup2\n        /* \"contracts/l2/t1/SignatureNFT.sol\":921:931  _signature */\n      dup5\n        /* \"contracts/l2/t1/SignatureNFT.sol\":891:897  verify */\n      tag_54\n        /* \"contracts/l2/t1/SignatureNFT.sol\":891:932  verify(_ethSignedMessageHash, _signature) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":883:954  require(verify(_ethSignedMessageHash, _signature), \"Invalid signature\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":993:1006  mintedAddress */\n      0x06\n        /* \"contracts/l2/t1/SignatureNFT.sol\":993:1016  mintedAddress[_account] */\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1007:1015  _account */\n      dup7\n        /* \"contracts/l2/t1/SignatureNFT.sol\":993:1016  mintedAddress[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/l2/t1/SignatureNFT.sol\":992:1016  !mintedAddress[_account] */\n      iszero\n        /* \"contracts/l2/t1/SignatureNFT.sol\":984:1036  require(!mintedAddress[_account], \"Already minted!\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1068:1093  _mint(_account, _tokenId) */\n      tag_157\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1074:1082  _account */\n      dup6\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1084:1092  _tokenId */\n      dup6\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1068:1073  _mint */\n      tag_158\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1068:1093  _mint(_account, _tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1136:1140  true */\n      0x01\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1110:1123  mintedAddress */\n      0x06\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1110:1133  mintedAddress[_account] */\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1124:1132  _account */\n      dup8\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1110:1133  mintedAddress[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/l2/t1/SignatureNFT.sol\":1110:1140  mintedAddress[_account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":681:1172  {... */\n      pop\n      pop\n        /* \"contracts/l2/t1/SignatureNFT.sol\":597:1172  function mint(address _account, uint256 _tokenId, bytes memory _signature) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_109\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_109\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_50\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_177\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_178)\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3702:3957  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3780:3787  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3817  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3819:3837  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3839:3855  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3870:3874  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3876:3885  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3859:3869  tryRecover */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3799:3886  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3896:3924  _throwError(error, errorArg) */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3913  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3915:3923  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3896:3907  _throwError */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3896:3924  _throwError(error, errorArg) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3941:3950  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3934:3950  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3702:3957  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1222:1682  function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1298:1312  bytes32 digest */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1403:1437  \"\\x19Ethereum Signed Message:\\n32\" */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1397:1401  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1390:1438  mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1505:1516  messageHash */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1499:1503  0x1c */\n      0x1c\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1492:1517  mstore(0x1c, messageHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1597:1601  0x3c */\n      0x3c\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1591:1595  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1581:1602  keccak256(0x00, 0x3c) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1571:1602  digest := keccak256(0x00, 0x3c) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1222:1682  function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      0x01\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_227\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_232\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_231)\n    tag_232:\n      0x60\n      swap2\n      pop\n    tag_231:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_244:\n    tag_243:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_246\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_246:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_249\n      jumpi\n      tag_250\n      tag_251\n      jump\t// in\n    tag_250:\n    tag_249:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_247\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_255\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_258\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2210:2217  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2219:2231  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2233:2240  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2276:2278  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2265  signature */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2272  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2278  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2294:2303  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2317:2326  bytes32 s */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2340:2347  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2592:2596  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2581:2590  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2577:2597  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2571:2598  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2566:2598  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2641:2645  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2630:2639  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2626:2646  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2620:2647  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2615:2647  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2698:2702  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2687:2696  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2683:2703  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2677:2704  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2674:2675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2669:2705  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2664:2705  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      tag_275\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2750:2754  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2756:2757  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2759:2760  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2762:2763  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2749  tryRecover */\n      tag_276\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2732:2764  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_273)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2811:2812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2815:2850  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2860:2869  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2860:2876  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2852:2877  bytes32(signature.length) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2795:2878  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_273:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_279\n      jumpi\n      tag_280\n      tag_281\n      jump\t// in\n    tag_280:\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_281\n      jump\t// in\n    tag_283:\n    tag_282:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_286\n      jumpi\n      tag_287\n      tag_281\n      jump\t// in\n    tag_287:\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_288\n      jumpi\n      tag_289\n      tag_281\n      jump\t// in\n    tag_289:\n    tag_288:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_292\n      jumpi\n      tag_293\n      tag_281\n      jump\t// in\n    tag_293:\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_294\n      jumpi\n      tag_295\n      tag_281\n      jump\t// in\n    tag_295:\n    tag_294:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_299\n      jumpi\n      tag_300\n      tag_281\n      jump\t// in\n    tag_300:\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_302\n      tag_281\n      jump\t// in\n    tag_302:\n    tag_301:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_278:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_307\n      jumpi\n      tag_308\n      tag_251\n      jump\t// in\n    tag_308:\n    tag_307:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_310\n      jumpi\n      tag_311\n      tag_251\n      jump\t// in\n    tag_311:\n    tag_310:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_313\n      jumpi\n      tag_314\n      tag_251\n      jump\t// in\n    tag_314:\n    tag_313:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_316\n      jumpi\n      tag_317\n      tag_251\n      jump\t// in\n    tag_317:\n    tag_316:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_319\n      jumpi\n      tag_320\n      tag_251\n      jump\t// in\n    tag_320:\n    tag_319:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_322\n      jumpi\n      tag_323\n      tag_251\n      jump\t// in\n    tag_323:\n    tag_322:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_326\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_327\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_329\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_331)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_333\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_336:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_331)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_331:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_338:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_339:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_340:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_341:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_342:\n        /* \"#utility.yul\":561:584   */\n      tag_399\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_341\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_400:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_343:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_402\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_342\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_405\n      tag_339\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":833:952   */\n    tag_404:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_406\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_343\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_344:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_345:\n        /* \"#utility.yul\":1268:1289   */\n      tag_409\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_344\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_411\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_345\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_346:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_347:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_348:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_349:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_350:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_417\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_346\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2222:2293   */\n      tag_418\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_347\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_419\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_348\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2392:2421   */\n      tag_420\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_349\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_422\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_350\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_351:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_352:\n        /* \"#utility.yul\":2909:2933   */\n      tag_425\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_351\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_426:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_353:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_428\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_352\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_36:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_431\n      tag_339\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3185:3304   */\n    tag_430:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_432\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_353\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_354:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_355:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_435\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_354\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_356:\n        /* \"#utility.yul\":3765:3789   */\n      tag_437\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_355\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_39:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_439\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_356\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_357:\n        /* \"#utility.yul\":4103:4127   */\n      tag_441\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_355\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_442:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_358:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_444\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_357\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_42:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_447\n      tag_339\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4396:4515   */\n    tag_446:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_448\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_358\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_449\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_353\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_49:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_452\n      tag_339\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4893:5012   */\n    tag_451:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_453\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_358\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_454\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_358\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_455\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_353\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_359:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_360:\n        /* \"#utility.yul\":5564:5588   */\n      tag_458\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_359\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_459:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_361:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_461\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_360\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5881   */\n    tag_362:\n        /* \"#utility.yul\":5873:5874   */\n      0x00\n        /* \"#utility.yul\":5870:5871   */\n      dup1\n        /* \"#utility.yul\":5863:5875   */\n      revert\n        /* \"#utility.yul\":5887:6004   */\n    tag_363:\n        /* \"#utility.yul\":5996:5997   */\n      0x00\n        /* \"#utility.yul\":5993:5994   */\n      dup1\n        /* \"#utility.yul\":5986:5998   */\n      revert\n        /* \"#utility.yul\":6010:6190   */\n    tag_245:\n        /* \"#utility.yul\":6058:6135   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6055:6056   */\n      0x00\n        /* \"#utility.yul\":6048:6136   */\n      mstore\n        /* \"#utility.yul\":6155:6159   */\n      0x41\n        /* \"#utility.yul\":6152:6153   */\n      0x04\n        /* \"#utility.yul\":6145:6160   */\n      mstore\n        /* \"#utility.yul\":6179:6183   */\n      0x24\n        /* \"#utility.yul\":6176:6177   */\n      0x00\n        /* \"#utility.yul\":6169:6184   */\n      revert\n        /* \"#utility.yul\":6196:6477   */\n    tag_364:\n        /* \"#utility.yul\":6279:6306   */\n      tag_466\n        /* \"#utility.yul\":6301:6305   */\n      dup3\n        /* \"#utility.yul\":6279:6306   */\n      tag_349\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6271:6277   */\n      dup2\n        /* \"#utility.yul\":6267:6307   */\n      add\n        /* \"#utility.yul\":6409:6415   */\n      dup2\n        /* \"#utility.yul\":6397:6407   */\n      dup2\n        /* \"#utility.yul\":6394:6416   */\n      lt\n        /* \"#utility.yul\":6373:6391   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6361:6371   */\n      dup3\n        /* \"#utility.yul\":6358:6392   */\n      gt\n        /* \"#utility.yul\":6355:6417   */\n      or\n        /* \"#utility.yul\":6352:6440   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6420:6438   */\n      tag_468\n      tag_245\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6352:6440   */\n    tag_467:\n        /* \"#utility.yul\":6460:6470   */\n      dup1\n        /* \"#utility.yul\":6456:6458   */\n      0x40\n        /* \"#utility.yul\":6449:6471   */\n      mstore\n        /* \"#utility.yul\":6239:6477   */\n      pop\n        /* \"#utility.yul\":6196:6477   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6483:6612   */\n    tag_365:\n        /* \"#utility.yul\":6517:6523   */\n      0x00\n        /* \"#utility.yul\":6544:6564   */\n      tag_470\n      tag_338\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6534:6564   */\n      swap1\n      pop\n        /* \"#utility.yul\":6573:6606   */\n      tag_471\n        /* \"#utility.yul\":6601:6605   */\n      dup3\n        /* \"#utility.yul\":6593:6599   */\n      dup3\n        /* \"#utility.yul\":6573:6606   */\n      tag_364\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6483:6612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6618:6925   */\n    tag_366:\n        /* \"#utility.yul\":6679:6683   */\n      0x00\n        /* \"#utility.yul\":6769:6787   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6761:6767   */\n      dup3\n        /* \"#utility.yul\":6758:6788   */\n      gt\n        /* \"#utility.yul\":6755:6811   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":6791:6809   */\n      tag_474\n      tag_245\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6755:6811   */\n    tag_473:\n        /* \"#utility.yul\":6829:6858   */\n      tag_475\n        /* \"#utility.yul\":6851:6857   */\n      dup3\n        /* \"#utility.yul\":6829:6858   */\n      tag_349\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6821:6858   */\n      swap1\n      pop\n        /* \"#utility.yul\":6913:6917   */\n      0x20\n        /* \"#utility.yul\":6907:6911   */\n      dup2\n        /* \"#utility.yul\":6903:6918   */\n      add\n        /* \"#utility.yul\":6895:6918   */\n      swap1\n      pop\n        /* \"#utility.yul\":6618:6925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7079   */\n    tag_367:\n        /* \"#utility.yul\":7029:7035   */\n      dup3\n        /* \"#utility.yul\":7024:7027   */\n      dup2\n        /* \"#utility.yul\":7019:7022   */\n      dup4\n        /* \"#utility.yul\":7006:7036   */\n      calldatacopy\n        /* \"#utility.yul\":7070:7071   */\n      0x00\n        /* \"#utility.yul\":7061:7067   */\n      dup4\n        /* \"#utility.yul\":7056:7059   */\n      dup4\n        /* \"#utility.yul\":7052:7068   */\n      add\n        /* \"#utility.yul\":7045:7072   */\n      mstore\n        /* \"#utility.yul\":6931:7079   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7085:7508   */\n    tag_368:\n        /* \"#utility.yul\":7162:7167   */\n      0x00\n        /* \"#utility.yul\":7187:7252   */\n      tag_478\n        /* \"#utility.yul\":7203:7251   */\n      tag_479\n        /* \"#utility.yul\":7244:7250   */\n      dup5\n        /* \"#utility.yul\":7203:7251   */\n      tag_366\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7187:7252   */\n      tag_365\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7178:7252   */\n      swap1\n      pop\n        /* \"#utility.yul\":7275:7281   */\n      dup3\n        /* \"#utility.yul\":7268:7273   */\n      dup2\n        /* \"#utility.yul\":7261:7282   */\n      mstore\n        /* \"#utility.yul\":7313:7317   */\n      0x20\n        /* \"#utility.yul\":7306:7311   */\n      dup2\n        /* \"#utility.yul\":7302:7318   */\n      add\n        /* \"#utility.yul\":7351:7354   */\n      dup5\n        /* \"#utility.yul\":7342:7348   */\n      dup5\n        /* \"#utility.yul\":7337:7340   */\n      dup5\n        /* \"#utility.yul\":7333:7349   */\n      add\n        /* \"#utility.yul\":7330:7355   */\n      gt\n        /* \"#utility.yul\":7327:7439   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":7358:7437   */\n      tag_481\n      tag_363\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7327:7439   */\n    tag_480:\n        /* \"#utility.yul\":7448:7502   */\n      tag_482\n        /* \"#utility.yul\":7495:7501   */\n      dup5\n        /* \"#utility.yul\":7490:7493   */\n      dup3\n        /* \"#utility.yul\":7485:7488   */\n      dup6\n        /* \"#utility.yul\":7448:7502   */\n      tag_367\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7168:7508   */\n      pop\n        /* \"#utility.yul\":7085:7508   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7527:7865   */\n    tag_369:\n        /* \"#utility.yul\":7582:7587   */\n      0x00\n        /* \"#utility.yul\":7631:7634   */\n      dup3\n        /* \"#utility.yul\":7624:7628   */\n      0x1f\n        /* \"#utility.yul\":7616:7622   */\n      dup4\n        /* \"#utility.yul\":7612:7629   */\n      add\n        /* \"#utility.yul\":7608:7635   */\n      slt\n        /* \"#utility.yul\":7598:7720   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":7639:7718   */\n      tag_485\n      tag_362\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7598:7720   */\n    tag_484:\n        /* \"#utility.yul\":7756:7762   */\n      dup2\n        /* \"#utility.yul\":7743:7763   */\n      calldataload\n        /* \"#utility.yul\":7781:7859   */\n      tag_486\n        /* \"#utility.yul\":7855:7858   */\n      dup5\n        /* \"#utility.yul\":7847:7853   */\n      dup3\n        /* \"#utility.yul\":7840:7844   */\n      0x20\n        /* \"#utility.yul\":7832:7838   */\n      dup7\n        /* \"#utility.yul\":7828:7845   */\n      add\n        /* \"#utility.yul\":7781:7859   */\n      tag_368\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7772:7859   */\n      swap2\n      pop\n        /* \"#utility.yul\":7588:7865   */\n      pop\n        /* \"#utility.yul\":7527:7865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7871:8523   */\n    tag_53:\n        /* \"#utility.yul\":7948:7954   */\n      0x00\n        /* \"#utility.yul\":7956:7962   */\n      dup1\n        /* \"#utility.yul\":8005:8007   */\n      0x40\n        /* \"#utility.yul\":7993:8002   */\n      dup4\n        /* \"#utility.yul\":7984:7991   */\n      dup6\n        /* \"#utility.yul\":7980:8003   */\n      sub\n        /* \"#utility.yul\":7976:8008   */\n      slt\n        /* \"#utility.yul\":7973:8092   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8011:8090   */\n      tag_489\n      tag_339\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7973:8092   */\n    tag_488:\n        /* \"#utility.yul\":8131:8132   */\n      0x00\n        /* \"#utility.yul\":8156:8209   */\n      tag_490\n        /* \"#utility.yul\":8201:8208   */\n      dup6\n        /* \"#utility.yul\":8192:8198   */\n      dup3\n        /* \"#utility.yul\":8181:8190   */\n      dup7\n        /* \"#utility.yul\":8177:8199   */\n      add\n        /* \"#utility.yul\":8156:8209   */\n      tag_361\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8146:8209   */\n      swap3\n      pop\n        /* \"#utility.yul\":8102:8219   */\n      pop\n        /* \"#utility.yul\":8286:8288   */\n      0x20\n        /* \"#utility.yul\":8275:8284   */\n      dup4\n        /* \"#utility.yul\":8271:8289   */\n      add\n        /* \"#utility.yul\":8258:8290   */\n      calldataload\n        /* \"#utility.yul\":8317:8335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8309:8315   */\n      dup2\n        /* \"#utility.yul\":8306:8336   */\n      gt\n        /* \"#utility.yul\":8303:8420   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":8339:8418   */\n      tag_492\n      tag_340\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8303:8420   */\n    tag_491:\n        /* \"#utility.yul\":8444:8506   */\n      tag_493\n        /* \"#utility.yul\":8498:8505   */\n      dup6\n        /* \"#utility.yul\":8489:8495   */\n      dup3\n        /* \"#utility.yul\":8478:8487   */\n      dup7\n        /* \"#utility.yul\":8474:8496   */\n      add\n        /* \"#utility.yul\":8444:8506   */\n      tag_369\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8434:8506   */\n      swap2\n      pop\n        /* \"#utility.yul\":8229:8516   */\n      pop\n        /* \"#utility.yul\":7871:8523   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8529:8647   */\n    tag_370:\n        /* \"#utility.yul\":8616:8640   */\n      tag_495\n        /* \"#utility.yul\":8634:8639   */\n      dup2\n        /* \"#utility.yul\":8616:8640   */\n      tag_359\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8611:8614   */\n      dup3\n        /* \"#utility.yul\":8604:8641   */\n      mstore\n        /* \"#utility.yul\":8529:8647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8653:8875   */\n    tag_63:\n        /* \"#utility.yul\":8746:8750   */\n      0x00\n        /* \"#utility.yul\":8784:8786   */\n      0x20\n        /* \"#utility.yul\":8773:8782   */\n      dup3\n        /* \"#utility.yul\":8769:8787   */\n      add\n        /* \"#utility.yul\":8761:8787   */\n      swap1\n      pop\n        /* \"#utility.yul\":8797:8868   */\n      tag_497\n        /* \"#utility.yul\":8865:8866   */\n      0x00\n        /* \"#utility.yul\":8854:8863   */\n      dup4\n        /* \"#utility.yul\":8850:8867   */\n      add\n        /* \"#utility.yul\":8841:8847   */\n      dup5\n        /* \"#utility.yul\":8797:8868   */\n      tag_370\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8653:8875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8881:9210   */\n    tag_66:\n        /* \"#utility.yul\":8940:8946   */\n      0x00\n        /* \"#utility.yul\":8989:8991   */\n      0x20\n        /* \"#utility.yul\":8977:8986   */\n      dup3\n        /* \"#utility.yul\":8968:8975   */\n      dup5\n        /* \"#utility.yul\":8964:8987   */\n      sub\n        /* \"#utility.yul\":8960:8992   */\n      slt\n        /* \"#utility.yul\":8957:9076   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":8995:9074   */\n      tag_500\n      tag_339\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8957:9076   */\n    tag_499:\n        /* \"#utility.yul\":9115:9116   */\n      0x00\n        /* \"#utility.yul\":9140:9193   */\n      tag_501\n        /* \"#utility.yul\":9185:9192   */\n      dup5\n        /* \"#utility.yul\":9176:9182   */\n      dup3\n        /* \"#utility.yul\":9165:9174   */\n      dup6\n        /* \"#utility.yul\":9161:9183   */\n      add\n        /* \"#utility.yul\":9140:9193   */\n      tag_358\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9130:9193   */\n      swap2\n      pop\n        /* \"#utility.yul\":9086:9203   */\n      pop\n        /* \"#utility.yul\":8881:9210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9216:9334   */\n    tag_371:\n        /* \"#utility.yul\":9303:9327   */\n      tag_503\n        /* \"#utility.yul\":9321:9326   */\n      dup2\n        /* \"#utility.yul\":9303:9327   */\n      tag_351\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9298:9301   */\n      dup3\n        /* \"#utility.yul\":9291:9328   */\n      mstore\n        /* \"#utility.yul\":9216:9334   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9562   */\n    tag_77:\n        /* \"#utility.yul\":9433:9437   */\n      0x00\n        /* \"#utility.yul\":9471:9473   */\n      0x20\n        /* \"#utility.yul\":9460:9469   */\n      dup3\n        /* \"#utility.yul\":9456:9474   */\n      add\n        /* \"#utility.yul\":9448:9474   */\n      swap1\n      pop\n        /* \"#utility.yul\":9484:9555   */\n      tag_505\n        /* \"#utility.yul\":9552:9553   */\n      0x00\n        /* \"#utility.yul\":9541:9550   */\n      dup4\n        /* \"#utility.yul\":9537:9554   */\n      add\n        /* \"#utility.yul\":9528:9534   */\n      dup5\n        /* \"#utility.yul\":9484:9555   */\n      tag_371\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9340:9562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9568:10365   */\n    tag_80:\n        /* \"#utility.yul\":9654:9660   */\n      0x00\n        /* \"#utility.yul\":9662:9668   */\n      dup1\n        /* \"#utility.yul\":9670:9676   */\n      0x00\n        /* \"#utility.yul\":9719:9721   */\n      0x60\n        /* \"#utility.yul\":9707:9716   */\n      dup5\n        /* \"#utility.yul\":9698:9705   */\n      dup7\n        /* \"#utility.yul\":9694:9717   */\n      sub\n        /* \"#utility.yul\":9690:9722   */\n      slt\n        /* \"#utility.yul\":9687:9806   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":9725:9804   */\n      tag_508\n      tag_339\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9687:9806   */\n    tag_507:\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9870:9923   */\n      tag_509\n        /* \"#utility.yul\":9915:9922   */\n      dup7\n        /* \"#utility.yul\":9906:9912   */\n      dup3\n        /* \"#utility.yul\":9895:9904   */\n      dup8\n        /* \"#utility.yul\":9891:9913   */\n      add\n        /* \"#utility.yul\":9870:9923   */\n      tag_358\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9860:9923   */\n      swap4\n      pop\n        /* \"#utility.yul\":9816:9933   */\n      pop\n        /* \"#utility.yul\":9972:9974   */\n      0x20\n        /* \"#utility.yul\":9998:10051   */\n      tag_510\n        /* \"#utility.yul\":10043:10050   */\n      dup7\n        /* \"#utility.yul\":10034:10040   */\n      dup3\n        /* \"#utility.yul\":10023:10032   */\n      dup8\n        /* \"#utility.yul\":10019:10041   */\n      add\n        /* \"#utility.yul\":9998:10051   */\n      tag_353\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9988:10051   */\n      swap3\n      pop\n        /* \"#utility.yul\":9943:10061   */\n      pop\n        /* \"#utility.yul\":10128:10130   */\n      0x40\n        /* \"#utility.yul\":10117:10126   */\n      dup5\n        /* \"#utility.yul\":10113:10131   */\n      add\n        /* \"#utility.yul\":10100:10132   */\n      calldataload\n        /* \"#utility.yul\":10159:10177   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10151:10157   */\n      dup2\n        /* \"#utility.yul\":10148:10178   */\n      gt\n        /* \"#utility.yul\":10145:10262   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":10181:10260   */\n      tag_512\n      tag_340\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10145:10262   */\n    tag_511:\n        /* \"#utility.yul\":10286:10348   */\n      tag_513\n        /* \"#utility.yul\":10340:10347   */\n      dup7\n        /* \"#utility.yul\":10331:10337   */\n      dup3\n        /* \"#utility.yul\":10320:10329   */\n      dup8\n        /* \"#utility.yul\":10316:10338   */\n      add\n        /* \"#utility.yul\":10286:10348   */\n      tag_369\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10276:10348   */\n      swap2\n      pop\n        /* \"#utility.yul\":10071:10358   */\n      pop\n        /* \"#utility.yul\":9568:10365   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10371:10487   */\n    tag_372:\n        /* \"#utility.yul\":10441:10462   */\n      tag_515\n        /* \"#utility.yul\":10456:10461   */\n      dup2\n        /* \"#utility.yul\":10441:10462   */\n      tag_344\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10434:10439   */\n      dup2\n        /* \"#utility.yul\":10431:10463   */\n      eq\n        /* \"#utility.yul\":10421:10481   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":10477:10478   */\n      0x00\n        /* \"#utility.yul\":10474:10475   */\n      dup1\n        /* \"#utility.yul\":10467:10479   */\n      revert\n        /* \"#utility.yul\":10421:10481   */\n    tag_516:\n        /* \"#utility.yul\":10371:10487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10493:10626   */\n    tag_373:\n        /* \"#utility.yul\":10536:10541   */\n      0x00\n        /* \"#utility.yul\":10574:10580   */\n      dup2\n        /* \"#utility.yul\":10561:10581   */\n      calldataload\n        /* \"#utility.yul\":10552:10581   */\n      swap1\n      pop\n        /* \"#utility.yul\":10590:10620   */\n      tag_518\n        /* \"#utility.yul\":10614:10619   */\n      dup2\n        /* \"#utility.yul\":10590:10620   */\n      tag_372\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10493:10626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10632:11100   */\n    tag_87:\n        /* \"#utility.yul\":10697:10703   */\n      0x00\n        /* \"#utility.yul\":10705:10711   */\n      dup1\n        /* \"#utility.yul\":10754:10756   */\n      0x40\n        /* \"#utility.yul\":10742:10751   */\n      dup4\n        /* \"#utility.yul\":10733:10740   */\n      dup6\n        /* \"#utility.yul\":10729:10752   */\n      sub\n        /* \"#utility.yul\":10725:10757   */\n      slt\n        /* \"#utility.yul\":10722:10841   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10760:10839   */\n      tag_521\n      tag_339\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10722:10841   */\n    tag_520:\n        /* \"#utility.yul\":10880:10881   */\n      0x00\n        /* \"#utility.yul\":10905:10958   */\n      tag_522\n        /* \"#utility.yul\":10950:10957   */\n      dup6\n        /* \"#utility.yul\":10941:10947   */\n      dup3\n        /* \"#utility.yul\":10930:10939   */\n      dup7\n        /* \"#utility.yul\":10926:10948   */\n      add\n        /* \"#utility.yul\":10905:10958   */\n      tag_358\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10895:10958   */\n      swap3\n      pop\n        /* \"#utility.yul\":10851:10968   */\n      pop\n        /* \"#utility.yul\":11007:11009   */\n      0x20\n        /* \"#utility.yul\":11033:11083   */\n      tag_523\n        /* \"#utility.yul\":11075:11082   */\n      dup6\n        /* \"#utility.yul\":11066:11072   */\n      dup3\n        /* \"#utility.yul\":11055:11064   */\n      dup7\n        /* \"#utility.yul\":11051:11073   */\n      add\n        /* \"#utility.yul\":11033:11083   */\n      tag_373\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11023:11083   */\n      swap2\n      pop\n        /* \"#utility.yul\":10978:11093   */\n      pop\n        /* \"#utility.yul\":10632:11100   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11106:12049   */\n    tag_91:\n        /* \"#utility.yul\":11201:11207   */\n      0x00\n        /* \"#utility.yul\":11209:11215   */\n      dup1\n        /* \"#utility.yul\":11217:11223   */\n      0x00\n        /* \"#utility.yul\":11225:11231   */\n      dup1\n        /* \"#utility.yul\":11274:11277   */\n      0x80\n        /* \"#utility.yul\":11262:11271   */\n      dup6\n        /* \"#utility.yul\":11253:11260   */\n      dup8\n        /* \"#utility.yul\":11249:11272   */\n      sub\n        /* \"#utility.yul\":11245:11278   */\n      slt\n        /* \"#utility.yul\":11242:11362   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":11281:11360   */\n      tag_526\n      tag_339\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11242:11362   */\n    tag_525:\n        /* \"#utility.yul\":11401:11402   */\n      0x00\n        /* \"#utility.yul\":11426:11479   */\n      tag_527\n        /* \"#utility.yul\":11471:11478   */\n      dup8\n        /* \"#utility.yul\":11462:11468   */\n      dup3\n        /* \"#utility.yul\":11451:11460   */\n      dup9\n        /* \"#utility.yul\":11447:11469   */\n      add\n        /* \"#utility.yul\":11426:11479   */\n      tag_358\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11416:11479   */\n      swap5\n      pop\n        /* \"#utility.yul\":11372:11489   */\n      pop\n        /* \"#utility.yul\":11528:11530   */\n      0x20\n        /* \"#utility.yul\":11554:11607   */\n      tag_528\n        /* \"#utility.yul\":11599:11606   */\n      dup8\n        /* \"#utility.yul\":11590:11596   */\n      dup3\n        /* \"#utility.yul\":11579:11588   */\n      dup9\n        /* \"#utility.yul\":11575:11597   */\n      add\n        /* \"#utility.yul\":11554:11607   */\n      tag_358\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11544:11607   */\n      swap4\n      pop\n        /* \"#utility.yul\":11499:11617   */\n      pop\n        /* \"#utility.yul\":11656:11658   */\n      0x40\n        /* \"#utility.yul\":11682:11735   */\n      tag_529\n        /* \"#utility.yul\":11727:11734   */\n      dup8\n        /* \"#utility.yul\":11718:11724   */\n      dup3\n        /* \"#utility.yul\":11707:11716   */\n      dup9\n        /* \"#utility.yul\":11703:11725   */\n      add\n        /* \"#utility.yul\":11682:11735   */\n      tag_353\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11672:11735   */\n      swap3\n      pop\n        /* \"#utility.yul\":11627:11745   */\n      pop\n        /* \"#utility.yul\":11812:11814   */\n      0x60\n        /* \"#utility.yul\":11801:11810   */\n      dup6\n        /* \"#utility.yul\":11797:11815   */\n      add\n        /* \"#utility.yul\":11784:11816   */\n      calldataload\n        /* \"#utility.yul\":11843:11861   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11835:11841   */\n      dup2\n        /* \"#utility.yul\":11832:11862   */\n      gt\n        /* \"#utility.yul\":11829:11946   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":11865:11944   */\n      tag_531\n      tag_340\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11829:11946   */\n    tag_530:\n        /* \"#utility.yul\":11970:12032   */\n      tag_532\n        /* \"#utility.yul\":12024:12031   */\n      dup8\n        /* \"#utility.yul\":12015:12021   */\n      dup3\n        /* \"#utility.yul\":12004:12013   */\n      dup9\n        /* \"#utility.yul\":12000:12022   */\n      add\n        /* \"#utility.yul\":11970:12032   */\n      tag_369\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11960:12032   */\n      swap2\n      pop\n        /* \"#utility.yul\":11755:12042   */\n      pop\n        /* \"#utility.yul\":11106:12049   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12055:12529   */\n    tag_99:\n        /* \"#utility.yul\":12123:12129   */\n      0x00\n        /* \"#utility.yul\":12131:12137   */\n      dup1\n        /* \"#utility.yul\":12180:12182   */\n      0x40\n        /* \"#utility.yul\":12168:12177   */\n      dup4\n        /* \"#utility.yul\":12159:12166   */\n      dup6\n        /* \"#utility.yul\":12155:12178   */\n      sub\n        /* \"#utility.yul\":12151:12183   */\n      slt\n        /* \"#utility.yul\":12148:12267   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":12186:12265   */\n      tag_535\n      tag_339\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12148:12267   */\n    tag_534:\n        /* \"#utility.yul\":12306:12307   */\n      0x00\n        /* \"#utility.yul\":12331:12384   */\n      tag_536\n        /* \"#utility.yul\":12376:12383   */\n      dup6\n        /* \"#utility.yul\":12367:12373   */\n      dup3\n        /* \"#utility.yul\":12356:12365   */\n      dup7\n        /* \"#utility.yul\":12352:12374   */\n      add\n        /* \"#utility.yul\":12331:12384   */\n      tag_358\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12321:12384   */\n      swap3\n      pop\n        /* \"#utility.yul\":12277:12394   */\n      pop\n        /* \"#utility.yul\":12433:12435   */\n      0x20\n        /* \"#utility.yul\":12459:12512   */\n      tag_537\n        /* \"#utility.yul\":12504:12511   */\n      dup6\n        /* \"#utility.yul\":12495:12501   */\n      dup3\n        /* \"#utility.yul\":12484:12493   */\n      dup7\n        /* \"#utility.yul\":12480:12502   */\n      add\n        /* \"#utility.yul\":12459:12512   */\n      tag_358\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12449:12512   */\n      swap2\n      pop\n        /* \"#utility.yul\":12404:12522   */\n      pop\n        /* \"#utility.yul\":12055:12529   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12535:12715   */\n    tag_374:\n        /* \"#utility.yul\":12583:12660   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12580:12581   */\n      0x00\n        /* \"#utility.yul\":12573:12661   */\n      mstore\n        /* \"#utility.yul\":12680:12684   */\n      0x22\n        /* \"#utility.yul\":12677:12678   */\n      0x04\n        /* \"#utility.yul\":12670:12685   */\n      mstore\n        /* \"#utility.yul\":12704:12708   */\n      0x24\n        /* \"#utility.yul\":12701:12702   */\n      0x00\n        /* \"#utility.yul\":12694:12709   */\n      revert\n        /* \"#utility.yul\":12721:13041   */\n    tag_109:\n        /* \"#utility.yul\":12765:12771   */\n      0x00\n        /* \"#utility.yul\":12802:12803   */\n      0x02\n        /* \"#utility.yul\":12796:12800   */\n      dup3\n        /* \"#utility.yul\":12792:12804   */\n      div\n        /* \"#utility.yul\":12782:12804   */\n      swap1\n      pop\n        /* \"#utility.yul\":12849:12850   */\n      0x01\n        /* \"#utility.yul\":12843:12847   */\n      dup3\n        /* \"#utility.yul\":12839:12851   */\n      and\n        /* \"#utility.yul\":12870:12888   */\n      dup1\n        /* \"#utility.yul\":12860:12941   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":12926:12930   */\n      0x7f\n        /* \"#utility.yul\":12918:12924   */\n      dup3\n        /* \"#utility.yul\":12914:12931   */\n      and\n        /* \"#utility.yul\":12904:12931   */\n      swap2\n      pop\n        /* \"#utility.yul\":12860:12941   */\n    tag_540:\n        /* \"#utility.yul\":12988:12990   */\n      0x20\n        /* \"#utility.yul\":12980:12986   */\n      dup3\n        /* \"#utility.yul\":12977:12991   */\n      lt\n        /* \"#utility.yul\":12957:12975   */\n      dup2\n        /* \"#utility.yul\":12954:12992   */\n      sub\n        /* \"#utility.yul\":12951:13035   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":13007:13025   */\n      tag_542\n      tag_374\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12951:13035   */\n    tag_541:\n        /* \"#utility.yul\":12772:13041   */\n      pop\n        /* \"#utility.yul\":12721:13041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13047:13489   */\n    tag_132:\n        /* \"#utility.yul\":13196:13200   */\n      0x00\n        /* \"#utility.yul\":13234:13236   */\n      0x60\n        /* \"#utility.yul\":13223:13232   */\n      dup3\n        /* \"#utility.yul\":13219:13237   */\n      add\n        /* \"#utility.yul\":13211:13237   */\n      swap1\n      pop\n        /* \"#utility.yul\":13247:13318   */\n      tag_544\n        /* \"#utility.yul\":13315:13316   */\n      0x00\n        /* \"#utility.yul\":13304:13313   */\n      dup4\n        /* \"#utility.yul\":13300:13317   */\n      add\n        /* \"#utility.yul\":13291:13297   */\n      dup7\n        /* \"#utility.yul\":13247:13318   */\n      tag_356\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13328:13400   */\n      tag_545\n        /* \"#utility.yul\":13396:13398   */\n      0x20\n        /* \"#utility.yul\":13385:13394   */\n      dup4\n        /* \"#utility.yul\":13381:13399   */\n      add\n        /* \"#utility.yul\":13372:13378   */\n      dup6\n        /* \"#utility.yul\":13328:13400   */\n      tag_371\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13410:13482   */\n      tag_546\n        /* \"#utility.yul\":13478:13480   */\n      0x40\n        /* \"#utility.yul\":13467:13476   */\n      dup4\n        /* \"#utility.yul\":13463:13481   */\n      add\n        /* \"#utility.yul\":13454:13460   */\n      dup5\n        /* \"#utility.yul\":13410:13482   */\n      tag_356\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13047:13489   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13495:13589   */\n    tag_375:\n        /* \"#utility.yul\":13528:13536   */\n      0x00\n        /* \"#utility.yul\":13576:13581   */\n      dup2\n        /* \"#utility.yul\":13572:13574   */\n      0x60\n        /* \"#utility.yul\":13568:13582   */\n      shl\n        /* \"#utility.yul\":13547:13582   */\n      swap1\n      pop\n        /* \"#utility.yul\":13495:13589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13595:13689   */\n    tag_376:\n        /* \"#utility.yul\":13634:13641   */\n      0x00\n        /* \"#utility.yul\":13663:13683   */\n      tag_549\n        /* \"#utility.yul\":13677:13682   */\n      dup3\n        /* \"#utility.yul\":13663:13683   */\n      tag_375\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13652:13683   */\n      swap1\n      pop\n        /* \"#utility.yul\":13595:13689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13695:13795   */\n    tag_377:\n        /* \"#utility.yul\":13734:13741   */\n      0x00\n        /* \"#utility.yul\":13763:13789   */\n      tag_551\n        /* \"#utility.yul\":13783:13788   */\n      dup3\n        /* \"#utility.yul\":13763:13789   */\n      tag_376\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13752:13789   */\n      swap1\n      pop\n        /* \"#utility.yul\":13695:13795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13801:13958   */\n    tag_378:\n        /* \"#utility.yul\":13906:13951   */\n      tag_553\n        /* \"#utility.yul\":13926:13950   */\n      tag_554\n        /* \"#utility.yul\":13944:13949   */\n      dup3\n        /* \"#utility.yul\":13926:13950   */\n      tag_355\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13906:13951   */\n      tag_377\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13901:13904   */\n      dup3\n        /* \"#utility.yul\":13894:13952   */\n      mstore\n        /* \"#utility.yul\":13801:13958   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13964:14043   */\n    tag_379:\n        /* \"#utility.yul\":14003:14010   */\n      0x00\n        /* \"#utility.yul\":14032:14037   */\n      dup2\n        /* \"#utility.yul\":14021:14037   */\n      swap1\n      pop\n        /* \"#utility.yul\":13964:14043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14049:14206   */\n    tag_380:\n        /* \"#utility.yul\":14154:14199   */\n      tag_557\n        /* \"#utility.yul\":14174:14198   */\n      tag_558\n        /* \"#utility.yul\":14192:14197   */\n      dup3\n        /* \"#utility.yul\":14174:14198   */\n      tag_351\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14154:14199   */\n      tag_379\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14149:14152   */\n      dup3\n        /* \"#utility.yul\":14142:14200   */\n      mstore\n        /* \"#utility.yul\":14049:14206   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14212:14609   */\n    tag_140:\n        /* \"#utility.yul\":14352:14355   */\n      0x00\n        /* \"#utility.yul\":14367:14442   */\n      tag_560\n        /* \"#utility.yul\":14438:14441   */\n      dup3\n        /* \"#utility.yul\":14429:14435   */\n      dup6\n        /* \"#utility.yul\":14367:14442   */\n      tag_378\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14467:14469   */\n      0x14\n        /* \"#utility.yul\":14462:14465   */\n      dup3\n        /* \"#utility.yul\":14458:14470   */\n      add\n        /* \"#utility.yul\":14451:14470   */\n      swap2\n      pop\n        /* \"#utility.yul\":14480:14555   */\n      tag_561\n        /* \"#utility.yul\":14551:14554   */\n      dup3\n        /* \"#utility.yul\":14542:14548   */\n      dup5\n        /* \"#utility.yul\":14480:14555   */\n      tag_380\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14580:14582   */\n      0x20\n        /* \"#utility.yul\":14575:14578   */\n      dup3\n        /* \"#utility.yul\":14571:14583   */\n      add\n        /* \"#utility.yul\":14564:14583   */\n      swap2\n      pop\n        /* \"#utility.yul\":14600:14603   */\n      dup2\n        /* \"#utility.yul\":14593:14603   */\n      swap1\n      pop\n        /* \"#utility.yul\":14212:14609   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14615:14782   */\n    tag_381:\n        /* \"#utility.yul\":14755:14774   */\n      0x496e76616c6964207369676e6174757265000000000000000000000000000000\n        /* \"#utility.yul\":14751:14752   */\n      0x00\n        /* \"#utility.yul\":14743:14749   */\n      dup3\n        /* \"#utility.yul\":14739:14753   */\n      add\n        /* \"#utility.yul\":14732:14775   */\n      mstore\n        /* \"#utility.yul\":14615:14782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14788:15154   */\n    tag_382:\n        /* \"#utility.yul\":14930:14933   */\n      0x00\n        /* \"#utility.yul\":14951:15018   */\n      tag_564\n        /* \"#utility.yul\":15015:15017   */\n      0x11\n        /* \"#utility.yul\":15010:15013   */\n      dup4\n        /* \"#utility.yul\":14951:15018   */\n      tag_347\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14944:15018   */\n      swap2\n      pop\n        /* \"#utility.yul\":15027:15120   */\n      tag_565\n        /* \"#utility.yul\":15116:15119   */\n      dup3\n        /* \"#utility.yul\":15027:15120   */\n      tag_381\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15145:15147   */\n      0x20\n        /* \"#utility.yul\":15140:15143   */\n      dup3\n        /* \"#utility.yul\":15136:15148   */\n      add\n        /* \"#utility.yul\":15129:15148   */\n      swap1\n      pop\n        /* \"#utility.yul\":14788:15154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15160:15579   */\n    tag_153:\n        /* \"#utility.yul\":15326:15330   */\n      0x00\n        /* \"#utility.yul\":15364:15366   */\n      0x20\n        /* \"#utility.yul\":15353:15362   */\n      dup3\n        /* \"#utility.yul\":15349:15367   */\n      add\n        /* \"#utility.yul\":15341:15367   */\n      swap1\n      pop\n        /* \"#utility.yul\":15413:15422   */\n      dup2\n        /* \"#utility.yul\":15407:15411   */\n      dup2\n        /* \"#utility.yul\":15403:15423   */\n      sub\n        /* \"#utility.yul\":15399:15400   */\n      0x00\n        /* \"#utility.yul\":15388:15397   */\n      dup4\n        /* \"#utility.yul\":15384:15401   */\n      add\n        /* \"#utility.yul\":15377:15424   */\n      mstore\n        /* \"#utility.yul\":15441:15572   */\n      tag_567\n        /* \"#utility.yul\":15567:15571   */\n      dup2\n        /* \"#utility.yul\":15441:15572   */\n      tag_382\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15433:15572   */\n      swap1\n      pop\n        /* \"#utility.yul\":15160:15579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15585:15750   */\n    tag_383:\n        /* \"#utility.yul\":15725:15742   */\n      0x416c7265616479206d696e746564210000000000000000000000000000000000\n        /* \"#utility.yul\":15721:15722   */\n      0x00\n        /* \"#utility.yul\":15713:15719   */\n      dup3\n        /* \"#utility.yul\":15709:15723   */\n      add\n        /* \"#utility.yul\":15702:15743   */\n      mstore\n        /* \"#utility.yul\":15585:15750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15756:16122   */\n    tag_384:\n        /* \"#utility.yul\":15898:15901   */\n      0x00\n        /* \"#utility.yul\":15919:15986   */\n      tag_570\n        /* \"#utility.yul\":15983:15985   */\n      0x0f\n        /* \"#utility.yul\":15978:15981   */\n      dup4\n        /* \"#utility.yul\":15919:15986   */\n      tag_347\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15912:15986   */\n      swap2\n      pop\n        /* \"#utility.yul\":15995:16088   */\n      tag_571\n        /* \"#utility.yul\":16084:16087   */\n      dup3\n        /* \"#utility.yul\":15995:16088   */\n      tag_383\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16113:16115   */\n      0x20\n        /* \"#utility.yul\":16108:16111   */\n      dup3\n        /* \"#utility.yul\":16104:16116   */\n      add\n        /* \"#utility.yul\":16097:16116   */\n      swap1\n      pop\n        /* \"#utility.yul\":15756:16122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16128:16547   */\n    tag_156:\n        /* \"#utility.yul\":16294:16298   */\n      0x00\n        /* \"#utility.yul\":16332:16334   */\n      0x20\n        /* \"#utility.yul\":16321:16330   */\n      dup3\n        /* \"#utility.yul\":16317:16335   */\n      add\n        /* \"#utility.yul\":16309:16335   */\n      swap1\n      pop\n        /* \"#utility.yul\":16381:16390   */\n      dup2\n        /* \"#utility.yul\":16375:16379   */\n      dup2\n        /* \"#utility.yul\":16371:16391   */\n      sub\n        /* \"#utility.yul\":16367:16368   */\n      0x00\n        /* \"#utility.yul\":16356:16365   */\n      dup4\n        /* \"#utility.yul\":16352:16369   */\n      add\n        /* \"#utility.yul\":16345:16392   */\n      mstore\n        /* \"#utility.yul\":16409:16540   */\n      tag_573\n        /* \"#utility.yul\":16535:16539   */\n      dup2\n        /* \"#utility.yul\":16409:16540   */\n      tag_384\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16401:16540   */\n      swap1\n      pop\n        /* \"#utility.yul\":16128:16547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16553:16701   */\n    tag_385:\n        /* \"#utility.yul\":16655:16666   */\n      0x00\n        /* \"#utility.yul\":16692:16695   */\n      dup2\n        /* \"#utility.yul\":16677:16695   */\n      swap1\n      pop\n        /* \"#utility.yul\":16553:16701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16707:17097   */\n    tag_386:\n        /* \"#utility.yul\":16813:16816   */\n      0x00\n        /* \"#utility.yul\":16841:16880   */\n      tag_576\n        /* \"#utility.yul\":16874:16879   */\n      dup3\n        /* \"#utility.yul\":16841:16880   */\n      tag_346\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16896:16985   */\n      tag_577\n        /* \"#utility.yul\":16978:16984   */\n      dup2\n        /* \"#utility.yul\":16973:16976   */\n      dup6\n        /* \"#utility.yul\":16896:16985   */\n      tag_385\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16889:16985   */\n      swap4\n      pop\n        /* \"#utility.yul\":16994:17059   */\n      tag_578\n        /* \"#utility.yul\":17052:17058   */\n      dup2\n        /* \"#utility.yul\":17047:17050   */\n      dup6\n        /* \"#utility.yul\":17040:17044   */\n      0x20\n        /* \"#utility.yul\":17033:17038   */\n      dup7\n        /* \"#utility.yul\":17029:17045   */\n      add\n        /* \"#utility.yul\":16994:17059   */\n      tag_348\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17084:17090   */\n      dup1\n        /* \"#utility.yul\":17079:17082   */\n      dup5\n        /* \"#utility.yul\":17075:17091   */\n      add\n        /* \"#utility.yul\":17068:17091   */\n      swap2\n      pop\n        /* \"#utility.yul\":16817:17097   */\n      pop\n        /* \"#utility.yul\":16707:17097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17103:17538   */\n    tag_182:\n        /* \"#utility.yul\":17283:17286   */\n      0x00\n        /* \"#utility.yul\":17305:17400   */\n      tag_580\n        /* \"#utility.yul\":17396:17399   */\n      dup3\n        /* \"#utility.yul\":17387:17393   */\n      dup6\n        /* \"#utility.yul\":17305:17400   */\n      tag_386\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17298:17400   */\n      swap2\n      pop\n        /* \"#utility.yul\":17417:17512   */\n      tag_581\n        /* \"#utility.yul\":17508:17511   */\n      dup3\n        /* \"#utility.yul\":17499:17505   */\n      dup5\n        /* \"#utility.yul\":17417:17512   */\n      tag_386\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17410:17512   */\n      swap2\n      pop\n        /* \"#utility.yul\":17529:17532   */\n      dup2\n        /* \"#utility.yul\":17522:17532   */\n      swap1\n      pop\n        /* \"#utility.yul\":17103:17538   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17544:17642   */\n    tag_387:\n        /* \"#utility.yul\":17595:17601   */\n      0x00\n        /* \"#utility.yul\":17629:17634   */\n      dup2\n        /* \"#utility.yul\":17623:17635   */\n      mload\n        /* \"#utility.yul\":17613:17635   */\n      swap1\n      pop\n        /* \"#utility.yul\":17544:17642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17648:17816   */\n    tag_388:\n        /* \"#utility.yul\":17731:17742   */\n      0x00\n        /* \"#utility.yul\":17765:17771   */\n      dup3\n        /* \"#utility.yul\":17760:17763   */\n      dup3\n        /* \"#utility.yul\":17753:17772   */\n      mstore\n        /* \"#utility.yul\":17805:17809   */\n      0x20\n        /* \"#utility.yul\":17800:17803   */\n      dup3\n        /* \"#utility.yul\":17796:17810   */\n      add\n        /* \"#utility.yul\":17781:17810   */\n      swap1\n      pop\n        /* \"#utility.yul\":17648:17816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17822:18195   */\n    tag_389:\n        /* \"#utility.yul\":17908:17911   */\n      0x00\n        /* \"#utility.yul\":17936:17974   */\n      tag_585\n        /* \"#utility.yul\":17968:17973   */\n      dup3\n        /* \"#utility.yul\":17936:17974   */\n      tag_387\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17990:18060   */\n      tag_586\n        /* \"#utility.yul\":18053:18059   */\n      dup2\n        /* \"#utility.yul\":18048:18051   */\n      dup6\n        /* \"#utility.yul\":17990:18060   */\n      tag_388\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17983:18060   */\n      swap4\n      pop\n        /* \"#utility.yul\":18069:18134   */\n      tag_587\n        /* \"#utility.yul\":18127:18133   */\n      dup2\n        /* \"#utility.yul\":18122:18125   */\n      dup6\n        /* \"#utility.yul\":18115:18119   */\n      0x20\n        /* \"#utility.yul\":18108:18113   */\n      dup7\n        /* \"#utility.yul\":18104:18120   */\n      add\n        /* \"#utility.yul\":18069:18134   */\n      tag_348\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18159:18188   */\n      tag_588\n        /* \"#utility.yul\":18181:18187   */\n      dup2\n        /* \"#utility.yul\":18159:18188   */\n      tag_349\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18154:18157   */\n      dup5\n        /* \"#utility.yul\":18150:18189   */\n      add\n        /* \"#utility.yul\":18143:18189   */\n      swap2\n      pop\n        /* \"#utility.yul\":17912:18195   */\n      pop\n        /* \"#utility.yul\":17822:18195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18201:18841   */\n    tag_223:\n        /* \"#utility.yul\":18396:18400   */\n      0x00\n        /* \"#utility.yul\":18434:18437   */\n      0x80\n        /* \"#utility.yul\":18423:18432   */\n      dup3\n        /* \"#utility.yul\":18419:18438   */\n      add\n        /* \"#utility.yul\":18411:18438   */\n      swap1\n      pop\n        /* \"#utility.yul\":18448:18519   */\n      tag_590\n        /* \"#utility.yul\":18516:18517   */\n      0x00\n        /* \"#utility.yul\":18505:18514   */\n      dup4\n        /* \"#utility.yul\":18501:18518   */\n      add\n        /* \"#utility.yul\":18492:18498   */\n      dup8\n        /* \"#utility.yul\":18448:18519   */\n      tag_356\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18529:18601   */\n      tag_591\n        /* \"#utility.yul\":18597:18599   */\n      0x20\n        /* \"#utility.yul\":18586:18595   */\n      dup4\n        /* \"#utility.yul\":18582:18600   */\n      add\n        /* \"#utility.yul\":18573:18579   */\n      dup7\n        /* \"#utility.yul\":18529:18601   */\n      tag_356\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18611:18683   */\n      tag_592\n        /* \"#utility.yul\":18679:18681   */\n      0x40\n        /* \"#utility.yul\":18668:18677   */\n      dup4\n        /* \"#utility.yul\":18664:18682   */\n      add\n        /* \"#utility.yul\":18655:18661   */\n      dup6\n        /* \"#utility.yul\":18611:18683   */\n      tag_371\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18730:18739   */\n      dup2\n        /* \"#utility.yul\":18724:18728   */\n      dup2\n        /* \"#utility.yul\":18720:18740   */\n      sub\n        /* \"#utility.yul\":18715:18717   */\n      0x60\n        /* \"#utility.yul\":18704:18713   */\n      dup4\n        /* \"#utility.yul\":18700:18718   */\n      add\n        /* \"#utility.yul\":18693:18741   */\n      mstore\n        /* \"#utility.yul\":18758:18834   */\n      tag_593\n        /* \"#utility.yul\":18829:18833   */\n      dup2\n        /* \"#utility.yul\":18820:18826   */\n      dup5\n        /* \"#utility.yul\":18758:18834   */\n      tag_389\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18750:18834   */\n      swap1\n      pop\n        /* \"#utility.yul\":18201:18841   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18847:18988   */\n    tag_390:\n        /* \"#utility.yul\":18903:18908   */\n      0x00\n        /* \"#utility.yul\":18934:18940   */\n      dup2\n        /* \"#utility.yul\":18928:18941   */\n      mload\n        /* \"#utility.yul\":18919:18941   */\n      swap1\n      pop\n        /* \"#utility.yul\":18950:18982   */\n      tag_595\n        /* \"#utility.yul\":18976:18981   */\n      dup2\n        /* \"#utility.yul\":18950:18982   */\n      tag_342\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":18847:18988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18994:19343   */\n    tag_226:\n        /* \"#utility.yul\":19063:19069   */\n      0x00\n        /* \"#utility.yul\":19112:19114   */\n      0x20\n        /* \"#utility.yul\":19100:19109   */\n      dup3\n        /* \"#utility.yul\":19091:19098   */\n      dup5\n        /* \"#utility.yul\":19087:19110   */\n      sub\n        /* \"#utility.yul\":19083:19115   */\n      slt\n        /* \"#utility.yul\":19080:19199   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":19118:19197   */\n      tag_598\n      tag_339\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19080:19199   */\n    tag_597:\n        /* \"#utility.yul\":19238:19239   */\n      0x00\n        /* \"#utility.yul\":19263:19326   */\n      tag_599\n        /* \"#utility.yul\":19318:19325   */\n      dup5\n        /* \"#utility.yul\":19309:19315   */\n      dup3\n        /* \"#utility.yul\":19298:19307   */\n      dup6\n        /* \"#utility.yul\":19294:19316   */\n      add\n        /* \"#utility.yul\":19263:19326   */\n      tag_390\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19253:19326   */\n      swap2\n      pop\n        /* \"#utility.yul\":19209:19336   */\n      pop\n        /* \"#utility.yul\":18994:19343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19349:19529   */\n    tag_251:\n        /* \"#utility.yul\":19397:19474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19394:19395   */\n      0x00\n        /* \"#utility.yul\":19387:19475   */\n      mstore\n        /* \"#utility.yul\":19494:19498   */\n      0x12\n        /* \"#utility.yul\":19491:19492   */\n      0x04\n        /* \"#utility.yul\":19484:19499   */\n      mstore\n        /* \"#utility.yul\":19518:19522   */\n      0x24\n        /* \"#utility.yul\":19515:19516   */\n      0x00\n        /* \"#utility.yul\":19508:19523   */\n      revert\n        /* \"#utility.yul\":19535:19867   */\n    tag_272:\n        /* \"#utility.yul\":19656:19660   */\n      0x00\n        /* \"#utility.yul\":19694:19696   */\n      0x40\n        /* \"#utility.yul\":19683:19692   */\n      dup3\n        /* \"#utility.yul\":19679:19697   */\n      add\n        /* \"#utility.yul\":19671:19697   */\n      swap1\n      pop\n        /* \"#utility.yul\":19707:19778   */\n      tag_602\n        /* \"#utility.yul\":19775:19776   */\n      0x00\n        /* \"#utility.yul\":19764:19773   */\n      dup4\n        /* \"#utility.yul\":19760:19777   */\n      add\n        /* \"#utility.yul\":19751:19757   */\n      dup6\n        /* \"#utility.yul\":19707:19778   */\n      tag_356\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19788:19860   */\n      tag_603\n        /* \"#utility.yul\":19856:19858   */\n      0x20\n        /* \"#utility.yul\":19845:19854   */\n      dup4\n        /* \"#utility.yul\":19841:19859   */\n      add\n        /* \"#utility.yul\":19832:19838   */\n      dup5\n        /* \"#utility.yul\":19788:19860   */\n      tag_371\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":19535:19867   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19873:20053   */\n    tag_281:\n        /* \"#utility.yul\":19921:19998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19918:19919   */\n      0x00\n        /* \"#utility.yul\":19911:19999   */\n      mstore\n        /* \"#utility.yul\":20018:20022   */\n      0x21\n        /* \"#utility.yul\":20015:20016   */\n      0x04\n        /* \"#utility.yul\":20008:20023   */\n      mstore\n        /* \"#utility.yul\":20042:20046   */\n      0x24\n        /* \"#utility.yul\":20039:20040   */\n      0x00\n        /* \"#utility.yul\":20032:20047   */\n      revert\n        /* \"#utility.yul\":20059:20145   */\n    tag_391:\n        /* \"#utility.yul\":20094:20101   */\n      0x00\n        /* \"#utility.yul\":20134:20138   */\n      0xff\n        /* \"#utility.yul\":20127:20132   */\n      dup3\n        /* \"#utility.yul\":20123:20139   */\n      and\n        /* \"#utility.yul\":20112:20139   */\n      swap1\n      pop\n        /* \"#utility.yul\":20059:20145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20151:20263   */\n    tag_392:\n        /* \"#utility.yul\":20234:20256   */\n      tag_607\n        /* \"#utility.yul\":20250:20255   */\n      dup2\n        /* \"#utility.yul\":20234:20256   */\n      tag_391\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":20229:20232   */\n      dup3\n        /* \"#utility.yul\":20222:20257   */\n      mstore\n        /* \"#utility.yul\":20151:20263   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20269:20814   */\n    tag_334:\n        /* \"#utility.yul\":20442:20446   */\n      0x00\n        /* \"#utility.yul\":20480:20483   */\n      0x80\n        /* \"#utility.yul\":20469:20478   */\n      dup3\n        /* \"#utility.yul\":20465:20484   */\n      add\n        /* \"#utility.yul\":20457:20484   */\n      swap1\n      pop\n        /* \"#utility.yul\":20494:20565   */\n      tag_609\n        /* \"#utility.yul\":20562:20563   */\n      0x00\n        /* \"#utility.yul\":20551:20560   */\n      dup4\n        /* \"#utility.yul\":20547:20564   */\n      add\n        /* \"#utility.yul\":20538:20544   */\n      dup8\n        /* \"#utility.yul\":20494:20565   */\n      tag_370\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20575:20643   */\n      tag_610\n        /* \"#utility.yul\":20639:20641   */\n      0x20\n        /* \"#utility.yul\":20628:20637   */\n      dup4\n        /* \"#utility.yul\":20624:20642   */\n      add\n        /* \"#utility.yul\":20615:20621   */\n      dup7\n        /* \"#utility.yul\":20575:20643   */\n      tag_392\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":20653:20725   */\n      tag_611\n        /* \"#utility.yul\":20721:20723   */\n      0x40\n        /* \"#utility.yul\":20710:20719   */\n      dup4\n        /* \"#utility.yul\":20706:20724   */\n      add\n        /* \"#utility.yul\":20697:20703   */\n      dup6\n        /* \"#utility.yul\":20653:20725   */\n      tag_370\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20735:20807   */\n      tag_612\n        /* \"#utility.yul\":20803:20805   */\n      0x60\n        /* \"#utility.yul\":20792:20801   */\n      dup4\n        /* \"#utility.yul\":20788:20806   */\n      add\n        /* \"#utility.yul\":20779:20785   */\n      dup5\n        /* \"#utility.yul\":20735:20807   */\n      tag_370\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":20269:20814   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220065f81b4f244fdc43a07a9c6c414be5fdf5059dd08436d747577a63a025e88dc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3241": {
									"entryPoint": null,
									"id": 3241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9134:14",
										"nodeType": "YulBlock",
										"src": "0:9134:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "423:28:14",
													"nodeType": "YulBlock",
													"src": "423:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:14",
																		"nodeType": "YulLiteral",
																		"src": "440:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:14",
																		"nodeType": "YulLiteral",
																		"src": "443:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:14"
																},
																"nativeSrc": "433:12:14",
																"nodeType": "YulFunctionCall",
																"src": "433:12:14"
															},
															"nativeSrc": "433:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:14"
											},
											{
												"body": {
													"nativeSrc": "546:28:14",
													"nodeType": "YulBlock",
													"src": "546:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:14",
																		"nodeType": "YulLiteral",
																		"src": "563:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:14",
																		"nodeType": "YulLiteral",
																		"src": "566:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:14"
																},
																"nativeSrc": "556:12:14",
																"nodeType": "YulFunctionCall",
																"src": "556:12:14"
															},
															"nativeSrc": "556:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:14"
											},
											{
												"body": {
													"nativeSrc": "628:54:14",
													"nodeType": "YulBlock",
													"src": "628:54:14",
													"statements": [
														{
															"nativeSrc": "638:38:14",
															"nodeType": "YulAssignment",
															"src": "638:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:14",
																				"nodeType": "YulLiteral",
																				"src": "663:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:14"
																		},
																		"nativeSrc": "652:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:14",
																				"nodeType": "YulLiteral",
																				"src": "672:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:14"
																		},
																		"nativeSrc": "668:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:14"
																},
																"nativeSrc": "648:28:14",
																"nodeType": "YulFunctionCall",
																"src": "648:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:14",
														"nodeType": "YulTypedName",
														"src": "611:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:14",
														"nodeType": "YulTypedName",
														"src": "621:6:14",
														"type": ""
													}
												],
												"src": "580:102:14"
											},
											{
												"body": {
													"nativeSrc": "716:152:14",
													"nodeType": "YulBlock",
													"src": "716:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:14",
																		"nodeType": "YulLiteral",
																		"src": "733:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:14",
																		"nodeType": "YulLiteral",
																		"src": "736:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:14"
																},
																"nativeSrc": "726:88:14",
																"nodeType": "YulFunctionCall",
																"src": "726:88:14"
															},
															"nativeSrc": "726:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:14",
																		"nodeType": "YulLiteral",
																		"src": "830:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:14",
																		"nodeType": "YulLiteral",
																		"src": "833:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:14"
																},
																"nativeSrc": "823:15:14",
																"nodeType": "YulFunctionCall",
																"src": "823:15:14"
															},
															"nativeSrc": "823:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:14",
																		"nodeType": "YulLiteral",
																		"src": "854:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:14",
																		"nodeType": "YulLiteral",
																		"src": "857:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:14"
																},
																"nativeSrc": "847:15:14",
																"nodeType": "YulFunctionCall",
																"src": "847:15:14"
															},
															"nativeSrc": "847:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:14"
											},
											{
												"body": {
													"nativeSrc": "917:238:14",
													"nodeType": "YulBlock",
													"src": "917:238:14",
													"statements": [
														{
															"nativeSrc": "927:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:14"
																		},
																		"nativeSrc": "957:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:14"
																},
																"nativeSrc": "945:40:14",
																"nodeType": "YulFunctionCall",
																"src": "945:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:14",
																	"nodeType": "YulTypedName",
																	"src": "931:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:14",
																"nodeType": "YulBlock",
																"src": "1096:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:14"
																			},
																			"nativeSrc": "1098:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:14"
																		},
																		"nativeSrc": "1098:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:14",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:14"
																		},
																		"nativeSrc": "1036:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:14"
																		},
																		"nativeSrc": "1072:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:14"
																},
																"nativeSrc": "1033:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:14"
															},
															"nativeSrc": "1030:88:14",
															"nodeType": "YulIf",
															"src": "1030:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:14"
																},
																"nativeSrc": "1127:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:14"
															},
															"nativeSrc": "1127:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:14",
														"nodeType": "YulTypedName",
														"src": "903:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:14",
														"nodeType": "YulTypedName",
														"src": "911:4:14",
														"type": ""
													}
												],
												"src": "874:281:14"
											},
											{
												"body": {
													"nativeSrc": "1202:88:14",
													"nodeType": "YulBlock",
													"src": "1202:88:14",
													"statements": [
														{
															"nativeSrc": "1212:30:14",
															"nodeType": "YulAssignment",
															"src": "1212:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:14"
																},
																"nativeSrc": "1222:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:14"
																},
																"nativeSrc": "1251:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:14"
															},
															"nativeSrc": "1251:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:14",
														"nodeType": "YulTypedName",
														"src": "1186:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:14",
														"nodeType": "YulTypedName",
														"src": "1195:6:14",
														"type": ""
													}
												],
												"src": "1161:129:14"
											},
											{
												"body": {
													"nativeSrc": "1363:241:14",
													"nodeType": "YulBlock",
													"src": "1363:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:14",
																"nodeType": "YulBlock",
																"src": "1468:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:14"
																			},
																			"nativeSrc": "1470:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:14"
																		},
																		"nativeSrc": "1470:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:14"
																},
																"nativeSrc": "1437:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:14"
															},
															"nativeSrc": "1434:56:14",
															"nodeType": "YulIf",
															"src": "1434:56:14"
														},
														{
															"nativeSrc": "1500:37:14",
															"nodeType": "YulAssignment",
															"src": "1500:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:14"
																},
																"nativeSrc": "1508:29:14",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:14"
																}
															]
														},
														{
															"nativeSrc": "1574:23:14",
															"nodeType": "YulAssignment",
															"src": "1574:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:14"
																},
																"nativeSrc": "1582:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:14",
														"nodeType": "YulTypedName",
														"src": "1347:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:14",
														"nodeType": "YulTypedName",
														"src": "1358:4:14",
														"type": ""
													}
												],
												"src": "1296:308:14"
											},
											{
												"body": {
													"nativeSrc": "1672:77:14",
													"nodeType": "YulBlock",
													"src": "1672:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:14"
																},
																"nativeSrc": "1683:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:14"
															},
															"nativeSrc": "1683:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:14"
																		},
																		"nativeSrc": "1722:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:14"
																},
																"nativeSrc": "1715:27:14",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:14"
															},
															"nativeSrc": "1715:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:14",
														"nodeType": "YulTypedName",
														"src": "1654:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:14",
														"nodeType": "YulTypedName",
														"src": "1659:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:14",
														"nodeType": "YulTypedName",
														"src": "1664:6:14",
														"type": ""
													}
												],
												"src": "1610:139:14"
											},
											{
												"body": {
													"nativeSrc": "1850:339:14",
													"nodeType": "YulBlock",
													"src": "1850:339:14",
													"statements": [
														{
															"nativeSrc": "1860:75:14",
															"nodeType": "YulAssignment",
															"src": "1860:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:14"
																		},
																		"nativeSrc": "1885:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:14"
																},
																"nativeSrc": "1869:66:14",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:14"
																},
																"nativeSrc": "1944:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:14"
															},
															"nativeSrc": "1944:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:14"
														},
														{
															"nativeSrc": "1974:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:14"
																},
																"nativeSrc": "1985:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:14",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:14",
																"nodeType": "YulBlock",
																"src": "2039:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:14"
																			},
																			"nativeSrc": "2041:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:14"
																		},
																		"nativeSrc": "2041:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:14"
																		},
																		"nativeSrc": "2016:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:14"
																},
																"nativeSrc": "2013:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:14"
															},
															"nativeSrc": "2010:112:14",
															"nodeType": "YulIf",
															"src": "2010:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:14"
																},
																"nativeSrc": "2131:52:14",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:14"
															},
															"nativeSrc": "2131:52:14",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:14",
														"nodeType": "YulTypedName",
														"src": "1823:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:14",
														"nodeType": "YulTypedName",
														"src": "1828:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:14",
														"nodeType": "YulTypedName",
														"src": "1836:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:14",
														"nodeType": "YulTypedName",
														"src": "1844:5:14",
														"type": ""
													}
												],
												"src": "1755:434:14"
											},
											{
												"body": {
													"nativeSrc": "2282:282:14",
													"nodeType": "YulBlock",
													"src": "2282:282:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:14",
																"nodeType": "YulBlock",
																"src": "2331:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:14"
																			},
																			"nativeSrc": "2333:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:14"
																		},
																		"nativeSrc": "2333:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:14",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:14"
																				},
																				"nativeSrc": "2306:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:14"
																		},
																		"nativeSrc": "2302:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:14"
																},
																"nativeSrc": "2295:35:14",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:14"
															},
															"nativeSrc": "2292:122:14",
															"nodeType": "YulIf",
															"src": "2292:122:14"
														},
														{
															"nativeSrc": "2423:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:14"
																},
																"nativeSrc": "2437:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:14",
															"nodeType": "YulAssignment",
															"src": "2459:99:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:14"
																		},
																		"nativeSrc": "2527:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:14"
																},
																"nativeSrc": "2468:90:14",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:14",
														"nodeType": "YulTypedName",
														"src": "2260:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:14",
														"nodeType": "YulTypedName",
														"src": "2268:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:14",
														"nodeType": "YulTypedName",
														"src": "2276:5:14",
														"type": ""
													}
												],
												"src": "2209:355:14"
											},
											{
												"body": {
													"nativeSrc": "2615:81:14",
													"nodeType": "YulBlock",
													"src": "2615:81:14",
													"statements": [
														{
															"nativeSrc": "2625:65:14",
															"nodeType": "YulAssignment",
															"src": "2625:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:14",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:14"
																},
																"nativeSrc": "2636:54:14",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:14",
														"nodeType": "YulTypedName",
														"src": "2597:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:14",
														"nodeType": "YulTypedName",
														"src": "2607:7:14",
														"type": ""
													}
												],
												"src": "2570:126:14"
											},
											{
												"body": {
													"nativeSrc": "2747:51:14",
													"nodeType": "YulBlock",
													"src": "2747:51:14",
													"statements": [
														{
															"nativeSrc": "2757:35:14",
															"nodeType": "YulAssignment",
															"src": "2757:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:14"
																},
																"nativeSrc": "2768:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:14",
														"nodeType": "YulTypedName",
														"src": "2729:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:14",
														"nodeType": "YulTypedName",
														"src": "2739:7:14",
														"type": ""
													}
												],
												"src": "2702:96:14"
											},
											{
												"body": {
													"nativeSrc": "2847:79:14",
													"nodeType": "YulBlock",
													"src": "2847:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:14",
																"nodeType": "YulBlock",
																"src": "2904:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:14"
																			},
																			"nativeSrc": "2906:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:14"
																		},
																		"nativeSrc": "2906:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:14"
																				},
																				"nativeSrc": "2877:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:14"
																		},
																		"nativeSrc": "2867:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:14"
																},
																"nativeSrc": "2860:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:14"
															},
															"nativeSrc": "2857:63:14",
															"nodeType": "YulIf",
															"src": "2857:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:14",
														"nodeType": "YulTypedName",
														"src": "2840:5:14",
														"type": ""
													}
												],
												"src": "2804:122:14"
											},
											{
												"body": {
													"nativeSrc": "2995:80:14",
													"nodeType": "YulBlock",
													"src": "2995:80:14",
													"statements": [
														{
															"nativeSrc": "3005:22:14",
															"nodeType": "YulAssignment",
															"src": "3005:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:14"
																},
																"nativeSrc": "3014:13:14",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:14"
																},
																"nativeSrc": "3036:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:14"
															},
															"nativeSrc": "3036:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:14",
														"nodeType": "YulTypedName",
														"src": "2973:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:14",
														"nodeType": "YulTypedName",
														"src": "2981:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:14",
														"nodeType": "YulTypedName",
														"src": "2989:5:14",
														"type": ""
													}
												],
												"src": "2932:143:14"
											},
											{
												"body": {
													"nativeSrc": "3212:878:14",
													"nodeType": "YulBlock",
													"src": "3212:878:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:14",
																"nodeType": "YulBlock",
																"src": "3258:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:14"
																			},
																			"nativeSrc": "3260:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:14"
																		},
																		"nativeSrc": "3260:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:14"
																		},
																		"nativeSrc": "3229:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:14"
																},
																"nativeSrc": "3225:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:14"
															},
															"nativeSrc": "3222:119:14",
															"nodeType": "YulIf",
															"src": "3222:119:14"
														},
														{
															"nativeSrc": "3351:291:14",
															"nodeType": "YulBlock",
															"src": "3351:291:14",
															"statements": [
																{
																	"nativeSrc": "3366:38:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:38:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3401:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3401:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:14"
																				},
																				"nativeSrc": "3386:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:17:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3380:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "3380:5:14"
																		},
																		"nativeSrc": "3380:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:24:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3451:83:14",
																		"nodeType": "YulBlock",
																		"src": "3451:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3453:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "3453:77:14"
																					},
																					"nativeSrc": "3453:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3453:79:14"
																				},
																				"nativeSrc": "3453:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "3453:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3423:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3431:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3431:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3420:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3420:2:14"
																		},
																		"nativeSrc": "3420:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:30:14"
																	},
																	"nativeSrc": "3417:117:14",
																	"nodeType": "YulIf",
																	"src": "3417:117:14"
																},
																{
																	"nativeSrc": "3548:84:14",
																	"nodeType": "YulAssignment",
																	"src": "3548:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3604:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3604:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3615:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3600:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3600:3:14"
																				},
																				"nativeSrc": "3600:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3600:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3558:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "3558:41:14"
																		},
																		"nativeSrc": "3558:74:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3548:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3652:292:14",
															"nodeType": "YulBlock",
															"src": "3652:292:14",
															"statements": [
																{
																	"nativeSrc": "3667:39:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3691:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3691:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3702:2:14",
																						"nodeType": "YulLiteral",
																						"src": "3702:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3687:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:14"
																				},
																				"nativeSrc": "3687:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:18:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3681:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "3681:5:14"
																		},
																		"nativeSrc": "3681:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:25:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3753:83:14",
																		"nodeType": "YulBlock",
																		"src": "3753:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3755:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "3755:77:14"
																					},
																					"nativeSrc": "3755:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:79:14"
																				},
																				"nativeSrc": "3755:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "3755:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3725:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3733:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3733:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3722:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:14"
																		},
																		"nativeSrc": "3722:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:30:14"
																	},
																	"nativeSrc": "3719:117:14",
																	"nodeType": "YulIf",
																	"src": "3719:117:14"
																},
																{
																	"nativeSrc": "3850:84:14",
																	"nodeType": "YulAssignment",
																	"src": "3850:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3917:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:14"
																				},
																				"nativeSrc": "3902:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3926:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3860:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "3860:41:14"
																		},
																		"nativeSrc": "3860:74:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3954:129:14",
															"nodeType": "YulBlock",
															"src": "3954:129:14",
															"statements": [
																{
																	"nativeSrc": "3969:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3969:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3983:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3973:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3973:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3999:74:14",
																	"nodeType": "YulAssignment",
																	"src": "3999:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:14"
																				},
																				"nativeSrc": "4041:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4009:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "4009:31:14"
																		},
																		"nativeSrc": "4009:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3999:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3081:1009:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:14",
														"nodeType": "YulTypedName",
														"src": "3166:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:14",
														"nodeType": "YulTypedName",
														"src": "3177:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:14",
														"nodeType": "YulTypedName",
														"src": "3189:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:14",
														"nodeType": "YulTypedName",
														"src": "3197:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:14",
														"nodeType": "YulTypedName",
														"src": "3205:6:14",
														"type": ""
													}
												],
												"src": "3081:1009:14"
											},
											{
												"body": {
													"nativeSrc": "4155:40:14",
													"nodeType": "YulBlock",
													"src": "4155:40:14",
													"statements": [
														{
															"nativeSrc": "4166:22:14",
															"nodeType": "YulAssignment",
															"src": "4166:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4182:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4176:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:14"
																},
																"nativeSrc": "4176:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4176:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4166:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4096:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4138:5:14",
														"nodeType": "YulTypedName",
														"src": "4138:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4148:6:14",
														"nodeType": "YulTypedName",
														"src": "4148:6:14",
														"type": ""
													}
												],
												"src": "4096:99:14"
											},
											{
												"body": {
													"nativeSrc": "4229:152:14",
													"nodeType": "YulBlock",
													"src": "4229:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4246:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4246:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4249:77:14",
																		"nodeType": "YulLiteral",
																		"src": "4249:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:14"
																},
																"nativeSrc": "4239:88:14",
																"nodeType": "YulFunctionCall",
																"src": "4239:88:14"
															},
															"nativeSrc": "4239:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "4239:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4346:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4336:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:14"
																},
																"nativeSrc": "4336:15:14",
																"nodeType": "YulFunctionCall",
																"src": "4336:15:14"
															},
															"nativeSrc": "4336:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "4336:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4367:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4370:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4360:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:14"
																},
																"nativeSrc": "4360:15:14",
																"nodeType": "YulFunctionCall",
																"src": "4360:15:14"
															},
															"nativeSrc": "4360:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "4360:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4201:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "4201:180:14"
											},
											{
												"body": {
													"nativeSrc": "4438:269:14",
													"nodeType": "YulBlock",
													"src": "4438:269:14",
													"statements": [
														{
															"nativeSrc": "4448:22:14",
															"nodeType": "YulAssignment",
															"src": "4448:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4462:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4458:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:14"
																},
																"nativeSrc": "4458:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4458:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4448:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:14"
																}
															]
														},
														{
															"nativeSrc": "4479:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4509:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4509:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4505:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:14"
																},
																"nativeSrc": "4505:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4505:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4483:18:14",
																	"nodeType": "YulTypedName",
																	"src": "4483:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:51:14",
																"nodeType": "YulBlock",
																"src": "4556:51:14",
																"statements": [
																	{
																		"nativeSrc": "4570:27:14",
																		"nodeType": "YulAssignment",
																		"src": "4570:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4584:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:14",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4580:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:14"
																			},
																			"nativeSrc": "4580:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4570:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4536:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4536:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4529:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:14"
																},
																"nativeSrc": "4529:26:14",
																"nodeType": "YulFunctionCall",
																"src": "4529:26:14"
															},
															"nativeSrc": "4526:81:14",
															"nodeType": "YulIf",
															"src": "4526:81:14"
														},
														{
															"body": {
																"nativeSrc": "4659:42:14",
																"nodeType": "YulBlock",
																"src": "4659:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4673:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:14"
																			},
																			"nativeSrc": "4673:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:14"
																		},
																		"nativeSrc": "4673:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4623:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4623:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4646:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4643:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4643:2:14"
																		},
																		"nativeSrc": "4643:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4620:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:14"
																},
																"nativeSrc": "4620:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4620:38:14"
															},
															"nativeSrc": "4617:84:14",
															"nodeType": "YulIf",
															"src": "4617:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4387:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4422:4:14",
														"nodeType": "YulTypedName",
														"src": "4422:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4431:6:14",
														"nodeType": "YulTypedName",
														"src": "4431:6:14",
														"type": ""
													}
												],
												"src": "4387:320:14"
											},
											{
												"body": {
													"nativeSrc": "4767:87:14",
													"nodeType": "YulBlock",
													"src": "4767:87:14",
													"statements": [
														{
															"nativeSrc": "4777:11:14",
															"nodeType": "YulAssignment",
															"src": "4777:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "4785:3:14",
																"nodeType": "YulIdentifier",
																"src": "4785:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4805:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4805:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4808:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:14"
																},
																"nativeSrc": "4798:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4798:14:14"
															},
															"nativeSrc": "4798:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "4798:14:14"
														},
														{
															"nativeSrc": "4821:26:14",
															"nodeType": "YulAssignment",
															"src": "4821:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4842:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4829:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4829:9:14"
																},
																"nativeSrc": "4829:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4821:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4713:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4754:3:14",
														"nodeType": "YulTypedName",
														"src": "4754:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4762:4:14",
														"nodeType": "YulTypedName",
														"src": "4762:4:14",
														"type": ""
													}
												],
												"src": "4713:141:14"
											},
											{
												"body": {
													"nativeSrc": "4904:49:14",
													"nodeType": "YulBlock",
													"src": "4904:49:14",
													"statements": [
														{
															"nativeSrc": "4914:33:14",
															"nodeType": "YulAssignment",
															"src": "4914:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:14"
																		},
																		"nativeSrc": "4928:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4944:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4924:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:14"
																},
																"nativeSrc": "4924:23:14",
																"nodeType": "YulFunctionCall",
																"src": "4924:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4914:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4860:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:14",
														"nodeType": "YulTypedName",
														"src": "4887:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4897:6:14",
														"nodeType": "YulTypedName",
														"src": "4897:6:14",
														"type": ""
													}
												],
												"src": "4860:93:14"
											},
											{
												"body": {
													"nativeSrc": "5012:54:14",
													"nodeType": "YulBlock",
													"src": "5012:54:14",
													"statements": [
														{
															"nativeSrc": "5022:37:14",
															"nodeType": "YulAssignment",
															"src": "5022:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5047:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5043:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:14"
																},
																"nativeSrc": "5043:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5022:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "5022:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4959:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4987:4:14",
														"nodeType": "YulTypedName",
														"src": "4987:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4993:5:14",
														"nodeType": "YulTypedName",
														"src": "4993:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5003:8:14",
														"nodeType": "YulTypedName",
														"src": "5003:8:14",
														"type": ""
													}
												],
												"src": "4959:107:14"
											},
											{
												"body": {
													"nativeSrc": "5148:317:14",
													"nodeType": "YulBlock",
													"src": "5148:317:14",
													"statements": [
														{
															"nativeSrc": "5158:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5179:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "5179:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5175:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:14"
																},
																"nativeSrc": "5175:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5175:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5162:9:14",
																	"nodeType": "YulTypedName",
																	"src": "5162:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5202:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5233:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:66:14",
																		"nodeType": "YulLiteral",
																		"src": "5244:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5214:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5214:18:14"
																},
																"nativeSrc": "5214:97:14",
																"nodeType": "YulFunctionCall",
																"src": "5214:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5206:4:14",
																	"nodeType": "YulTypedName",
																	"src": "5206:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5320:51:14",
															"nodeType": "YulAssignment",
															"src": "5320:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5351:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5362:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "5362:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5332:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5332:18:14"
																},
																"nativeSrc": "5332:39:14",
																"nodeType": "YulFunctionCall",
																"src": "5332:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5320:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "5320:8:14"
																}
															]
														},
														{
															"nativeSrc": "5380:30:14",
															"nodeType": "YulAssignment",
															"src": "5380:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5393:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5393:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5404:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5400:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:14"
																		},
																		"nativeSrc": "5400:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5389:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:14"
																},
																"nativeSrc": "5389:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5380:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:14"
																}
															]
														},
														{
															"nativeSrc": "5419:40:14",
															"nodeType": "YulAssignment",
															"src": "5419:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5432:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5432:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5443:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "5443:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5453:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "5453:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5439:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:14"
																		},
																		"nativeSrc": "5439:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:14"
																},
																"nativeSrc": "5429:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5429:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5419:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5072:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:14",
														"nodeType": "YulTypedName",
														"src": "5109:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5116:10:14",
														"nodeType": "YulTypedName",
														"src": "5116:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5128:8:14",
														"nodeType": "YulTypedName",
														"src": "5128:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5141:6:14",
														"nodeType": "YulTypedName",
														"src": "5141:6:14",
														"type": ""
													}
												],
												"src": "5072:393:14"
											},
											{
												"body": {
													"nativeSrc": "5516:32:14",
													"nodeType": "YulBlock",
													"src": "5516:32:14",
													"statements": [
														{
															"nativeSrc": "5526:16:14",
															"nodeType": "YulAssignment",
															"src": "5526:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "5537:5:14",
																"nodeType": "YulIdentifier",
																"src": "5537:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5526:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5526:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5471:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:14",
														"nodeType": "YulTypedName",
														"src": "5498:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5508:7:14",
														"nodeType": "YulTypedName",
														"src": "5508:7:14",
														"type": ""
													}
												],
												"src": "5471:77:14"
											},
											{
												"body": {
													"nativeSrc": "5586:28:14",
													"nodeType": "YulBlock",
													"src": "5586:28:14",
													"statements": [
														{
															"nativeSrc": "5596:12:14",
															"nodeType": "YulAssignment",
															"src": "5596:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "5603:5:14",
																"nodeType": "YulIdentifier",
																"src": "5603:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5596:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5554:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5572:5:14",
														"nodeType": "YulTypedName",
														"src": "5572:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5582:3:14",
														"nodeType": "YulTypedName",
														"src": "5582:3:14",
														"type": ""
													}
												],
												"src": "5554:60:14"
											},
											{
												"body": {
													"nativeSrc": "5680:82:14",
													"nodeType": "YulBlock",
													"src": "5680:82:14",
													"statements": [
														{
															"nativeSrc": "5690:66:14",
															"nodeType": "YulAssignment",
															"src": "5690:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5748:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5748:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5730:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5730:17:14"
																				},
																				"nativeSrc": "5730:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5721:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "5721:8:14"
																		},
																		"nativeSrc": "5721:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5703:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5703:17:14"
																},
																"nativeSrc": "5703:53:14",
																"nodeType": "YulFunctionCall",
																"src": "5703:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5690:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5690:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5620:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5660:5:14",
														"nodeType": "YulTypedName",
														"src": "5660:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5670:9:14",
														"nodeType": "YulTypedName",
														"src": "5670:9:14",
														"type": ""
													}
												],
												"src": "5620:142:14"
											},
											{
												"body": {
													"nativeSrc": "5815:28:14",
													"nodeType": "YulBlock",
													"src": "5815:28:14",
													"statements": [
														{
															"nativeSrc": "5825:12:14",
															"nodeType": "YulAssignment",
															"src": "5825:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "5832:5:14",
																"nodeType": "YulIdentifier",
																"src": "5832:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5825:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5768:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:14",
														"nodeType": "YulTypedName",
														"src": "5801:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5811:3:14",
														"nodeType": "YulTypedName",
														"src": "5811:3:14",
														"type": ""
													}
												],
												"src": "5768:75:14"
											},
											{
												"body": {
													"nativeSrc": "5925:193:14",
													"nodeType": "YulBlock",
													"src": "5925:193:14",
													"statements": [
														{
															"nativeSrc": "5935:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5935:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5990:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5990:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5959:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5959:30:14"
																},
																"nativeSrc": "5959:39:14",
																"nodeType": "YulFunctionCall",
																"src": "5959:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5939:16:14",
																	"nodeType": "YulTypedName",
																	"src": "5939:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6014:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6054:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6054:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6048:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6048:5:14"
																				},
																				"nativeSrc": "6048:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6061:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6093:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "6093:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6069:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "6069:23:14"
																				},
																				"nativeSrc": "6069:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6020:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "6020:27:14"
																		},
																		"nativeSrc": "6020:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6007:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:14"
																},
																"nativeSrc": "6007:105:14",
																"nodeType": "YulFunctionCall",
																"src": "6007:105:14"
															},
															"nativeSrc": "6007:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "6007:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5849:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5902:4:14",
														"nodeType": "YulTypedName",
														"src": "5902:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5908:6:14",
														"nodeType": "YulTypedName",
														"src": "5908:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5916:7:14",
														"nodeType": "YulTypedName",
														"src": "5916:7:14",
														"type": ""
													}
												],
												"src": "5849:269:14"
											},
											{
												"body": {
													"nativeSrc": "6173:24:14",
													"nodeType": "YulBlock",
													"src": "6173:24:14",
													"statements": [
														{
															"nativeSrc": "6183:8:14",
															"nodeType": "YulAssignment",
															"src": "6183:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6190:1:14",
																"nodeType": "YulLiteral",
																"src": "6190:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6183:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6124:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6169:3:14",
														"nodeType": "YulTypedName",
														"src": "6169:3:14",
														"type": ""
													}
												],
												"src": "6124:73:14"
											},
											{
												"body": {
													"nativeSrc": "6256:136:14",
													"nodeType": "YulBlock",
													"src": "6256:136:14",
													"statements": [
														{
															"nativeSrc": "6266:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6280:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "6280:30:14"
																},
																"nativeSrc": "6280:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6280:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6270:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6270:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6365:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6371:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6379:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6321:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6321:43:14"
																},
																"nativeSrc": "6321:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6321:65:14"
															},
															"nativeSrc": "6321:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6321:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6203:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6242:4:14",
														"nodeType": "YulTypedName",
														"src": "6242:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6248:6:14",
														"nodeType": "YulTypedName",
														"src": "6248:6:14",
														"type": ""
													}
												],
												"src": "6203:189:14"
											},
											{
												"body": {
													"nativeSrc": "6448:136:14",
													"nodeType": "YulBlock",
													"src": "6448:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:63:14",
																"nodeType": "YulBlock",
																"src": "6515:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6559:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6559:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6566:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6529:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "6529:29:14"
																			},
																			"nativeSrc": "6529:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6529:39:14"
																		},
																		"nativeSrc": "6529:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6529:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6468:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6468:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6475:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6465:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6465:2:14"
																},
																"nativeSrc": "6465:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6465:14:14"
															},
															"nativeSrc": "6458:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6480:26:14",
																"nodeType": "YulBlock",
																"src": "6480:26:14",
																"statements": [
																	{
																		"nativeSrc": "6482:22:14",
																		"nodeType": "YulAssignment",
																		"src": "6482:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6495:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6495:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6491:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:14"
																			},
																			"nativeSrc": "6491:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6482:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6462:2:14",
																"nodeType": "YulBlock",
																"src": "6462:2:14",
																"statements": []
															},
															"src": "6458:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6398:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6436:5:14",
														"nodeType": "YulTypedName",
														"src": "6436:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6443:3:14",
														"nodeType": "YulTypedName",
														"src": "6443:3:14",
														"type": ""
													}
												],
												"src": "6398:186:14"
											},
											{
												"body": {
													"nativeSrc": "6669:464:14",
													"nodeType": "YulBlock",
													"src": "6669:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6695:431:14",
																"nodeType": "YulBlock",
																"src": "6695:431:14",
																"statements": [
																	{
																		"nativeSrc": "6709:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6709:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6757:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6757:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6725:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "6725:31:14"
																			},
																			"nativeSrc": "6725:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6713:8:14",
																				"nodeType": "YulTypedName",
																				"src": "6713:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6776:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6776:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6799:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "6799:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6827:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "6827:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6809:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "6809:17:14"
																					},
																					"nativeSrc": "6809:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6809:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6795:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:14"
																			},
																			"nativeSrc": "6795:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6780:11:14",
																				"nodeType": "YulTypedName",
																				"src": "6780:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6996:27:14",
																			"nodeType": "YulBlock",
																			"src": "6996:27:14",
																			"statements": [
																				{
																					"nativeSrc": "6998:23:14",
																					"nodeType": "YulAssignment",
																					"src": "6998:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7013:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "7013:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6998:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "6998:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6980:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "6980:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6992:2:14",
																					"nodeType": "YulLiteral",
																					"src": "6992:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6977:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6977:2:14"
																			},
																			"nativeSrc": "6977:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6977:18:14"
																		},
																		"nativeSrc": "6974:49:14",
																		"nodeType": "YulIf",
																		"src": "6974:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7065:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "7065:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7082:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "7082:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7110:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7092:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "7092:17:14"
																							},
																							"nativeSrc": "7092:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7092:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7078:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7078:3:14"
																					},
																					"nativeSrc": "7078:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7078:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7036:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "7036:28:14"
																			},
																			"nativeSrc": "7036:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7036:80:14"
																		},
																		"nativeSrc": "7036:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6686:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6683:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6683:2:14"
																},
																"nativeSrc": "6683:11:14",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:14"
															},
															"nativeSrc": "6680:446:14",
															"nodeType": "YulIf",
															"src": "6680:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6590:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6645:5:14",
														"nodeType": "YulTypedName",
														"src": "6645:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6652:3:14",
														"nodeType": "YulTypedName",
														"src": "6652:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6657:10:14",
														"nodeType": "YulTypedName",
														"src": "6657:10:14",
														"type": ""
													}
												],
												"src": "6590:543:14"
											},
											{
												"body": {
													"nativeSrc": "7202:54:14",
													"nodeType": "YulBlock",
													"src": "7202:54:14",
													"statements": [
														{
															"nativeSrc": "7212:37:14",
															"nodeType": "YulAssignment",
															"src": "7212:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7237:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7237:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7243:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7243:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7233:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:14"
																},
																"nativeSrc": "7233:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7233:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7212:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "7212:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7139:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7177:4:14",
														"nodeType": "YulTypedName",
														"src": "7177:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7183:5:14",
														"nodeType": "YulTypedName",
														"src": "7183:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7193:8:14",
														"nodeType": "YulTypedName",
														"src": "7193:8:14",
														"type": ""
													}
												],
												"src": "7139:117:14"
											},
											{
												"body": {
													"nativeSrc": "7313:118:14",
													"nodeType": "YulBlock",
													"src": "7313:118:14",
													"statements": [
														{
															"nativeSrc": "7323:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7323:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7372:1:14",
																						"nodeType": "YulLiteral",
																						"src": "7372:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7375:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7368:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:14"
																				},
																				"nativeSrc": "7368:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7387:1:14",
																						"nodeType": "YulLiteral",
																						"src": "7387:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7383:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7383:3:14"
																				},
																				"nativeSrc": "7383:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7339:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "7339:28:14"
																		},
																		"nativeSrc": "7339:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7335:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:14"
																},
																"nativeSrc": "7335:56:14",
																"nodeType": "YulFunctionCall",
																"src": "7335:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7327:4:14",
																	"nodeType": "YulTypedName",
																	"src": "7327:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7400:25:14",
															"nodeType": "YulAssignment",
															"src": "7400:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7414:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7420:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7420:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7410:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:14"
																},
																"nativeSrc": "7410:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7410:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7262:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7290:4:14",
														"nodeType": "YulTypedName",
														"src": "7290:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7296:5:14",
														"nodeType": "YulTypedName",
														"src": "7296:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7306:6:14",
														"nodeType": "YulTypedName",
														"src": "7306:6:14",
														"type": ""
													}
												],
												"src": "7262:169:14"
											},
											{
												"body": {
													"nativeSrc": "7517:214:14",
													"nodeType": "YulBlock",
													"src": "7517:214:14",
													"statements": [
														{
															"nativeSrc": "7650:37:14",
															"nodeType": "YulAssignment",
															"src": "7650:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7677:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7677:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7683:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7683:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7658:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "7658:18:14"
																},
																"nativeSrc": "7658:29:14",
																"nodeType": "YulFunctionCall",
																"src": "7658:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7650:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7650:4:14"
																}
															]
														},
														{
															"nativeSrc": "7696:29:14",
															"nodeType": "YulAssignment",
															"src": "7696:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7720:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7713:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:14"
																		},
																		"nativeSrc": "7713:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7704:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7704:2:14"
																},
																"nativeSrc": "7704:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7704:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7696:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7436:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7498:4:14",
														"nodeType": "YulTypedName",
														"src": "7498:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7504:3:14",
														"nodeType": "YulTypedName",
														"src": "7504:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7512:4:14",
														"nodeType": "YulTypedName",
														"src": "7512:4:14",
														"type": ""
													}
												],
												"src": "7436:295:14"
											},
											{
												"body": {
													"nativeSrc": "7828:1303:14",
													"nodeType": "YulBlock",
													"src": "7828:1303:14",
													"statements": [
														{
															"nativeSrc": "7839:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7886:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7853:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "7853:32:14"
																},
																"nativeSrc": "7853:37:14",
																"nodeType": "YulFunctionCall",
																"src": "7853:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7843:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7843:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7975:22:14",
																"nodeType": "YulBlock",
																"src": "7975:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7977:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:14"
																			},
																			"nativeSrc": "7977:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:14"
																		},
																		"nativeSrc": "7977:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7947:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7955:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7944:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:14"
																},
																"nativeSrc": "7944:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:14"
															},
															"nativeSrc": "7941:56:14",
															"nodeType": "YulIf",
															"src": "7941:56:14"
														},
														{
															"nativeSrc": "8007:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8007:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8053:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8053:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8047:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "8047:5:14"
																		},
																		"nativeSrc": "8047:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8021:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "8021:25:14"
																},
																"nativeSrc": "8021:38:14",
																"nodeType": "YulFunctionCall",
																"src": "8021:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8011:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8011:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8152:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8152:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8158:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8158:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8166:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8106:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "8106:45:14"
																},
																"nativeSrc": "8106:67:14",
																"nodeType": "YulFunctionCall",
																"src": "8106:67:14"
															},
															"nativeSrc": "8106:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "8106:67:14"
														},
														{
															"nativeSrc": "8183:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8183:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "8200:1:14",
																"nodeType": "YulLiteral",
																"src": "8200:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8187:9:14",
																	"nodeType": "YulTypedName",
																	"src": "8187:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8211:17:14",
															"nodeType": "YulAssignment",
															"src": "8211:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "8224:4:14",
																"nodeType": "YulLiteral",
																"src": "8224:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8211:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "8211:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8275:611:14",
																		"nodeType": "YulBlock",
																		"src": "8275:611:14",
																		"statements": [
																			{
																				"nativeSrc": "8289:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8289:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8308:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8308:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8320:4:14",
																									"nodeType": "YulLiteral",
																									"src": "8320:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8316:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8316:3:14"
																							},
																							"nativeSrc": "8316:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8316:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8304:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8304:3:14"
																					},
																					"nativeSrc": "8304:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8304:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8293:7:14",
																						"nodeType": "YulTypedName",
																						"src": "8293:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8340:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8340:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8386:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8386:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8354:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "8354:31:14"
																					},
																					"nativeSrc": "8354:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8354:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8344:6:14",
																						"nodeType": "YulTypedName",
																						"src": "8344:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8404:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8404:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8413:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8408:1:14",
																						"nodeType": "YulTypedName",
																						"src": "8408:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8472:163:14",
																					"nodeType": "YulBlock",
																					"src": "8472:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8497:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8497:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8515:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "8515:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8520:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "8520:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8511:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "8511:3:14"
																												},
																												"nativeSrc": "8511:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "8511:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8505:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "8505:5:14"
																										},
																										"nativeSrc": "8505:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8505:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8490:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8490:6:14"
																								},
																								"nativeSrc": "8490:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8490:42:14"
																							},
																							"nativeSrc": "8490:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "8490:42:14"
																						},
																						{
																							"nativeSrc": "8549:24:14",
																							"nodeType": "YulAssignment",
																							"src": "8549:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8563:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8563:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:1:14",
																										"nodeType": "YulLiteral",
																										"src": "8571:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8559:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8559:3:14"
																								},
																								"nativeSrc": "8559:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8559:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8549:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8590:31:14",
																							"nodeType": "YulAssignment",
																							"src": "8590:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8607:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "8607:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8618:2:14",
																										"nodeType": "YulLiteral",
																										"src": "8618:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8603:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8603:3:14"
																								},
																								"nativeSrc": "8603:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8603:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8590:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "8590:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8438:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "8438:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8441:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8441:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8435:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "8435:2:14"
																					},
																					"nativeSrc": "8435:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:14:14"
																				},
																				"nativeSrc": "8427:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8450:21:14",
																					"nodeType": "YulBlock",
																					"src": "8450:21:14",
																					"statements": [
																						{
																							"nativeSrc": "8452:17:14",
																							"nodeType": "YulAssignment",
																							"src": "8452:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8461:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "8461:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8464:4:14",
																										"nodeType": "YulLiteral",
																										"src": "8464:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8457:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8457:3:14"
																								},
																								"nativeSrc": "8457:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8452:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "8452:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8431:3:14",
																					"nodeType": "YulBlock",
																					"src": "8431:3:14",
																					"statements": []
																				},
																				"src": "8427:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "8671:156:14",
																					"nodeType": "YulBlock",
																					"src": "8671:156:14",
																					"statements": [
																						{
																							"nativeSrc": "8689:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8689:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8716:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8716:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8721:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8721:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8712:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8712:3:14"
																										},
																										"nativeSrc": "8712:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8712:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8706:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8706:5:14"
																								},
																								"nativeSrc": "8706:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8706:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8693:9:14",
																									"nodeType": "YulTypedName",
																									"src": "8693:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8783:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8783:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8798:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "8798:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8806:4:14",
																														"nodeType": "YulLiteral",
																														"src": "8806:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8794:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "8794:3:14"
																												},
																												"nativeSrc": "8794:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "8794:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8764:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "8764:18:14"
																										},
																										"nativeSrc": "8764:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8764:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8749:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8749:6:14"
																								},
																								"nativeSrc": "8749:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8749:64:14"
																							},
																							"nativeSrc": "8749:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "8749:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8654:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8654:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8663:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8663:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8651:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "8651:2:14"
																					},
																					"nativeSrc": "8651:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8651:19:14"
																				},
																				"nativeSrc": "8648:179:14",
																				"nodeType": "YulIf",
																				"src": "8648:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8847:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8847:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8861:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "8861:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8869:1:14",
																											"nodeType": "YulLiteral",
																											"src": "8869:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8857:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8857:3:14"
																									},
																									"nativeSrc": "8857:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8857:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8873:1:14",
																									"nodeType": "YulLiteral",
																									"src": "8873:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8853:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8853:3:14"
																							},
																							"nativeSrc": "8853:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8853:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8840:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8840:6:14"
																					},
																					"nativeSrc": "8840:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8840:36:14"
																				},
																				"nativeSrc": "8840:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8840:36:14"
																			}
																		]
																	},
																	"nativeSrc": "8268:618:14",
																	"nodeType": "YulCase",
																	"src": "8268:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8273:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8903:222:14",
																		"nodeType": "YulBlock",
																		"src": "8903:222:14",
																		"statements": [
																			{
																				"nativeSrc": "8917:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8930:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8921:5:14",
																						"nodeType": "YulTypedName",
																						"src": "8921:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8954:67:14",
																					"nodeType": "YulBlock",
																					"src": "8954:67:14",
																					"statements": [
																						{
																							"nativeSrc": "8972:35:14",
																							"nodeType": "YulAssignment",
																							"src": "8972:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8991:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8991:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8996:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8996:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8987:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8987:3:14"
																										},
																										"nativeSrc": "8987:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8987:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8981:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8981:5:14"
																								},
																								"nativeSrc": "8981:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8981:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8972:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8972:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8947:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8947:6:14"
																				},
																				"nativeSrc": "8944:77:14",
																				"nodeType": "YulIf",
																				"src": "8944:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9041:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "9041:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9100:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "9100:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9107:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "9107:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9047:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "9047:52:14"
																							},
																							"nativeSrc": "9047:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9034:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:14"
																					},
																					"nativeSrc": "9034:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "9034:81:14"
																				},
																				"nativeSrc": "9034:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "9034:81:14"
																			}
																		]
																	},
																	"nativeSrc": "8895:230:14",
																	"nodeType": "YulCase",
																	"src": "8895:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8248:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8245:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8245:2:14"
																},
																"nativeSrc": "8245:14:14",
																"nodeType": "YulFunctionCall",
																"src": "8245:14:14"
															},
															"nativeSrc": "8238:887:14",
															"nodeType": "YulSwitch",
															"src": "8238:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7736:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7817:4:14",
														"nodeType": "YulTypedName",
														"src": "7817:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7823:3:14",
														"nodeType": "YulTypedName",
														"src": "7823:3:14",
														"type": ""
													}
												],
												"src": "7736:1395:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051612bb4380380612bb483398181016040528101906100319190610237565b8282815f908161004191906104cc565b50806001908161005191906104cc565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050505061059b565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100ef826100a9565b810181811067ffffffffffffffff8211171561010e5761010d6100b9565b5b80604052505050565b5f610120610090565b905061012c82826100e6565b919050565b5f67ffffffffffffffff82111561014b5761014a6100b9565b5b610154826100a9565b9050602081019050919050565b8281835e5f83830152505050565b5f61018161017c84610131565b610117565b90508281526020810184848401111561019d5761019c6100a5565b5b6101a8848285610161565b509392505050565b5f82601f8301126101c4576101c36100a1565b5b81516101d484826020860161016f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610206826101dd565b9050919050565b610216816101fc565b8114610220575f80fd5b50565b5f815190506102318161020d565b92915050565b5f805f6060848603121561024e5761024d610099565b5b5f84015167ffffffffffffffff81111561026b5761026a61009d565b5b610277868287016101b0565b935050602084015167ffffffffffffffff8111156102985761029761009d565b5b6102a4868287016101b0565b92505060406102b586828701610223565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030d57607f821691505b6020821081036103205761031f6102c9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610347565b61038c8683610347565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103d06103cb6103c6846103a4565b6103ad565b6103a4565b9050919050565b5f819050919050565b6103e9836103b6565b6103fd6103f5826103d7565b848454610353565b825550505050565b5f90565b610411610405565b61041c8184846103e0565b505050565b5b8181101561043f576104345f82610409565b600181019050610422565b5050565b601f8211156104845761045581610326565b61045e84610338565b8101602085101561046d578190505b61048161047985610338565b830182610421565b50505b505050565b5f82821c905092915050565b5f6104a45f1984600802610489565b1980831691505092915050565b5f6104bc8383610495565b9150826002028217905092915050565b6104d5826102bf565b67ffffffffffffffff8111156104ee576104ed6100b9565b5b6104f882546102f6565b610503828285610443565b5f60209050601f831160018114610534575f8415610522578287015190505b61052c85826104b1565b865550610593565b601f19841661054286610326565b5f5b8281101561056957848901518255600182019150602085019450602081019050610544565b868310156105865784890151610582601f891682610495565b8355505b6001600288020188555050505b505050505050565b6080516125fa6105ba5f395f818161056d015261069e01526125fa5ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c8063630303c6116100a057806395d89b411161006f57806395d89b4114610314578063a22cb46514610332578063b88d4fde1461034e578063c87b56dd1461036a578063e985e9c51461039a57610114565b8063630303c6146102685780636352211e1461029857806370a08231146102c857806394d008ef146102f857610114565b8063238ac933116100e7578063238ac933146101b257806323b872dd146101d0578063258ae582146101ec57806342842e0e1461021c578063512c91df1461023857610114565b806301ffc9a71461011857806306fdde0314610148578063081812fc14610166578063095ea7b314610196575b5f80fd5b610132600480360381019061012d9190611b99565b6103ca565b60405161013f9190611bde565b60405180910390f35b6101506104ab565b60405161015d9190611c67565b60405180910390f35b610180600480360381019061017b9190611cba565b61053a565b60405161018d9190611d24565b60405180910390f35b6101b060048036038101906101ab9190611d67565b610555565b005b6101ba61056b565b6040516101c79190611d24565b60405180910390f35b6101ea60048036038101906101e59190611da5565b61058f565b005b61020660048036038101906102019190611f54565b61068e565b6040516102139190611bde565b60405180910390f35b61023660048036038101906102319190611da5565b6106f4565b005b610252600480360381019061024d9190611d67565b610713565b60405161025f9190611fbd565b60405180910390f35b610282600480360381019061027d9190611fd6565b610745565b60405161028f9190611bde565b60405180910390f35b6102b260048036038101906102ad9190611cba565b610762565b6040516102bf9190611d24565b60405180910390f35b6102e260048036038101906102dd9190611fd6565b610773565b6040516102ef9190612010565b60405180910390f35b610312600480360381019061030d9190612029565b610829565b005b61031c61097b565b6040516103299190611c67565b60405180910390f35b61034c600480360381019061034791906120bf565b610a0b565b005b610368600480360381019061036391906120fd565b610a21565b005b610384600480360381019061037f9190611cba565b610a3e565b6040516103919190611c67565b60405180910390f35b6103b460048036038101906103af919061217d565b610aa4565b6040516103c19190611bde565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104a457506104a382610b32565b5b9050919050565b60605f80546104b9906121e8565b80601f01602080910402602001604051908101604052809291908181526020018280546104e5906121e8565b80156105305780601f1061050757610100808354040283529160200191610530565b820191905f5260205f20905b81548152906001019060200180831161051357829003601f168201915b5050505050905090565b5f61054482610b9b565b5061054e82610c21565b9050919050565b6105678282610562610c5a565b610c61565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ff575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105f69190611d24565b60405180910390fd5b5f610612838361060d610c5a565b610c73565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610688578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161067f93929190612218565b60405180910390fd5b50505050565b5f8061069a8484610e7e565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161491505092915050565b61070e83838360405180602001604052805f815250610a21565b505050565b5f82826040516020016107279291906122b2565b60405160208183030381529060405280519060200120905092915050565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f61076c82610b9b565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e4575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107db9190611d24565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6108348484610713565b90505f61084082610ea8565b905061084c818461068e565b61088b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088290612327565b60405180910390fd5b60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c9061238f565b60405180910390fd5b61091f8585610edb565b600160065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050505050565b60606001805461098a906121e8565b80601f01602080910402602001604051908101604052809291908181526020018280546109b6906121e8565b8015610a015780601f106109d857610100808354040283529160200191610a01565b820191905f5260205f20905b8154815290600101906020018083116109e457829003601f168201915b5050505050905090565b610a1d610a16610c5a565b8383610fce565b5050565b610a2c84848461058f565b610a3884848484611137565b50505050565b6060610a4982610b9b565b505f610a536112e9565b90505f815111610a715760405180602001604052805f815250610a9c565b80610a7b846112ff565b604051602001610a8c9291906123e7565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ba6836113c9565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c1857826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c0f9190612010565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610c6e8383836001611402565b505050565b5f80610c7e846113c9565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cbf57610cbe8184866115c1565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d4a57610cfe5f855f80611402565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610dc957600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f805f80610e8c8686611684565b925092509250610e9c82826116d9565b82935050505092915050565b5f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5281601c52603c5f209050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f4b575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f429190611d24565b60405180910390fd5b5f610f5783835f610c73565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fc9575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610fc09190611d24565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361103e57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110359190611d24565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161112a9190611bde565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156112e3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261117a610c5a565b8685856040518563ffffffff1660e01b815260040161119c949392919061245c565b6020604051808303815f875af19250505080156111d757506040513d601f19601f820116820180604052508101906111d491906124ba565b60015b611258573d805f8114611205576040519150601f19603f3d011682016040523d82523d5f602084013e61120a565b606091505b505f81510361125057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112479190611d24565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112e157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112d89190611d24565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f600161130d8461183b565b0190505f8167ffffffffffffffff81111561132b5761132a611e30565b5b6040519080825280601f01601f19166020018201604052801561135d5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156113be578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113b3576113b26124e5565b5b0494505f850361136a575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061143a57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561156c575f61144984610b9b565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114b357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114c657506114c48184610aa4565b155b1561150857826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114ff9190611d24565b60405180910390fd5b811561156a57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115cc83838361198c565b61167f575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361164057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116379190612010565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611676929190612512565b60405180910390fd5b505050565b5f805f60418451036116c4575f805f602087015192506040870151915060608701515f1a90506116b688828585611a4c565b9550955095505050506116d2565b5f600285515f1b9250925092505b9250925092565b5f60038111156116ec576116eb612539565b5b8260038111156116ff576116fe612539565b5b0315611837576001600381111561171957611718612539565b5b82600381111561172c5761172b612539565b5b03611763576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561177757611776612539565b5b82600381111561178a57611789612539565b5b036117ce57805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016117c59190612010565b60405180910390fd5b6003808111156117e1576117e0612539565b5b8260038111156117f4576117f3612539565b5b0361183657806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161182d9190611fbd565b60405180910390fd5b5b5050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611897577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161188d5761188c6124e5565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106118d4576d04ee2d6d415b85acef810000000083816118ca576118c96124e5565b5b0492506020810190505b662386f26fc10000831061190357662386f26fc1000083816118f9576118f86124e5565b5b0492506010810190505b6305f5e100831061192c576305f5e1008381611922576119216124e5565b5b0492506008810190505b6127108310611951576127108381611947576119466124e5565b5b0492506004810190505b60648310611974576064838161196a576119696124e5565b5b0492506002810190505b600a8310611983576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a4357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a045750611a038484610aa4565b5b80611a4257508273ffffffffffffffffffffffffffffffffffffffff16611a2a83610c21565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611a88575f600385925092509250611b29565b5f6001888888886040515f8152602001604052604051611aab9493929190612581565b6020604051602081039080840390855afa158015611acb573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b1c575f60015f801b93509350935050611b29565b805f805f1b935093509350505b9450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b7881611b44565b8114611b82575f80fd5b50565b5f81359050611b9381611b6f565b92915050565b5f60208284031215611bae57611bad611b3c565b5b5f611bbb84828501611b85565b91505092915050565b5f8115159050919050565b611bd881611bc4565b82525050565b5f602082019050611bf15f830184611bcf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c3982611bf7565b611c438185611c01565b9350611c53818560208601611c11565b611c5c81611c1f565b840191505092915050565b5f6020820190508181035f830152611c7f8184611c2f565b905092915050565b5f819050919050565b611c9981611c87565b8114611ca3575f80fd5b50565b5f81359050611cb481611c90565b92915050565b5f60208284031215611ccf57611cce611b3c565b5b5f611cdc84828501611ca6565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d0e82611ce5565b9050919050565b611d1e81611d04565b82525050565b5f602082019050611d375f830184611d15565b92915050565b611d4681611d04565b8114611d50575f80fd5b50565b5f81359050611d6181611d3d565b92915050565b5f8060408385031215611d7d57611d7c611b3c565b5b5f611d8a85828601611d53565b9250506020611d9b85828601611ca6565b9150509250929050565b5f805f60608486031215611dbc57611dbb611b3c565b5b5f611dc986828701611d53565b9350506020611dda86828701611d53565b9250506040611deb86828701611ca6565b9150509250925092565b5f819050919050565b611e0781611df5565b8114611e11575f80fd5b50565b5f81359050611e2281611dfe565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e6682611c1f565b810181811067ffffffffffffffff82111715611e8557611e84611e30565b5b80604052505050565b5f611e97611b33565b9050611ea38282611e5d565b919050565b5f67ffffffffffffffff821115611ec257611ec1611e30565b5b611ecb82611c1f565b9050602081019050919050565b828183375f83830152505050565b5f611ef8611ef384611ea8565b611e8e565b905082815260208101848484011115611f1457611f13611e2c565b5b611f1f848285611ed8565b509392505050565b5f82601f830112611f3b57611f3a611e28565b5b8135611f4b848260208601611ee6565b91505092915050565b5f8060408385031215611f6a57611f69611b3c565b5b5f611f7785828601611e14565b925050602083013567ffffffffffffffff811115611f9857611f97611b40565b5b611fa485828601611f27565b9150509250929050565b611fb781611df5565b82525050565b5f602082019050611fd05f830184611fae565b92915050565b5f60208284031215611feb57611fea611b3c565b5b5f611ff884828501611d53565b91505092915050565b61200a81611c87565b82525050565b5f6020820190506120235f830184612001565b92915050565b5f805f606084860312156120405761203f611b3c565b5b5f61204d86828701611d53565b935050602061205e86828701611ca6565b925050604084013567ffffffffffffffff81111561207f5761207e611b40565b5b61208b86828701611f27565b9150509250925092565b61209e81611bc4565b81146120a8575f80fd5b50565b5f813590506120b981612095565b92915050565b5f80604083850312156120d5576120d4611b3c565b5b5f6120e285828601611d53565b92505060206120f3858286016120ab565b9150509250929050565b5f805f806080858703121561211557612114611b3c565b5b5f61212287828801611d53565b945050602061213387828801611d53565b935050604061214487828801611ca6565b925050606085013567ffffffffffffffff81111561216557612164611b40565b5b61217187828801611f27565b91505092959194509250565b5f806040838503121561219357612192611b3c565b5b5f6121a085828601611d53565b92505060206121b185828601611d53565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121ff57607f821691505b602082108103612212576122116121bb565b5b50919050565b5f60608201905061222b5f830186611d15565b6122386020830185612001565b6122456040830184611d15565b949350505050565b5f8160601b9050919050565b5f6122638261224d565b9050919050565b5f61227482612259565b9050919050565b61228c61228782611d04565b61226a565b82525050565b5f819050919050565b6122ac6122a782611c87565b612292565b82525050565b5f6122bd828561227b565b6014820191506122cd828461229b565b6020820191508190509392505050565b7f496e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f612311601183611c01565b915061231c826122dd565b602082019050919050565b5f6020820190508181035f83015261233e81612305565b9050919050565b7f416c7265616479206d696e7465642100000000000000000000000000000000005f82015250565b5f612379600f83611c01565b915061238482612345565b602082019050919050565b5f6020820190508181035f8301526123a68161236d565b9050919050565b5f81905092915050565b5f6123c182611bf7565b6123cb81856123ad565b93506123db818560208601611c11565b80840191505092915050565b5f6123f282856123b7565b91506123fe82846123b7565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61242e8261240a565b6124388185612414565b9350612448818560208601611c11565b61245181611c1f565b840191505092915050565b5f60808201905061246f5f830187611d15565b61247c6020830186611d15565b6124896040830185612001565b818103606083015261249b8184612424565b905095945050505050565b5f815190506124b481611b6f565b92915050565b5f602082840312156124cf576124ce611b3c565b5b5f6124dc848285016124a6565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506125255f830185611d15565b6125326020830184612001565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f60ff82169050919050565b61257b81612566565b82525050565b5f6080820190506125945f830187611fae565b6125a16020830186612572565b6125ae6040830185611fae565b6125bb6060830184611fae565b9594505050505056fea2646970667358221220065f81b4f244fdc43a07a9c6c414be5fdf5059dd08436d747577a63a025e88dc64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BB4 CODESIZE SUB DUP1 PUSH2 0x2BB4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x41 SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x59B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xEF DUP3 PUSH2 0xA9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10E JUMPI PUSH2 0x10D PUSH2 0xB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 PUSH2 0x90 JUMP JUMPDEST SWAP1 POP PUSH2 0x12C DUP3 DUP3 PUSH2 0xE6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14B JUMPI PUSH2 0x14A PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH2 0x154 DUP3 PUSH2 0xA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x181 PUSH2 0x17C DUP5 PUSH2 0x131 JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0xA5 JUMP JUMPDEST JUMPDEST PUSH2 0x1A8 DUP5 DUP3 DUP6 PUSH2 0x161 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x1C3 PUSH2 0xA1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1D4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x206 DUP3 PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FC JUMP JUMPDEST DUP2 EQ PUSH2 0x220 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x231 DUP2 PUSH2 0x20D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x99 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26A PUSH2 0x9D JUMP JUMPDEST JUMPDEST PUSH2 0x277 DUP7 DUP3 DUP8 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x297 PUSH2 0x9D JUMP JUMPDEST JUMPDEST PUSH2 0x2A4 DUP7 DUP3 DUP8 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B5 DUP7 DUP3 DUP8 ADD PUSH2 0x223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x382 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x38C DUP7 DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D0 PUSH2 0x3CB PUSH2 0x3C6 DUP5 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E9 DUP4 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x3F5 DUP3 PUSH2 0x3D7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x353 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x41C DUP2 DUP5 DUP5 PUSH2 0x3E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH2 0x434 PUSH0 DUP3 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x422 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x455 DUP2 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x45E DUP5 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x481 PUSH2 0x479 DUP6 PUSH2 0x338 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x421 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x489 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D5 DUP3 PUSH2 0x2BF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP3 SLOAD PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x503 DUP3 DUP3 DUP6 PUSH2 0x443 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x534 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x522 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52C DUP6 DUP3 PUSH2 0x4B1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x542 DUP7 PUSH2 0x326 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x569 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x544 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x586 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x582 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x495 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x25FA PUSH2 0x5BA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x56D ADD MSTORE PUSH2 0x69E ADD MSTORE PUSH2 0x25FA PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630303C6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x630303C6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x94D008EF EQ PUSH2 0x2F8 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x238AC933 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x258AE582 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x512C91DF EQ PUSH2 0x238 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x494 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4A4 JUMPI POP PUSH2 0x4A3 DUP3 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4B9 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E5 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x530 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x507 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x530 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x513 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x544 DUP3 PUSH2 0xB9B JUMP JUMPDEST POP PUSH2 0x54E DUP3 PUSH2 0xC21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x567 DUP3 DUP3 PUSH2 0x562 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x612 DUP4 DUP4 PUSH2 0x60D PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x688 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x69A DUP5 DUP5 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x727 SWAP3 SWAP2 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x76C DUP3 PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x834 DUP5 DUP5 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x840 DUP3 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP PUSH2 0x84C DUP2 DUP5 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91F DUP6 DUP6 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x98A SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9B6 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA01 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA01 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA16 PUSH2 0xC5A JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA2C DUP5 DUP5 DUP5 PUSH2 0x58F JUMP JUMPDEST PUSH2 0xA38 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1137 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA49 DUP3 PUSH2 0xB9B JUMP JUMPDEST POP PUSH0 PUSH2 0xA53 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA9C JUMP JUMPDEST DUP1 PUSH2 0xA7B DUP5 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA8C SWAP3 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBA6 DUP4 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC18 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC6E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1402 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC7E DUP5 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBF JUMPI PUSH2 0xCBE DUP2 DUP5 DUP7 PUSH2 0x15C1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD4A JUMPI PUSH2 0xCFE PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC9 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xE8C DUP7 DUP7 PUSH2 0x1684 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE9C DUP3 DUP3 PUSH2 0x16D9 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF57 DUP4 DUP4 PUSH0 PUSH2 0xC73 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12E3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x117A PUSH2 0xC5A JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1258 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1250 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x130D DUP5 PUSH2 0x183B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x132B JUMPI PUSH2 0x132A PUSH2 0x1E30 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x135D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13BE JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13B3 JUMPI PUSH2 0x13B2 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x136A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x143A JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x156C JUMPI PUSH0 PUSH2 0x1449 DUP5 PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x14B3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14C6 JUMPI POP PUSH2 0x14C4 DUP2 DUP5 PUSH2 0xAA4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1508 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x156A JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15CC DUP4 DUP4 DUP4 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x167F JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1640 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1676 SWAP3 SWAP2 SWAP1 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x16C4 JUMPI PUSH0 DUP1 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x16B6 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1A4C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1837 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1719 JUMPI PUSH2 0x1718 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1763 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1777 JUMPI PUSH2 0x1776 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x17CE JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C5 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x17E1 JUMPI PUSH2 0x17E0 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI PUSH2 0x17F3 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1836 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182D SWAP2 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1897 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18D4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1903 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18F9 JUMPI PUSH2 0x18F8 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x192C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1951 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1947 JUMPI PUSH2 0x1946 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1974 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1983 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A43 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A04 JUMPI POP PUSH2 0x1A03 DUP5 DUP5 PUSH2 0xAA4 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A42 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A2A DUP4 PUSH2 0xC21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1A88 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1B29 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1AAB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2581 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ACB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B1C JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1B29 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B78 DUP2 PUSH2 0x1B44 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B93 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BAE JUMPI PUSH2 0x1BAD PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBB DUP5 DUP3 DUP6 ADD PUSH2 0x1B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD8 DUP2 PUSH2 0x1BC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C39 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x1C43 DUP2 DUP6 PUSH2 0x1C01 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x1C5C DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7F DUP2 DUP5 PUSH2 0x1C2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C99 DUP2 PUSH2 0x1C87 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB4 DUP2 PUSH2 0x1C90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CDC DUP5 DUP3 DUP6 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E DUP3 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1E DUP2 PUSH2 0x1D04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D37 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D46 DUP2 PUSH2 0x1D04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D50 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D61 DUP2 PUSH2 0x1D3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8A DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D9B DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH2 0x1DBB PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DDA DUP7 DUP3 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DEB DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E07 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E22 DUP2 PUSH2 0x1DFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E66 DUP3 PUSH2 0x1C1F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E85 JUMPI PUSH2 0x1E84 PUSH2 0x1E30 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E97 PUSH2 0x1B33 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA3 DUP3 DUP3 PUSH2 0x1E5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1E30 JUMP JUMPDEST JUMPDEST PUSH2 0x1ECB DUP3 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF8 PUSH2 0x1EF3 DUP5 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x1E8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F14 JUMPI PUSH2 0x1F13 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH2 0x1F1F DUP5 DUP3 DUP6 PUSH2 0x1ED8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F3B JUMPI PUSH2 0x1F3A PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F77 DUP6 DUP3 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F97 PUSH2 0x1B40 JUMP JUMPDEST JUMPDEST PUSH2 0x1FA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF8 DUP5 DUP3 DUP6 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200A DUP2 PUSH2 0x1C87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2023 PUSH0 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x204D DUP7 DUP3 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x205E DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1B40 JUMP JUMPDEST JUMPDEST PUSH2 0x208B DUP7 DUP3 DUP8 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x209E DUP2 PUSH2 0x1BC4 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B9 DUP2 PUSH2 0x2095 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20D4 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20F3 DUP6 DUP3 DUP7 ADD PUSH2 0x20AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2122 DUP8 DUP3 DUP9 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2133 DUP8 DUP3 DUP9 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2144 DUP8 DUP3 DUP9 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2165 JUMPI PUSH2 0x2164 PUSH2 0x1B40 JUMP JUMPDEST JUMPDEST PUSH2 0x2171 DUP8 DUP3 DUP9 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2193 JUMPI PUSH2 0x2192 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2212 JUMPI PUSH2 0x2211 PUSH2 0x21BB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x222B PUSH0 DUP4 ADD DUP7 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x2238 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x2245 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D15 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2263 DUP3 PUSH2 0x224D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2274 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228C PUSH2 0x2287 DUP3 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x226A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22AC PUSH2 0x22A7 DUP3 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x2292 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22BD DUP3 DUP6 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x22CD DUP3 DUP5 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 PUSH1 0x11 DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x231C DUP3 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233E DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206D696E746564210000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2379 PUSH1 0xF DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2384 DUP3 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A6 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23C1 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x23CB DUP2 DUP6 PUSH2 0x23AD JUMP JUMPDEST SWAP4 POP PUSH2 0x23DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23F2 DUP3 DUP6 PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23FE DUP3 DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x242E DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x2438 DUP2 DUP6 PUSH2 0x2414 JUMP JUMPDEST SWAP4 POP PUSH2 0x2448 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x2451 DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x246F PUSH0 DUP4 ADD DUP8 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x247C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x2489 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2001 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x249B DUP2 DUP5 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B4 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24DC DUP5 DUP3 DUP6 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2525 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x2532 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x257B DUP2 PUSH2 0x2566 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH0 DUP4 ADD DUP8 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x25A1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2572 JUMP JUMPDEST PUSH2 0x25AE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x25BB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FAE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH0 DUP2 0xB4 CALLCODE PREVRANDAO REVERT 0xC4 GASPRICE SMOD 0xA9 0xC6 0xC4 EQ 0xBE PUSH0 0xDF POP MSIZE 0xDD ADDMOD NUMBER PUSH14 0x747577A63A025E88DC64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "254:1624:13:-:0;;;425:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;505:5;512:7;1455:5:1;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;540:7:13::1;531:16;;;;;;;;::::0;::::1;425:129:::0;;;254:1624;;7:75:14;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3401:1;3390:9;3386:17;3380:24;3431:18;3423:6;3420:30;3417:117;;;3453:79;;:::i;:::-;3417:117;3558:74;3624:7;3615:6;3604:9;3600:22;3558:74;:::i;:::-;3548:84;;3351:291;3702:2;3691:9;3687:18;3681:25;3733:18;3725:6;3722:30;3719:117;;;3755:79;;:::i;:::-;3719:117;3860:74;3926:7;3917:6;3906:9;3902:22;3860:74;:::i;:::-;3850:84;;3652:292;3983:2;4009:64;4065:7;4056:6;4045:9;4041:22;4009:64;:::i;:::-;3999:74;;3954:129;3081:1009;;;;;:::o;4096:99::-;4148:6;4182:5;4176:12;4166:22;;4096:99;;;:::o;4201:180::-;4249:77;4246:1;4239:88;4346:4;4343:1;4336:15;4370:4;4367:1;4360:15;4387:320;4431:6;4468:1;4462:4;4458:12;4448:22;;4515:1;4509:4;4505:12;4536:18;4526:81;;4592:4;4584:6;4580:17;4570:27;;4526:81;4654:2;4646:6;4643:14;4623:18;4620:38;4617:84;;4673:18;;:::i;:::-;4617:84;4438:269;4387:320;;;:::o;4713:141::-;4762:4;4785:3;4777:11;;4808:3;4805:1;4798:14;4842:4;4839:1;4829:18;4821:26;;4713:141;;;:::o;4860:93::-;4897:6;4944:2;4939;4932:5;4928:14;4924:23;4914:33;;4860:93;;;:::o;4959:107::-;5003:8;5053:5;5047:4;5043:16;5022:37;;4959:107;;;;:::o;5072:393::-;5141:6;5191:1;5179:10;5175:18;5214:97;5244:66;5233:9;5214:97;:::i;:::-;5332:39;5362:8;5351:9;5332:39;:::i;:::-;5320:51;;5404:4;5400:9;5393:5;5389:21;5380:30;;5453:4;5443:8;5439:19;5432:5;5429:30;5419:40;;5148:317;;5072:393;;;;;:::o;5471:77::-;5508:7;5537:5;5526:16;;5471:77;;;:::o;5554:60::-;5582:3;5603:5;5596:12;;5554:60;;;:::o;5620:142::-;5670:9;5703:53;5721:34;5730:24;5748:5;5730:24;:::i;:::-;5721:34;:::i;:::-;5703:53;:::i;:::-;5690:66;;5620:142;;;:::o;5768:75::-;5811:3;5832:5;5825:12;;5768:75;;;:::o;5849:269::-;5959:39;5990:7;5959:39;:::i;:::-;6020:91;6069:41;6093:16;6069:41;:::i;:::-;6061:6;6054:4;6048:11;6020:91;:::i;:::-;6014:4;6007:105;5925:193;5849:269;;;:::o;6124:73::-;6169:3;6124:73;:::o;6203:189::-;6280:32;;:::i;:::-;6321:65;6379:6;6371;6365:4;6321:65;:::i;:::-;6256:136;6203:189;;:::o;6398:186::-;6458:120;6475:3;6468:5;6465:14;6458:120;;;6529:39;6566:1;6559:5;6529:39;:::i;:::-;6502:1;6495:5;6491:13;6482:22;;6458:120;;;6398:186;;:::o;6590:543::-;6691:2;6686:3;6683:11;6680:446;;;6725:38;6757:5;6725:38;:::i;:::-;6809:29;6827:10;6809:29;:::i;:::-;6799:8;6795:44;6992:2;6980:10;6977:18;6974:49;;;7013:8;6998:23;;6974:49;7036:80;7092:22;7110:3;7092:22;:::i;:::-;7082:8;7078:37;7065:11;7036:80;:::i;:::-;6695:431;;6680:446;6590:543;;;:::o;7139:117::-;7193:8;7243:5;7237:4;7233:16;7212:37;;7139:117;;;;:::o;7262:169::-;7306:6;7339:51;7387:1;7383:6;7375:5;7372:1;7368:13;7339:51;:::i;:::-;7335:56;7420:4;7414;7410:15;7400:25;;7313:118;7262:169;;;;:::o;7436:295::-;7512:4;7658:29;7683:3;7677:4;7658:29;:::i;:::-;7650:37;;7720:3;7717:1;7713:11;7707:4;7704:21;7696:29;;7436:295;;;;:::o;7736:1395::-;7853:37;7886:3;7853:37;:::i;:::-;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8021:38;8053:4;8047:11;8021:38;:::i;:::-;8106:67;8166:6;8158;8152:4;8106:67;:::i;:::-;8200:1;8224:4;8211:17;;8256:2;8248:6;8245:14;8273:1;8268:618;;;;8930:1;8947:6;8944:77;;;8996:9;8991:3;8987:19;8981:26;8972:35;;8944:77;9047:67;9107:6;9100:5;9047:67;:::i;:::-;9041:4;9034:81;8903:222;8238:887;;8268:618;8320:4;8316:9;8308:6;8304:22;8354:37;8386:4;8354:37;:::i;:::-;8413:1;8427:208;8441:7;8438:1;8435:14;8427:208;;;8520:9;8515:3;8511:19;8505:26;8497:6;8490:42;8571:1;8563:6;8559:14;8549:24;;8618:2;8607:9;8603:18;8590:31;;8464:4;8461:1;8457:12;8452:17;;8427:208;;;8663:6;8654:7;8651:19;8648:179;;;8721:9;8716:3;8712:19;8706:26;8764:48;8806:4;8798:6;8794:17;8783:9;8764:48;:::i;:::-;8756:6;8749:64;8671:156;8648:179;8873:1;8869;8861:6;8857:14;8853:22;8847:4;8840:36;8275:611;;;8238:887;;7828:1303;;;7736:1395;;:::o;254:1624:13:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1014": {
									"entryPoint": 5122,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 3169,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": 4841,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 5569,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 4407,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_523": {
									"entryPoint": 3105,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 6540,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 3803,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1320": {
									"entryPoint": 3162,
									"id": 1320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": 5065,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1080": {
									"entryPoint": 2971,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 4046,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1940": {
									"entryPoint": 5849,
									"id": 1940,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_702": {
									"entryPoint": 3187,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_357": {
									"entryPoint": 1365,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 1907,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_374": {
									"entryPoint": 1338,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_3310": {
									"entryPoint": 1811,
									"id": 3310,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_407": {
									"entryPoint": 2724,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2925": {
									"entryPoint": 6203,
									"id": 2925,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3292": {
									"entryPoint": 2089,
									"id": 3292,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mintedAddress_3223": {
									"entryPoint": 1861,
									"id": 3223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_287": {
									"entryPoint": 1195,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 1890,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recover_1697": {
									"entryPoint": 3710,
									"id": 1697,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 1780,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 2593,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 2571,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@signer_3219": {
									"entryPoint": 1387,
									"id": 3219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_2038": {
									"entryPoint": 2866,
									"id": 2038,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 970,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 2427,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toEthSignedMessageHash_1956": {
									"entryPoint": 3752,
									"id": 1956,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_1406": {
									"entryPoint": 4863,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 2622,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1423,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tryRecover_1667": {
									"entryPoint": 5764,
									"id": 1667,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@tryRecover_1855": {
									"entryPoint": 6732,
									"id": 1855,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@verify_3332": {
									"entryPoint": 1678,
									"id": 3332,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 8827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9191,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9308,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8728,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 9601,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"leftAlign_t_address": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 8793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 9445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7": {
									"entryPoint": 8925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20817:14",
										"nodeType": "YulBlock",
										"src": "0:20817:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "378:105:14",
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nativeSrc": "388:89:14",
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:14",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nativeSrc": "399:78:14",
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:14",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:14",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nativeSrc": "531:78:14",
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:14",
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:14",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nativeSrc": "589:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nativeSrc": "589:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nativeSrc": "561:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nativeSrc": "551:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nativeSrc": "544:42:14",
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nativeSrc": "541:62:14",
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:14",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nativeSrc": "666:86:14",
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nativeSrc": "676:29:14",
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nativeSrc": "685:20:14",
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nativeSrc": "714:32:14",
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nativeSrc": "714:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:14",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:14",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:14",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nativeSrc": "823:262:14",
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:14",
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nativeSrc": "871:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nativeSrc": "871:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nativeSrc": "840:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:14",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nativeSrc": "836:32:14",
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nativeSrc": "833:119:14",
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nativeSrc": "962:116:14",
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nativeSrc": "977:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:14",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:14",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:14",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nativeSrc": "1036:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nativeSrc": "1016:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:14",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:14",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:14",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nativeSrc": "1133:48:14",
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nativeSrc": "1143:32:14",
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nativeSrc": "1161:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nativeSrc": "1154:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:14",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:14",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nativeSrc": "1246:50:14",
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nativeSrc": "1268:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nativeSrc": "1256:34:14",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nativeSrc": "1256:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:14",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:14",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nativeSrc": "1394:118:14",
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nativeSrc": "1404:26:14",
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nativeSrc": "1412:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nativeSrc": "1487:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nativeSrc": "1440:65:14",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nativeSrc": "1440:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:14",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:14",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:14",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nativeSrc": "1577:40:14",
													"nodeType": "YulBlock",
													"src": "1577:40:14",
													"statements": [
														{
															"nativeSrc": "1588:22:14",
															"nodeType": "YulAssignment",
															"src": "1588:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:14"
																},
																"nativeSrc": "1598:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:14",
														"nodeType": "YulTypedName",
														"src": "1560:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:14",
														"nodeType": "YulTypedName",
														"src": "1570:6:14",
														"type": ""
													}
												],
												"src": "1518:99:14"
											},
											{
												"body": {
													"nativeSrc": "1719:73:14",
													"nodeType": "YulBlock",
													"src": "1719:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:14"
																},
																"nativeSrc": "1729:19:14",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:14"
															},
															"nativeSrc": "1729:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:14"
														},
														{
															"nativeSrc": "1757:29:14",
															"nodeType": "YulAssignment",
															"src": "1757:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:14"
																},
																"nativeSrc": "1772:14:14",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:14",
														"nodeType": "YulTypedName",
														"src": "1691:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:14",
														"nodeType": "YulTypedName",
														"src": "1696:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:14",
														"nodeType": "YulTypedName",
														"src": "1707:11:14",
														"type": ""
													}
												],
												"src": "1623:169:14"
											},
											{
												"body": {
													"nativeSrc": "1860:77:14",
													"nodeType": "YulBlock",
													"src": "1860:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:14"
																},
																"nativeSrc": "1871:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:14"
															},
															"nativeSrc": "1871:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:14"
																		},
																		"nativeSrc": "1910:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:14"
																},
																"nativeSrc": "1903:27:14",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:14"
															},
															"nativeSrc": "1903:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:14",
														"nodeType": "YulTypedName",
														"src": "1842:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:14",
														"nodeType": "YulTypedName",
														"src": "1847:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:14",
														"nodeType": "YulTypedName",
														"src": "1852:6:14",
														"type": ""
													}
												],
												"src": "1798:139:14"
											},
											{
												"body": {
													"nativeSrc": "1991:54:14",
													"nodeType": "YulBlock",
													"src": "1991:54:14",
													"statements": [
														{
															"nativeSrc": "2001:38:14",
															"nodeType": "YulAssignment",
															"src": "2001:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:14"
																		},
																		"nativeSrc": "2015:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:14"
																		},
																		"nativeSrc": "2031:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:14"
																},
																"nativeSrc": "2011:28:14",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:14",
														"nodeType": "YulTypedName",
														"src": "1974:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:14",
														"nodeType": "YulTypedName",
														"src": "1984:6:14",
														"type": ""
													}
												],
												"src": "1943:102:14"
											},
											{
												"body": {
													"nativeSrc": "2143:285:14",
													"nodeType": "YulBlock",
													"src": "2143:285:14",
													"statements": [
														{
															"nativeSrc": "2153:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:14"
																},
																"nativeSrc": "2167:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:14",
															"nodeType": "YulAssignment",
															"src": "2215:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:14"
																},
																"nativeSrc": "2222:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:14"
																		},
																		"nativeSrc": "2337:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:14"
																},
																"nativeSrc": "2302:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:14"
															},
															"nativeSrc": "2302:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:14"
														},
														{
															"nativeSrc": "2376:46:14",
															"nodeType": "YulAssignment",
															"src": "2376:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:14"
																		},
																		"nativeSrc": "2392:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:14"
																},
																"nativeSrc": "2383:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:14",
														"nodeType": "YulTypedName",
														"src": "2124:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:14",
														"nodeType": "YulTypedName",
														"src": "2131:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:14",
														"nodeType": "YulTypedName",
														"src": "2139:3:14",
														"type": ""
													}
												],
												"src": "2051:377:14"
											},
											{
												"body": {
													"nativeSrc": "2552:195:14",
													"nodeType": "YulBlock",
													"src": "2552:195:14",
													"statements": [
														{
															"nativeSrc": "2562:26:14",
															"nodeType": "YulAssignment",
															"src": "2562:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:14"
																},
																"nativeSrc": "2570:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:14"
																		},
																		"nativeSrc": "2605:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:14"
																		},
																		"nativeSrc": "2624:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:14"
																},
																"nativeSrc": "2598:47:14",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:14"
															},
															"nativeSrc": "2598:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:14"
														},
														{
															"nativeSrc": "2654:86:14",
															"nodeType": "YulAssignment",
															"src": "2654:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:14"
																},
																"nativeSrc": "2662:78:14",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:14",
														"nodeType": "YulTypedName",
														"src": "2524:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:14",
														"nodeType": "YulTypedName",
														"src": "2536:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:14",
														"nodeType": "YulTypedName",
														"src": "2547:4:14",
														"type": ""
													}
												],
												"src": "2434:313:14"
											},
											{
												"body": {
													"nativeSrc": "2798:32:14",
													"nodeType": "YulBlock",
													"src": "2798:32:14",
													"statements": [
														{
															"nativeSrc": "2808:16:14",
															"nodeType": "YulAssignment",
															"src": "2808:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:14",
																"nodeType": "YulIdentifier",
																"src": "2819:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:14",
														"nodeType": "YulTypedName",
														"src": "2780:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:14",
														"nodeType": "YulTypedName",
														"src": "2790:7:14",
														"type": ""
													}
												],
												"src": "2753:77:14"
											},
											{
												"body": {
													"nativeSrc": "2879:79:14",
													"nodeType": "YulBlock",
													"src": "2879:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:14",
																"nodeType": "YulBlock",
																"src": "2936:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:14"
																			},
																			"nativeSrc": "2938:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:14"
																		},
																		"nativeSrc": "2938:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:14"
																				},
																				"nativeSrc": "2909:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:14"
																		},
																		"nativeSrc": "2899:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:14"
																},
																"nativeSrc": "2892:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:14"
															},
															"nativeSrc": "2889:63:14",
															"nodeType": "YulIf",
															"src": "2889:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:14",
														"nodeType": "YulTypedName",
														"src": "2872:5:14",
														"type": ""
													}
												],
												"src": "2836:122:14"
											},
											{
												"body": {
													"nativeSrc": "3016:87:14",
													"nodeType": "YulBlock",
													"src": "3016:87:14",
													"statements": [
														{
															"nativeSrc": "3026:29:14",
															"nodeType": "YulAssignment",
															"src": "3026:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:14"
																},
																"nativeSrc": "3035:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:14"
																},
																"nativeSrc": "3064:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:14"
															},
															"nativeSrc": "3064:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:14",
														"nodeType": "YulTypedName",
														"src": "2994:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:14",
														"nodeType": "YulTypedName",
														"src": "3002:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:14",
														"nodeType": "YulTypedName",
														"src": "3010:5:14",
														"type": ""
													}
												],
												"src": "2964:139:14"
											},
											{
												"body": {
													"nativeSrc": "3175:263:14",
													"nodeType": "YulBlock",
													"src": "3175:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:14",
																"nodeType": "YulBlock",
																"src": "3221:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:14"
																			},
																			"nativeSrc": "3223:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:14"
																		},
																		"nativeSrc": "3223:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:14"
																		},
																		"nativeSrc": "3192:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:14"
																},
																"nativeSrc": "3188:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:14"
															},
															"nativeSrc": "3185:119:14",
															"nodeType": "YulIf",
															"src": "3185:119:14"
														},
														{
															"nativeSrc": "3314:117:14",
															"nodeType": "YulBlock",
															"src": "3314:117:14",
															"statements": [
																{
																	"nativeSrc": "3329:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:14"
																				},
																				"nativeSrc": "3389:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:14"
																		},
																		"nativeSrc": "3368:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:14",
														"nodeType": "YulTypedName",
														"src": "3145:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:14",
														"nodeType": "YulTypedName",
														"src": "3156:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:14",
														"nodeType": "YulTypedName",
														"src": "3168:6:14",
														"type": ""
													}
												],
												"src": "3109:329:14"
											},
											{
												"body": {
													"nativeSrc": "3489:81:14",
													"nodeType": "YulBlock",
													"src": "3489:81:14",
													"statements": [
														{
															"nativeSrc": "3499:65:14",
															"nodeType": "YulAssignment",
															"src": "3499:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:14",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:14"
																},
																"nativeSrc": "3510:54:14",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:14",
														"nodeType": "YulTypedName",
														"src": "3471:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:14",
														"nodeType": "YulTypedName",
														"src": "3481:7:14",
														"type": ""
													}
												],
												"src": "3444:126:14"
											},
											{
												"body": {
													"nativeSrc": "3621:51:14",
													"nodeType": "YulBlock",
													"src": "3621:51:14",
													"statements": [
														{
															"nativeSrc": "3631:35:14",
															"nodeType": "YulAssignment",
															"src": "3631:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:14"
																},
																"nativeSrc": "3642:24:14",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:14",
														"nodeType": "YulTypedName",
														"src": "3603:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:14",
														"nodeType": "YulTypedName",
														"src": "3613:7:14",
														"type": ""
													}
												],
												"src": "3576:96:14"
											},
											{
												"body": {
													"nativeSrc": "3743:53:14",
													"nodeType": "YulBlock",
													"src": "3743:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:14"
																		},
																		"nativeSrc": "3765:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:14"
																},
																"nativeSrc": "3753:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:14"
															},
															"nativeSrc": "3753:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:14",
														"nodeType": "YulTypedName",
														"src": "3731:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:14",
														"nodeType": "YulTypedName",
														"src": "3738:3:14",
														"type": ""
													}
												],
												"src": "3678:118:14"
											},
											{
												"body": {
													"nativeSrc": "3900:124:14",
													"nodeType": "YulBlock",
													"src": "3900:124:14",
													"statements": [
														{
															"nativeSrc": "3910:26:14",
															"nodeType": "YulAssignment",
															"src": "3910:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:14"
																},
																"nativeSrc": "3918:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:14"
																		},
																		"nativeSrc": "3999:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:14"
																},
																"nativeSrc": "3946:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:14"
															},
															"nativeSrc": "3946:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:14",
														"nodeType": "YulTypedName",
														"src": "3872:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:14",
														"nodeType": "YulTypedName",
														"src": "3884:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:14",
														"nodeType": "YulTypedName",
														"src": "3895:4:14",
														"type": ""
													}
												],
												"src": "3802:222:14"
											},
											{
												"body": {
													"nativeSrc": "4073:79:14",
													"nodeType": "YulBlock",
													"src": "4073:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:14",
																"nodeType": "YulBlock",
																"src": "4130:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:14"
																			},
																			"nativeSrc": "4132:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:14"
																		},
																		"nativeSrc": "4132:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:14"
																				},
																				"nativeSrc": "4103:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:14"
																		},
																		"nativeSrc": "4093:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:14"
																},
																"nativeSrc": "4086:43:14",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:14"
															},
															"nativeSrc": "4083:63:14",
															"nodeType": "YulIf",
															"src": "4083:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:14",
														"nodeType": "YulTypedName",
														"src": "4066:5:14",
														"type": ""
													}
												],
												"src": "4030:122:14"
											},
											{
												"body": {
													"nativeSrc": "4210:87:14",
													"nodeType": "YulBlock",
													"src": "4210:87:14",
													"statements": [
														{
															"nativeSrc": "4220:29:14",
															"nodeType": "YulAssignment",
															"src": "4220:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:14"
																},
																"nativeSrc": "4229:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:14"
																},
																"nativeSrc": "4258:33:14",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:14"
															},
															"nativeSrc": "4258:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:14",
														"nodeType": "YulTypedName",
														"src": "4188:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:14",
														"nodeType": "YulTypedName",
														"src": "4196:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:14",
														"nodeType": "YulTypedName",
														"src": "4204:5:14",
														"type": ""
													}
												],
												"src": "4158:139:14"
											},
											{
												"body": {
													"nativeSrc": "4386:391:14",
													"nodeType": "YulBlock",
													"src": "4386:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:14",
																"nodeType": "YulBlock",
																"src": "4432:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:14"
																			},
																			"nativeSrc": "4434:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:14"
																		},
																		"nativeSrc": "4434:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:14"
																		},
																		"nativeSrc": "4403:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:14"
																},
																"nativeSrc": "4399:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:14"
															},
															"nativeSrc": "4396:119:14",
															"nodeType": "YulIf",
															"src": "4396:119:14"
														},
														{
															"nativeSrc": "4525:117:14",
															"nodeType": "YulBlock",
															"src": "4525:117:14",
															"statements": [
																{
																	"nativeSrc": "4540:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:14"
																				},
																				"nativeSrc": "4600:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:14"
																		},
																		"nativeSrc": "4579:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:14",
															"nodeType": "YulBlock",
															"src": "4652:118:14",
															"statements": [
																{
																	"nativeSrc": "4667:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:14"
																				},
																				"nativeSrc": "4728:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:14"
																		},
																		"nativeSrc": "4707:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:14",
														"nodeType": "YulTypedName",
														"src": "4348:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:14",
														"nodeType": "YulTypedName",
														"src": "4359:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:14",
														"nodeType": "YulTypedName",
														"src": "4371:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:14",
														"nodeType": "YulTypedName",
														"src": "4379:6:14",
														"type": ""
													}
												],
												"src": "4303:474:14"
											},
											{
												"body": {
													"nativeSrc": "4883:519:14",
													"nodeType": "YulBlock",
													"src": "4883:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:14",
																"nodeType": "YulBlock",
																"src": "4929:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:14"
																			},
																			"nativeSrc": "4931:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:14"
																		},
																		"nativeSrc": "4931:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:14"
																		},
																		"nativeSrc": "4900:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:14"
																},
																"nativeSrc": "4896:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:14"
															},
															"nativeSrc": "4893:119:14",
															"nodeType": "YulIf",
															"src": "4893:119:14"
														},
														{
															"nativeSrc": "5022:117:14",
															"nodeType": "YulBlock",
															"src": "5022:117:14",
															"statements": [
																{
																	"nativeSrc": "5037:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:14"
																				},
																				"nativeSrc": "5097:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:14"
																		},
																		"nativeSrc": "5076:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:14",
															"nodeType": "YulBlock",
															"src": "5149:118:14",
															"statements": [
																{
																	"nativeSrc": "5164:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:14"
																				},
																				"nativeSrc": "5225:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:14"
																		},
																		"nativeSrc": "5204:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:14",
															"nodeType": "YulBlock",
															"src": "5277:118:14",
															"statements": [
																{
																	"nativeSrc": "5292:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:14"
																				},
																				"nativeSrc": "5353:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:14"
																		},
																		"nativeSrc": "5332:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:14",
														"nodeType": "YulTypedName",
														"src": "4837:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:14",
														"nodeType": "YulTypedName",
														"src": "4848:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:14",
														"nodeType": "YulTypedName",
														"src": "4860:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:14",
														"nodeType": "YulTypedName",
														"src": "4868:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:14",
														"nodeType": "YulTypedName",
														"src": "4876:6:14",
														"type": ""
													}
												],
												"src": "4783:619:14"
											},
											{
												"body": {
													"nativeSrc": "5453:32:14",
													"nodeType": "YulBlock",
													"src": "5453:32:14",
													"statements": [
														{
															"nativeSrc": "5463:16:14",
															"nodeType": "YulAssignment",
															"src": "5463:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:14",
																"nodeType": "YulIdentifier",
																"src": "5474:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:14",
														"nodeType": "YulTypedName",
														"src": "5435:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:14",
														"nodeType": "YulTypedName",
														"src": "5445:7:14",
														"type": ""
													}
												],
												"src": "5408:77:14"
											},
											{
												"body": {
													"nativeSrc": "5534:79:14",
													"nodeType": "YulBlock",
													"src": "5534:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:14",
																"nodeType": "YulBlock",
																"src": "5591:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:14"
																			},
																			"nativeSrc": "5593:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:14"
																		},
																		"nativeSrc": "5593:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:14"
																				},
																				"nativeSrc": "5564:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:14"
																		},
																		"nativeSrc": "5554:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:14"
																},
																"nativeSrc": "5547:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:14"
															},
															"nativeSrc": "5544:63:14",
															"nodeType": "YulIf",
															"src": "5544:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:14",
														"nodeType": "YulTypedName",
														"src": "5527:5:14",
														"type": ""
													}
												],
												"src": "5491:122:14"
											},
											{
												"body": {
													"nativeSrc": "5671:87:14",
													"nodeType": "YulBlock",
													"src": "5671:87:14",
													"statements": [
														{
															"nativeSrc": "5681:29:14",
															"nodeType": "YulAssignment",
															"src": "5681:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:14"
																},
																"nativeSrc": "5690:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:14"
																},
																"nativeSrc": "5719:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:14"
															},
															"nativeSrc": "5719:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:14",
														"nodeType": "YulTypedName",
														"src": "5649:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:14",
														"nodeType": "YulTypedName",
														"src": "5657:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:14",
														"nodeType": "YulTypedName",
														"src": "5665:5:14",
														"type": ""
													}
												],
												"src": "5619:139:14"
											},
											{
												"body": {
													"nativeSrc": "5853:28:14",
													"nodeType": "YulBlock",
													"src": "5853:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5870:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5870:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5873:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5873:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5863:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5863:6:14"
																},
																"nativeSrc": "5863:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5863:12:14"
															},
															"nativeSrc": "5863:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5863:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5764:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5764:117:14"
											},
											{
												"body": {
													"nativeSrc": "5976:28:14",
													"nodeType": "YulBlock",
													"src": "5976:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5993:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5993:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5996:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5996:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5986:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:14"
																},
																"nativeSrc": "5986:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5986:12:14"
															},
															"nativeSrc": "5986:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5986:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5887:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5887:117:14"
											},
											{
												"body": {
													"nativeSrc": "6038:152:14",
													"nodeType": "YulBlock",
													"src": "6038:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6058:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:14"
																},
																"nativeSrc": "6048:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6048:88:14"
															},
															"nativeSrc": "6048:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6048:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6152:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6152:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6155:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6155:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6145:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:14"
																},
																"nativeSrc": "6145:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6145:15:14"
															},
															"nativeSrc": "6145:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6145:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6176:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6176:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6179:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6179:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6169:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6169:6:14"
																},
																"nativeSrc": "6169:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6169:15:14"
															},
															"nativeSrc": "6169:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6169:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6010:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6010:180:14"
											},
											{
												"body": {
													"nativeSrc": "6239:238:14",
													"nodeType": "YulBlock",
													"src": "6239:238:14",
													"statements": [
														{
															"nativeSrc": "6249:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6249:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6271:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6271:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6301:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6301:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6279:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6279:21:14"
																		},
																		"nativeSrc": "6279:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6267:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6267:3:14"
																},
																"nativeSrc": "6267:40:14",
																"nodeType": "YulFunctionCall",
																"src": "6267:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6253:10:14",
																	"nodeType": "YulTypedName",
																	"src": "6253:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6418:22:14",
																"nodeType": "YulBlock",
																"src": "6418:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6420:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6420:16:14"
																			},
																			"nativeSrc": "6420:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6420:18:14"
																		},
																		"nativeSrc": "6420:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6420:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6361:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6361:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6373:18:14",
																				"nodeType": "YulLiteral",
																				"src": "6373:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6358:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6358:2:14"
																		},
																		"nativeSrc": "6358:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6358:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6397:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6397:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6409:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6409:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6394:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6394:2:14"
																		},
																		"nativeSrc": "6394:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6394:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6355:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6355:2:14"
																},
																"nativeSrc": "6355:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6355:62:14"
															},
															"nativeSrc": "6352:88:14",
															"nodeType": "YulIf",
															"src": "6352:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6456:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6456:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6460:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "6460:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6449:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6449:6:14"
																},
																"nativeSrc": "6449:22:14",
																"nodeType": "YulFunctionCall",
																"src": "6449:22:14"
															},
															"nativeSrc": "6449:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "6449:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6196:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6225:6:14",
														"nodeType": "YulTypedName",
														"src": "6225:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6233:4:14",
														"nodeType": "YulTypedName",
														"src": "6233:4:14",
														"type": ""
													}
												],
												"src": "6196:281:14"
											},
											{
												"body": {
													"nativeSrc": "6524:88:14",
													"nodeType": "YulBlock",
													"src": "6524:88:14",
													"statements": [
														{
															"nativeSrc": "6534:30:14",
															"nodeType": "YulAssignment",
															"src": "6534:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6544:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "6544:18:14"
																},
																"nativeSrc": "6544:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6544:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6534:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6593:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6593:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6601:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6601:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6573:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "6573:19:14"
																},
																"nativeSrc": "6573:33:14",
																"nodeType": "YulFunctionCall",
																"src": "6573:33:14"
															},
															"nativeSrc": "6573:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "6573:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6483:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6508:4:14",
														"nodeType": "YulTypedName",
														"src": "6508:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6517:6:14",
														"nodeType": "YulTypedName",
														"src": "6517:6:14",
														"type": ""
													}
												],
												"src": "6483:129:14"
											},
											{
												"body": {
													"nativeSrc": "6684:241:14",
													"nodeType": "YulBlock",
													"src": "6684:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6789:22:14",
																"nodeType": "YulBlock",
																"src": "6789:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6791:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6791:16:14"
																			},
																			"nativeSrc": "6791:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6791:18:14"
																		},
																		"nativeSrc": "6791:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6791:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6761:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6761:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6769:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6769:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6758:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6758:2:14"
																},
																"nativeSrc": "6758:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6758:30:14"
															},
															"nativeSrc": "6755:56:14",
															"nodeType": "YulIf",
															"src": "6755:56:14"
														},
														{
															"nativeSrc": "6821:37:14",
															"nodeType": "YulAssignment",
															"src": "6821:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6851:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6851:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6829:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "6829:21:14"
																},
																"nativeSrc": "6829:29:14",
																"nodeType": "YulFunctionCall",
																"src": "6829:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6821:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6821:4:14"
																}
															]
														},
														{
															"nativeSrc": "6895:23:14",
															"nodeType": "YulAssignment",
															"src": "6895:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6907:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6907:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6913:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6913:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6903:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6903:3:14"
																},
																"nativeSrc": "6903:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6903:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6895:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6895:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6618:307:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6668:6:14",
														"nodeType": "YulTypedName",
														"src": "6668:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6679:4:14",
														"nodeType": "YulTypedName",
														"src": "6679:4:14",
														"type": ""
													}
												],
												"src": "6618:307:14"
											},
											{
												"body": {
													"nativeSrc": "6995:84:14",
													"nodeType": "YulBlock",
													"src": "6995:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7019:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7019:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7024:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7024:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7029:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7029:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7006:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7006:12:14"
																},
																"nativeSrc": "7006:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7006:30:14"
															},
															"nativeSrc": "7006:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7006:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7056:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7056:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7061:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7061:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7052:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7052:3:14"
																		},
																		"nativeSrc": "7052:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7052:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7070:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7070:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7045:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7045:6:14"
																},
																"nativeSrc": "7045:27:14",
																"nodeType": "YulFunctionCall",
																"src": "7045:27:14"
															},
															"nativeSrc": "7045:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "7045:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6931:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6977:3:14",
														"nodeType": "YulTypedName",
														"src": "6977:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6982:3:14",
														"nodeType": "YulTypedName",
														"src": "6982:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6987:6:14",
														"nodeType": "YulTypedName",
														"src": "6987:6:14",
														"type": ""
													}
												],
												"src": "6931:148:14"
											},
											{
												"body": {
													"nativeSrc": "7168:340:14",
													"nodeType": "YulBlock",
													"src": "7168:340:14",
													"statements": [
														{
															"nativeSrc": "7178:74:14",
															"nodeType": "YulAssignment",
															"src": "7178:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7244:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7244:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7203:40:14",
																			"nodeType": "YulIdentifier",
																			"src": "7203:40:14"
																		},
																		"nativeSrc": "7203:48:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7203:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7187:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "7187:15:14"
																},
																"nativeSrc": "7187:65:14",
																"nodeType": "YulFunctionCall",
																"src": "7187:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7178:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7178:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7268:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7268:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7275:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7275:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7261:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:14"
																},
																"nativeSrc": "7261:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7261:21:14"
															},
															"nativeSrc": "7261:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7261:21:14"
														},
														{
															"nativeSrc": "7291:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7291:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7306:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7306:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7313:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7313:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7302:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:14"
																},
																"nativeSrc": "7302:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7302:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7295:3:14",
																	"nodeType": "YulTypedName",
																	"src": "7295:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7356:83:14",
																"nodeType": "YulBlock",
																"src": "7356:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7358:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7358:77:14"
																			},
																			"nativeSrc": "7358:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7358:79:14"
																		},
																		"nativeSrc": "7358:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7358:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7337:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7337:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7342:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7342:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7333:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7333:3:14"
																		},
																		"nativeSrc": "7333:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7333:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7351:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7351:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7330:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7330:2:14"
																},
																"nativeSrc": "7330:25:14",
																"nodeType": "YulFunctionCall",
																"src": "7330:25:14"
															},
															"nativeSrc": "7327:112:14",
															"nodeType": "YulIf",
															"src": "7327:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7485:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7485:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7490:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7490:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7495:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7495:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7448:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "7448:36:14"
																},
																"nativeSrc": "7448:54:14",
																"nodeType": "YulFunctionCall",
																"src": "7448:54:14"
															},
															"nativeSrc": "7448:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "7448:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7085:423:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7141:3:14",
														"nodeType": "YulTypedName",
														"src": "7141:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7146:6:14",
														"nodeType": "YulTypedName",
														"src": "7146:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7154:3:14",
														"nodeType": "YulTypedName",
														"src": "7154:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7162:5:14",
														"nodeType": "YulTypedName",
														"src": "7162:5:14",
														"type": ""
													}
												],
												"src": "7085:423:14"
											},
											{
												"body": {
													"nativeSrc": "7588:277:14",
													"nodeType": "YulBlock",
													"src": "7588:277:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7637:83:14",
																"nodeType": "YulBlock",
																"src": "7637:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7639:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7639:77:14"
																			},
																			"nativeSrc": "7639:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7639:79:14"
																		},
																		"nativeSrc": "7639:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7639:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7616:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7616:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7624:4:14",
																						"nodeType": "YulLiteral",
																						"src": "7624:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7612:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7612:3:14"
																				},
																				"nativeSrc": "7612:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7612:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7631:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7631:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7608:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7608:3:14"
																		},
																		"nativeSrc": "7608:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7608:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7601:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7601:6:14"
																},
																"nativeSrc": "7601:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7601:35:14"
															},
															"nativeSrc": "7598:122:14",
															"nodeType": "YulIf",
															"src": "7598:122:14"
														},
														{
															"nativeSrc": "7729:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7729:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7756:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7756:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7743:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7743:12:14"
																},
																"nativeSrc": "7743:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7743:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7733:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7733:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7772:87:14",
															"nodeType": "YulAssignment",
															"src": "7772:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7832:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7832:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7840:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7840:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7828:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7828:3:14"
																		},
																		"nativeSrc": "7828:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7828:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7847:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7847:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7855:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7855:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7781:46:14",
																	"nodeType": "YulIdentifier",
																	"src": "7781:46:14"
																},
																"nativeSrc": "7781:78:14",
																"nodeType": "YulFunctionCall",
																"src": "7781:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7772:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7772:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7527:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7566:6:14",
														"nodeType": "YulTypedName",
														"src": "7566:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7574:3:14",
														"nodeType": "YulTypedName",
														"src": "7574:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7582:5:14",
														"nodeType": "YulTypedName",
														"src": "7582:5:14",
														"type": ""
													}
												],
												"src": "7527:338:14"
											},
											{
												"body": {
													"nativeSrc": "7963:560:14",
													"nodeType": "YulBlock",
													"src": "7963:560:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8009:83:14",
																"nodeType": "YulBlock",
																"src": "8009:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8011:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8011:77:14"
																			},
																			"nativeSrc": "8011:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8011:79:14"
																		},
																		"nativeSrc": "8011:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8011:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7984:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7984:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7993:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7993:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7980:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7980:3:14"
																		},
																		"nativeSrc": "7980:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7980:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8005:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8005:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7976:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7976:3:14"
																},
																"nativeSrc": "7976:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7976:32:14"
															},
															"nativeSrc": "7973:119:14",
															"nodeType": "YulIf",
															"src": "7973:119:14"
														},
														{
															"nativeSrc": "8102:117:14",
															"nodeType": "YulBlock",
															"src": "8102:117:14",
															"statements": [
																{
																	"nativeSrc": "8117:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8117:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8131:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8131:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8121:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8121:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8146:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8146:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8181:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8181:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8192:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8192:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8177:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8177:3:14"
																				},
																				"nativeSrc": "8177:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8177:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8201:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8201:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8156:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8156:20:14"
																		},
																		"nativeSrc": "8156:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8156:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8146:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8146:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8229:287:14",
															"nodeType": "YulBlock",
															"src": "8229:287:14",
															"statements": [
																{
																	"nativeSrc": "8244:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8244:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8275:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8275:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8286:2:14",
																						"nodeType": "YulLiteral",
																						"src": "8286:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8271:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8271:3:14"
																				},
																				"nativeSrc": "8271:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8271:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8258:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "8258:12:14"
																		},
																		"nativeSrc": "8258:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8258:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8248:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8248:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8337:83:14",
																		"nodeType": "YulBlock",
																		"src": "8337:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8339:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "8339:77:14"
																					},
																					"nativeSrc": "8339:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8339:79:14"
																				},
																				"nativeSrc": "8339:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8339:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8309:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8309:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8317:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8317:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8306:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8306:2:14"
																		},
																		"nativeSrc": "8306:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8306:30:14"
																	},
																	"nativeSrc": "8303:117:14",
																	"nodeType": "YulIf",
																	"src": "8303:117:14"
																},
																{
																	"nativeSrc": "8434:72:14",
																	"nodeType": "YulAssignment",
																	"src": "8434:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8478:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8478:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8489:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8489:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8474:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8474:3:14"
																				},
																				"nativeSrc": "8474:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8474:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8498:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8498:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "8444:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "8444:29:14"
																		},
																		"nativeSrc": "8444:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8444:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8434:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8434:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nativeSrc": "7871:652:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7925:9:14",
														"nodeType": "YulTypedName",
														"src": "7925:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7936:7:14",
														"nodeType": "YulTypedName",
														"src": "7936:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7948:6:14",
														"nodeType": "YulTypedName",
														"src": "7948:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7956:6:14",
														"nodeType": "YulTypedName",
														"src": "7956:6:14",
														"type": ""
													}
												],
												"src": "7871:652:14"
											},
											{
												"body": {
													"nativeSrc": "8594:53:14",
													"nodeType": "YulBlock",
													"src": "8594:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8611:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8611:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8634:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8616:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8616:17:14"
																		},
																		"nativeSrc": "8616:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8616:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8604:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8604:6:14"
																},
																"nativeSrc": "8604:37:14",
																"nodeType": "YulFunctionCall",
																"src": "8604:37:14"
															},
															"nativeSrc": "8604:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "8604:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8529:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8582:5:14",
														"nodeType": "YulTypedName",
														"src": "8582:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8589:3:14",
														"nodeType": "YulTypedName",
														"src": "8589:3:14",
														"type": ""
													}
												],
												"src": "8529:118:14"
											},
											{
												"body": {
													"nativeSrc": "8751:124:14",
													"nodeType": "YulBlock",
													"src": "8751:124:14",
													"statements": [
														{
															"nativeSrc": "8761:26:14",
															"nodeType": "YulAssignment",
															"src": "8761:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8773:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8773:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8784:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8784:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8769:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8769:3:14"
																},
																"nativeSrc": "8769:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8769:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8761:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8761:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8841:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8841:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8854:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8854:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8865:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8865:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8850:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8850:3:14"
																		},
																		"nativeSrc": "8850:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8850:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8797:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8797:43:14"
																},
																"nativeSrc": "8797:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8797:71:14"
															},
															"nativeSrc": "8797:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8797:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8653:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8723:9:14",
														"nodeType": "YulTypedName",
														"src": "8723:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8735:6:14",
														"nodeType": "YulTypedName",
														"src": "8735:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8746:4:14",
														"nodeType": "YulTypedName",
														"src": "8746:4:14",
														"type": ""
													}
												],
												"src": "8653:222:14"
											},
											{
												"body": {
													"nativeSrc": "8947:263:14",
													"nodeType": "YulBlock",
													"src": "8947:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8993:83:14",
																"nodeType": "YulBlock",
																"src": "8993:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8995:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8995:77:14"
																			},
																			"nativeSrc": "8995:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8995:79:14"
																		},
																		"nativeSrc": "8995:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8995:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8968:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8968:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8964:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:14"
																		},
																		"nativeSrc": "8964:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8964:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8989:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8989:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8960:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:14"
																},
																"nativeSrc": "8960:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8960:32:14"
															},
															"nativeSrc": "8957:119:14",
															"nodeType": "YulIf",
															"src": "8957:119:14"
														},
														{
															"nativeSrc": "9086:117:14",
															"nodeType": "YulBlock",
															"src": "9086:117:14",
															"statements": [
																{
																	"nativeSrc": "9101:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9101:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9115:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9115:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9105:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9105:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9130:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9130:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9165:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9165:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9176:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9176:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9161:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9161:3:14"
																				},
																				"nativeSrc": "9161:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9161:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9185:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9185:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9140:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9140:20:14"
																		},
																		"nativeSrc": "9140:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9140:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9130:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9130:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8881:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8917:9:14",
														"nodeType": "YulTypedName",
														"src": "8917:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8928:7:14",
														"nodeType": "YulTypedName",
														"src": "8928:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8940:6:14",
														"nodeType": "YulTypedName",
														"src": "8940:6:14",
														"type": ""
													}
												],
												"src": "8881:329:14"
											},
											{
												"body": {
													"nativeSrc": "9281:53:14",
													"nodeType": "YulBlock",
													"src": "9281:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9298:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9298:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9321:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9321:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9303:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "9303:17:14"
																		},
																		"nativeSrc": "9303:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9303:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9291:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:14"
																},
																"nativeSrc": "9291:37:14",
																"nodeType": "YulFunctionCall",
																"src": "9291:37:14"
															},
															"nativeSrc": "9291:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "9291:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9216:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9269:5:14",
														"nodeType": "YulTypedName",
														"src": "9269:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9276:3:14",
														"nodeType": "YulTypedName",
														"src": "9276:3:14",
														"type": ""
													}
												],
												"src": "9216:118:14"
											},
											{
												"body": {
													"nativeSrc": "9438:124:14",
													"nodeType": "YulBlock",
													"src": "9438:124:14",
													"statements": [
														{
															"nativeSrc": "9448:26:14",
															"nodeType": "YulAssignment",
															"src": "9448:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9460:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9460:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9471:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9471:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9456:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9456:3:14"
																},
																"nativeSrc": "9456:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9456:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9448:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9448:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9528:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9528:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9541:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9541:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9552:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9552:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9537:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:14"
																		},
																		"nativeSrc": "9537:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9537:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9484:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "9484:43:14"
																},
																"nativeSrc": "9484:71:14",
																"nodeType": "YulFunctionCall",
																"src": "9484:71:14"
															},
															"nativeSrc": "9484:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "9484:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9340:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9410:9:14",
														"nodeType": "YulTypedName",
														"src": "9410:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9422:6:14",
														"nodeType": "YulTypedName",
														"src": "9422:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9433:4:14",
														"nodeType": "YulTypedName",
														"src": "9433:4:14",
														"type": ""
													}
												],
												"src": "9340:222:14"
											},
											{
												"body": {
													"nativeSrc": "9677:688:14",
													"nodeType": "YulBlock",
													"src": "9677:688:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9723:83:14",
																"nodeType": "YulBlock",
																"src": "9723:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9725:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9725:77:14"
																			},
																			"nativeSrc": "9725:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9725:79:14"
																		},
																		"nativeSrc": "9725:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9725:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9698:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9698:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9707:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9707:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9694:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9694:3:14"
																		},
																		"nativeSrc": "9694:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9690:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9690:3:14"
																},
																"nativeSrc": "9690:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9690:32:14"
															},
															"nativeSrc": "9687:119:14",
															"nodeType": "YulIf",
															"src": "9687:119:14"
														},
														{
															"nativeSrc": "9816:117:14",
															"nodeType": "YulBlock",
															"src": "9816:117:14",
															"statements": [
																{
																	"nativeSrc": "9831:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9831:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9845:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9835:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9835:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9860:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9860:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9895:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9895:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9906:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9906:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9891:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9891:3:14"
																				},
																				"nativeSrc": "9891:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9891:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9915:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9915:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9870:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9870:20:14"
																		},
																		"nativeSrc": "9870:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9870:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9860:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9860:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9943:118:14",
															"nodeType": "YulBlock",
															"src": "9943:118:14",
															"statements": [
																{
																	"nativeSrc": "9958:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9958:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9972:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9972:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9962:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9962:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9988:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9988:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10023:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10023:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10034:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10034:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10019:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10019:3:14"
																				},
																				"nativeSrc": "10019:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10019:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10043:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10043:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9998:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9998:20:14"
																		},
																		"nativeSrc": "9998:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9998:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9988:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9988:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10071:287:14",
															"nodeType": "YulBlock",
															"src": "10071:287:14",
															"statements": [
																{
																	"nativeSrc": "10086:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10086:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10117:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10117:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10128:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10128:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10113:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10113:3:14"
																				},
																				"nativeSrc": "10113:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10113:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10100:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10100:12:14"
																		},
																		"nativeSrc": "10100:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10100:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10090:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10090:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10179:83:14",
																		"nodeType": "YulBlock",
																		"src": "10179:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10181:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10181:77:14"
																					},
																					"nativeSrc": "10181:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10181:79:14"
																				},
																				"nativeSrc": "10181:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10181:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10151:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10151:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10159:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10159:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10148:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10148:2:14"
																		},
																		"nativeSrc": "10148:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10148:30:14"
																	},
																	"nativeSrc": "10145:117:14",
																	"nodeType": "YulIf",
																	"src": "10145:117:14"
																},
																{
																	"nativeSrc": "10276:72:14",
																	"nodeType": "YulAssignment",
																	"src": "10276:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10320:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10320:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10331:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10331:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10316:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10316:3:14"
																				},
																				"nativeSrc": "10316:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10316:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10340:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10340:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10286:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "10286:29:14"
																		},
																		"nativeSrc": "10286:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10286:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10276:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10276:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9568:797:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9631:9:14",
														"nodeType": "YulTypedName",
														"src": "9631:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9642:7:14",
														"nodeType": "YulTypedName",
														"src": "9642:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9654:6:14",
														"nodeType": "YulTypedName",
														"src": "9654:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9662:6:14",
														"nodeType": "YulTypedName",
														"src": "9662:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9670:6:14",
														"nodeType": "YulTypedName",
														"src": "9670:6:14",
														"type": ""
													}
												],
												"src": "9568:797:14"
											},
											{
												"body": {
													"nativeSrc": "10411:76:14",
													"nodeType": "YulBlock",
													"src": "10411:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10465:16:14",
																"nodeType": "YulBlock",
																"src": "10465:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10474:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10474:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10477:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10477:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10467:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10467:6:14"
																			},
																			"nativeSrc": "10467:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10467:12:14"
																		},
																		"nativeSrc": "10467:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10467:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10434:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "10434:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10456:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "10456:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10441:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "10441:14:14"
																				},
																				"nativeSrc": "10441:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10441:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10431:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10431:2:14"
																		},
																		"nativeSrc": "10431:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10431:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10424:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10424:6:14"
																},
																"nativeSrc": "10424:40:14",
																"nodeType": "YulFunctionCall",
																"src": "10424:40:14"
															},
															"nativeSrc": "10421:60:14",
															"nodeType": "YulIf",
															"src": "10421:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10371:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10404:5:14",
														"nodeType": "YulTypedName",
														"src": "10404:5:14",
														"type": ""
													}
												],
												"src": "10371:116:14"
											},
											{
												"body": {
													"nativeSrc": "10542:84:14",
													"nodeType": "YulBlock",
													"src": "10542:84:14",
													"statements": [
														{
															"nativeSrc": "10552:29:14",
															"nodeType": "YulAssignment",
															"src": "10552:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10574:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10574:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10561:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "10561:12:14"
																},
																"nativeSrc": "10561:20:14",
																"nodeType": "YulFunctionCall",
																"src": "10561:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10552:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10552:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10614:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10614:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10590:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "10590:23:14"
																},
																"nativeSrc": "10590:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10590:30:14"
															},
															"nativeSrc": "10590:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "10590:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "10493:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10520:6:14",
														"nodeType": "YulTypedName",
														"src": "10520:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10528:3:14",
														"nodeType": "YulTypedName",
														"src": "10528:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10536:5:14",
														"nodeType": "YulTypedName",
														"src": "10536:5:14",
														"type": ""
													}
												],
												"src": "10493:133:14"
											},
											{
												"body": {
													"nativeSrc": "10712:388:14",
													"nodeType": "YulBlock",
													"src": "10712:388:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10758:83:14",
																"nodeType": "YulBlock",
																"src": "10758:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10760:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10760:77:14"
																			},
																			"nativeSrc": "10760:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10760:79:14"
																		},
																		"nativeSrc": "10760:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10760:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10733:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10733:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10742:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10742:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10729:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:14"
																		},
																		"nativeSrc": "10729:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10754:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10754:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10725:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10725:3:14"
																},
																"nativeSrc": "10725:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10725:32:14"
															},
															"nativeSrc": "10722:119:14",
															"nodeType": "YulIf",
															"src": "10722:119:14"
														},
														{
															"nativeSrc": "10851:117:14",
															"nodeType": "YulBlock",
															"src": "10851:117:14",
															"statements": [
																{
																	"nativeSrc": "10866:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10866:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10880:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10880:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10870:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10870:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10895:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10895:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10930:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10930:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10941:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10941:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10926:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10926:3:14"
																				},
																				"nativeSrc": "10926:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10926:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10950:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10950:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10905:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10905:20:14"
																		},
																		"nativeSrc": "10905:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10905:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10895:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10895:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10978:115:14",
															"nodeType": "YulBlock",
															"src": "10978:115:14",
															"statements": [
																{
																	"nativeSrc": "10993:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10993:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11007:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11007:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10997:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10997:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11023:60:14",
																	"nodeType": "YulAssignment",
																	"src": "11023:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11055:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11055:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11066:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11066:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11051:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11051:3:14"
																				},
																				"nativeSrc": "11051:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11051:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11075:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11075:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "11033:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "11033:17:14"
																		},
																		"nativeSrc": "11033:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11033:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11023:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11023:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "10632:468:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10674:9:14",
														"nodeType": "YulTypedName",
														"src": "10674:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10685:7:14",
														"nodeType": "YulTypedName",
														"src": "10685:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10697:6:14",
														"nodeType": "YulTypedName",
														"src": "10697:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10705:6:14",
														"nodeType": "YulTypedName",
														"src": "10705:6:14",
														"type": ""
													}
												],
												"src": "10632:468:14"
											},
											{
												"body": {
													"nativeSrc": "11232:817:14",
													"nodeType": "YulBlock",
													"src": "11232:817:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11279:83:14",
																"nodeType": "YulBlock",
																"src": "11279:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11281:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11281:77:14"
																			},
																			"nativeSrc": "11281:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11281:79:14"
																		},
																		"nativeSrc": "11281:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11281:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11253:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11253:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11262:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11262:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11249:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:14"
																		},
																		"nativeSrc": "11249:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11274:3:14",
																		"nodeType": "YulLiteral",
																		"src": "11274:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11245:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11245:3:14"
																},
																"nativeSrc": "11245:33:14",
																"nodeType": "YulFunctionCall",
																"src": "11245:33:14"
															},
															"nativeSrc": "11242:120:14",
															"nodeType": "YulIf",
															"src": "11242:120:14"
														},
														{
															"nativeSrc": "11372:117:14",
															"nodeType": "YulBlock",
															"src": "11372:117:14",
															"statements": [
																{
																	"nativeSrc": "11387:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11387:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11401:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11401:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11391:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11391:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11416:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11416:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11451:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11451:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11462:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11462:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11447:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11447:3:14"
																				},
																				"nativeSrc": "11447:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11447:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11471:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11471:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11426:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11426:20:14"
																		},
																		"nativeSrc": "11426:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11426:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11416:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11416:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11499:118:14",
															"nodeType": "YulBlock",
															"src": "11499:118:14",
															"statements": [
																{
																	"nativeSrc": "11514:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11514:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11528:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11528:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11518:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11518:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11544:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11544:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11579:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11579:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11590:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11590:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11575:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11575:3:14"
																				},
																				"nativeSrc": "11575:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11575:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11599:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11599:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11554:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11554:20:14"
																		},
																		"nativeSrc": "11554:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11554:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11544:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11544:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11627:118:14",
															"nodeType": "YulBlock",
															"src": "11627:118:14",
															"statements": [
																{
																	"nativeSrc": "11642:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11642:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11656:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11656:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11646:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11646:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11672:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11672:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11707:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11707:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11718:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11718:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11703:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11703:3:14"
																				},
																				"nativeSrc": "11703:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11703:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11727:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11727:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11682:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11682:20:14"
																		},
																		"nativeSrc": "11682:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11682:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11672:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11672:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11755:287:14",
															"nodeType": "YulBlock",
															"src": "11755:287:14",
															"statements": [
																{
																	"nativeSrc": "11770:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11770:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11801:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11801:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11812:2:14",
																						"nodeType": "YulLiteral",
																						"src": "11812:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11797:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11797:3:14"
																				},
																				"nativeSrc": "11797:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11797:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11784:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "11784:12:14"
																		},
																		"nativeSrc": "11784:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11784:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11774:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11774:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11863:83:14",
																		"nodeType": "YulBlock",
																		"src": "11863:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11865:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "11865:77:14"
																					},
																					"nativeSrc": "11865:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11865:79:14"
																				},
																				"nativeSrc": "11865:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11865:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11835:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11835:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11843:18:14",
																				"nodeType": "YulLiteral",
																				"src": "11843:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11832:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "11832:2:14"
																		},
																		"nativeSrc": "11832:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11832:30:14"
																	},
																	"nativeSrc": "11829:117:14",
																	"nodeType": "YulIf",
																	"src": "11829:117:14"
																},
																{
																	"nativeSrc": "11960:72:14",
																	"nodeType": "YulAssignment",
																	"src": "11960:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12004:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12004:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12015:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12015:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12000:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12000:3:14"
																				},
																				"nativeSrc": "12000:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12000:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12024:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12024:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11970:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "11970:29:14"
																		},
																		"nativeSrc": "11970:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11970:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11960:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11960:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11106:943:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11178:9:14",
														"nodeType": "YulTypedName",
														"src": "11178:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11189:7:14",
														"nodeType": "YulTypedName",
														"src": "11189:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11201:6:14",
														"nodeType": "YulTypedName",
														"src": "11201:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11209:6:14",
														"nodeType": "YulTypedName",
														"src": "11209:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11217:6:14",
														"nodeType": "YulTypedName",
														"src": "11217:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11225:6:14",
														"nodeType": "YulTypedName",
														"src": "11225:6:14",
														"type": ""
													}
												],
												"src": "11106:943:14"
											},
											{
												"body": {
													"nativeSrc": "12138:391:14",
													"nodeType": "YulBlock",
													"src": "12138:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12184:83:14",
																"nodeType": "YulBlock",
																"src": "12184:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12186:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12186:77:14"
																			},
																			"nativeSrc": "12186:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12186:79:14"
																		},
																		"nativeSrc": "12186:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12186:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12159:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12159:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12168:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12168:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12155:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12155:3:14"
																		},
																		"nativeSrc": "12155:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12155:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12180:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12180:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12151:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12151:3:14"
																},
																"nativeSrc": "12151:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12151:32:14"
															},
															"nativeSrc": "12148:119:14",
															"nodeType": "YulIf",
															"src": "12148:119:14"
														},
														{
															"nativeSrc": "12277:117:14",
															"nodeType": "YulBlock",
															"src": "12277:117:14",
															"statements": [
																{
																	"nativeSrc": "12292:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12292:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12306:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12306:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12296:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12296:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12321:63:14",
																	"nodeType": "YulAssignment",
																	"src": "12321:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12356:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12356:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12367:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12367:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12352:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12352:3:14"
																				},
																				"nativeSrc": "12352:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12352:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12376:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12376:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12331:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "12331:20:14"
																		},
																		"nativeSrc": "12331:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12331:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12321:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12321:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12404:118:14",
															"nodeType": "YulBlock",
															"src": "12404:118:14",
															"statements": [
																{
																	"nativeSrc": "12419:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12419:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12433:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12423:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12423:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12449:63:14",
																	"nodeType": "YulAssignment",
																	"src": "12449:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12484:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12484:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12495:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12495:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12480:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12480:3:14"
																				},
																				"nativeSrc": "12480:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12480:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12504:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12504:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12459:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "12459:20:14"
																		},
																		"nativeSrc": "12459:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12459:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12449:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12449:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12055:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12100:9:14",
														"nodeType": "YulTypedName",
														"src": "12100:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12111:7:14",
														"nodeType": "YulTypedName",
														"src": "12111:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12123:6:14",
														"nodeType": "YulTypedName",
														"src": "12123:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12131:6:14",
														"nodeType": "YulTypedName",
														"src": "12131:6:14",
														"type": ""
													}
												],
												"src": "12055:474:14"
											},
											{
												"body": {
													"nativeSrc": "12563:152:14",
													"nodeType": "YulBlock",
													"src": "12563:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12580:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12580:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12583:77:14",
																		"nodeType": "YulLiteral",
																		"src": "12583:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12573:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12573:6:14"
																},
																"nativeSrc": "12573:88:14",
																"nodeType": "YulFunctionCall",
																"src": "12573:88:14"
															},
															"nativeSrc": "12573:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "12573:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12677:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12677:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12680:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12680:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12670:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12670:6:14"
																},
																"nativeSrc": "12670:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12670:15:14"
															},
															"nativeSrc": "12670:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12670:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12701:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12701:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12704:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12704:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12694:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12694:6:14"
																},
																"nativeSrc": "12694:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12694:15:14"
															},
															"nativeSrc": "12694:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12694:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12535:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "12535:180:14"
											},
											{
												"body": {
													"nativeSrc": "12772:269:14",
													"nodeType": "YulBlock",
													"src": "12772:269:14",
													"statements": [
														{
															"nativeSrc": "12782:22:14",
															"nodeType": "YulAssignment",
															"src": "12782:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12796:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12796:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12802:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12802:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12792:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12792:3:14"
																},
																"nativeSrc": "12792:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12792:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12782:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12782:6:14"
																}
															]
														},
														{
															"nativeSrc": "12813:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12813:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12843:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12843:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12849:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12849:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12839:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12839:3:14"
																},
																"nativeSrc": "12839:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12839:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12817:18:14",
																	"nodeType": "YulTypedName",
																	"src": "12817:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12890:51:14",
																"nodeType": "YulBlock",
																"src": "12890:51:14",
																"statements": [
																	{
																		"nativeSrc": "12904:27:14",
																		"nodeType": "YulAssignment",
																		"src": "12904:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12918:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "12918:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12926:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12926:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12914:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12914:3:14"
																			},
																			"nativeSrc": "12914:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12914:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12904:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12904:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12870:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12870:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12863:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12863:6:14"
																},
																"nativeSrc": "12863:26:14",
																"nodeType": "YulFunctionCall",
																"src": "12863:26:14"
															},
															"nativeSrc": "12860:81:14",
															"nodeType": "YulIf",
															"src": "12860:81:14"
														},
														{
															"body": {
																"nativeSrc": "12993:42:14",
																"nodeType": "YulBlock",
																"src": "12993:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13007:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "13007:16:14"
																			},
																			"nativeSrc": "13007:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13007:18:14"
																		},
																		"nativeSrc": "13007:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13007:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12957:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12957:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12980:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12980:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12988:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12988:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12977:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12977:2:14"
																		},
																		"nativeSrc": "12977:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12977:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12954:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12954:2:14"
																},
																"nativeSrc": "12954:38:14",
																"nodeType": "YulFunctionCall",
																"src": "12954:38:14"
															},
															"nativeSrc": "12951:84:14",
															"nodeType": "YulIf",
															"src": "12951:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12721:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12756:4:14",
														"nodeType": "YulTypedName",
														"src": "12756:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12765:6:14",
														"nodeType": "YulTypedName",
														"src": "12765:6:14",
														"type": ""
													}
												],
												"src": "12721:320:14"
											},
											{
												"body": {
													"nativeSrc": "13201:288:14",
													"nodeType": "YulBlock",
													"src": "13201:288:14",
													"statements": [
														{
															"nativeSrc": "13211:26:14",
															"nodeType": "YulAssignment",
															"src": "13211:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13223:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13223:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13234:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13234:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13219:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13219:3:14"
																},
																"nativeSrc": "13219:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13219:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13211:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13211:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13291:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13291:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13304:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13304:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13315:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13315:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13300:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13300:3:14"
																		},
																		"nativeSrc": "13300:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13300:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13247:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13247:43:14"
																},
																"nativeSrc": "13247:71:14",
																"nodeType": "YulFunctionCall",
																"src": "13247:71:14"
															},
															"nativeSrc": "13247:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "13247:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13372:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13372:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13385:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13385:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13396:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13396:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13381:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13381:3:14"
																		},
																		"nativeSrc": "13381:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13381:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13328:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13328:43:14"
																},
																"nativeSrc": "13328:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13328:72:14"
															},
															"nativeSrc": "13328:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13328:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13454:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13454:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13467:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13467:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13478:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13478:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13463:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:14"
																		},
																		"nativeSrc": "13463:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13463:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13410:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13410:43:14"
																},
																"nativeSrc": "13410:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13410:72:14"
															},
															"nativeSrc": "13410:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13410:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13047:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13157:9:14",
														"nodeType": "YulTypedName",
														"src": "13157:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13169:6:14",
														"nodeType": "YulTypedName",
														"src": "13169:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13177:6:14",
														"nodeType": "YulTypedName",
														"src": "13177:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13185:6:14",
														"nodeType": "YulTypedName",
														"src": "13185:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13196:4:14",
														"nodeType": "YulTypedName",
														"src": "13196:4:14",
														"type": ""
													}
												],
												"src": "13047:442:14"
											},
											{
												"body": {
													"nativeSrc": "13537:52:14",
													"nodeType": "YulBlock",
													"src": "13537:52:14",
													"statements": [
														{
															"nativeSrc": "13547:35:14",
															"nodeType": "YulAssignment",
															"src": "13547:35:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13572:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13572:2:14",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13576:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13576:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13568:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13568:3:14"
																},
																"nativeSrc": "13568:14:14",
																"nodeType": "YulFunctionCall",
																"src": "13568:14:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13547:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "13547:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "13495:94:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13518:5:14",
														"nodeType": "YulTypedName",
														"src": "13518:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13528:8:14",
														"nodeType": "YulTypedName",
														"src": "13528:8:14",
														"type": ""
													}
												],
												"src": "13495:94:14"
											},
											{
												"body": {
													"nativeSrc": "13642:47:14",
													"nodeType": "YulBlock",
													"src": "13642:47:14",
													"statements": [
														{
															"nativeSrc": "13652:31:14",
															"nodeType": "YulAssignment",
															"src": "13652:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13677:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13677:5:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "13663:13:14",
																	"nodeType": "YulIdentifier",
																	"src": "13663:13:14"
																},
																"nativeSrc": "13663:20:14",
																"nodeType": "YulFunctionCall",
																"src": "13663:20:14"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "13652:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "13652:7:14"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "13595:94:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13624:5:14",
														"nodeType": "YulTypedName",
														"src": "13624:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "13634:7:14",
														"nodeType": "YulTypedName",
														"src": "13634:7:14",
														"type": ""
													}
												],
												"src": "13595:94:14"
											},
											{
												"body": {
													"nativeSrc": "13742:53:14",
													"nodeType": "YulBlock",
													"src": "13742:53:14",
													"statements": [
														{
															"nativeSrc": "13752:37:14",
															"nodeType": "YulAssignment",
															"src": "13752:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13783:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13783:5:14"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "13763:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "13763:19:14"
																},
																"nativeSrc": "13763:26:14",
																"nodeType": "YulFunctionCall",
																"src": "13763:26:14"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "13752:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "13752:7:14"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "13695:100:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13724:5:14",
														"nodeType": "YulTypedName",
														"src": "13724:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "13734:7:14",
														"nodeType": "YulTypedName",
														"src": "13734:7:14",
														"type": ""
													}
												],
												"src": "13695:100:14"
											},
											{
												"body": {
													"nativeSrc": "13884:74:14",
													"nodeType": "YulBlock",
													"src": "13884:74:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13901:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13901:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13944:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13944:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "13926:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "13926:17:14"
																				},
																				"nativeSrc": "13926:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13926:24:14"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "13906:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "13906:19:14"
																		},
																		"nativeSrc": "13906:45:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13906:45:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13894:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13894:6:14"
																},
																"nativeSrc": "13894:58:14",
																"nodeType": "YulFunctionCall",
																"src": "13894:58:14"
															},
															"nativeSrc": "13894:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "13894:58:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "13801:157:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13872:5:14",
														"nodeType": "YulTypedName",
														"src": "13872:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13879:3:14",
														"nodeType": "YulTypedName",
														"src": "13879:3:14",
														"type": ""
													}
												],
												"src": "13801:157:14"
											},
											{
												"body": {
													"nativeSrc": "14011:32:14",
													"nodeType": "YulBlock",
													"src": "14011:32:14",
													"statements": [
														{
															"nativeSrc": "14021:16:14",
															"nodeType": "YulAssignment",
															"src": "14021:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "14032:5:14",
																"nodeType": "YulIdentifier",
																"src": "14032:5:14"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "14021:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "14021:7:14"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "13964:79:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13993:5:14",
														"nodeType": "YulTypedName",
														"src": "13993:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "14003:7:14",
														"nodeType": "YulTypedName",
														"src": "14003:7:14",
														"type": ""
													}
												],
												"src": "13964:79:14"
											},
											{
												"body": {
													"nativeSrc": "14132:74:14",
													"nodeType": "YulBlock",
													"src": "14132:74:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14149:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14149:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14192:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "14192:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14174:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "14174:17:14"
																				},
																				"nativeSrc": "14174:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14174:24:14"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "14154:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "14154:19:14"
																		},
																		"nativeSrc": "14154:45:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14154:45:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14142:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14142:6:14"
																},
																"nativeSrc": "14142:58:14",
																"nodeType": "YulFunctionCall",
																"src": "14142:58:14"
															},
															"nativeSrc": "14142:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "14142:58:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "14049:157:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14120:5:14",
														"nodeType": "YulTypedName",
														"src": "14120:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14127:3:14",
														"nodeType": "YulTypedName",
														"src": "14127:3:14",
														"type": ""
													}
												],
												"src": "14049:157:14"
											},
											{
												"body": {
													"nativeSrc": "14356:253:14",
													"nodeType": "YulBlock",
													"src": "14356:253:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14429:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14429:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14438:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14438:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "14367:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "14367:61:14"
																},
																"nativeSrc": "14367:75:14",
																"nodeType": "YulFunctionCall",
																"src": "14367:75:14"
															},
															"nativeSrc": "14367:75:14",
															"nodeType": "YulExpressionStatement",
															"src": "14367:75:14"
														},
														{
															"nativeSrc": "14451:19:14",
															"nodeType": "YulAssignment",
															"src": "14451:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14462:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14462:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14467:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14467:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14458:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14458:3:14"
																},
																"nativeSrc": "14458:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14458:12:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14451:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14451:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14542:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14542:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14551:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14551:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "14480:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "14480:61:14"
																},
																"nativeSrc": "14480:75:14",
																"nodeType": "YulFunctionCall",
																"src": "14480:75:14"
															},
															"nativeSrc": "14480:75:14",
															"nodeType": "YulExpressionStatement",
															"src": "14480:75:14"
														},
														{
															"nativeSrc": "14564:19:14",
															"nodeType": "YulAssignment",
															"src": "14564:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14575:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14575:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14580:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14580:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14571:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14571:3:14"
																},
																"nativeSrc": "14571:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14571:12:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14564:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:14"
																}
															]
														},
														{
															"nativeSrc": "14593:10:14",
															"nodeType": "YulAssignment",
															"src": "14593:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "14600:3:14",
																"nodeType": "YulIdentifier",
																"src": "14600:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14593:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14593:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14212:397:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14327:3:14",
														"nodeType": "YulTypedName",
														"src": "14327:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14333:6:14",
														"nodeType": "YulTypedName",
														"src": "14333:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14341:6:14",
														"nodeType": "YulTypedName",
														"src": "14341:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14352:3:14",
														"nodeType": "YulTypedName",
														"src": "14352:3:14",
														"type": ""
													}
												],
												"src": "14212:397:14"
											},
											{
												"body": {
													"nativeSrc": "14721:61:14",
													"nodeType": "YulBlock",
													"src": "14721:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14743:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14743:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14751:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14751:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14739:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14739:3:14"
																		},
																		"nativeSrc": "14739:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14739:14:14"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "14755:19:14",
																		"nodeType": "YulLiteral",
																		"src": "14755:19:14",
																		"type": "",
																		"value": "Invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14732:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14732:6:14"
																},
																"nativeSrc": "14732:43:14",
																"nodeType": "YulFunctionCall",
																"src": "14732:43:14"
															},
															"nativeSrc": "14732:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "14732:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
												"nativeSrc": "14615:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14713:6:14",
														"nodeType": "YulTypedName",
														"src": "14713:6:14",
														"type": ""
													}
												],
												"src": "14615:167:14"
											},
											{
												"body": {
													"nativeSrc": "14934:220:14",
													"nodeType": "YulBlock",
													"src": "14934:220:14",
													"statements": [
														{
															"nativeSrc": "14944:74:14",
															"nodeType": "YulAssignment",
															"src": "14944:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15010:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15010:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15015:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15015:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14951:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14951:58:14"
																},
																"nativeSrc": "14951:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14951:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14944:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14944:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15116:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15116:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																	"nativeSrc": "15027:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15027:88:14"
																},
																"nativeSrc": "15027:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15027:93:14"
															},
															"nativeSrc": "15027:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15027:93:14"
														},
														{
															"nativeSrc": "15129:19:14",
															"nodeType": "YulAssignment",
															"src": "15129:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15140:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15140:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15145:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15145:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15136:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15136:3:14"
																},
																"nativeSrc": "15136:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15136:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15129:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15129:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14788:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14922:3:14",
														"nodeType": "YulTypedName",
														"src": "14922:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14930:3:14",
														"nodeType": "YulTypedName",
														"src": "14930:3:14",
														"type": ""
													}
												],
												"src": "14788:366:14"
											},
											{
												"body": {
													"nativeSrc": "15331:248:14",
													"nodeType": "YulBlock",
													"src": "15331:248:14",
													"statements": [
														{
															"nativeSrc": "15341:26:14",
															"nodeType": "YulAssignment",
															"src": "15341:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15353:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15353:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15364:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15364:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15349:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15349:3:14"
																},
																"nativeSrc": "15349:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15349:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15341:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15341:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15388:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15388:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15399:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15399:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15384:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15384:3:14"
																		},
																		"nativeSrc": "15384:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15384:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15407:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15407:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15413:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15413:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15403:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15403:3:14"
																		},
																		"nativeSrc": "15403:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15403:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15377:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15377:6:14"
																},
																"nativeSrc": "15377:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15377:47:14"
															},
															"nativeSrc": "15377:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15377:47:14"
														},
														{
															"nativeSrc": "15433:139:14",
															"nodeType": "YulAssignment",
															"src": "15433:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15567:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15567:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15441:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15441:124:14"
																},
																"nativeSrc": "15441:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15441:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15433:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15433:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15160:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15311:9:14",
														"nodeType": "YulTypedName",
														"src": "15311:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15326:4:14",
														"nodeType": "YulTypedName",
														"src": "15326:4:14",
														"type": ""
													}
												],
												"src": "15160:419:14"
											},
											{
												"body": {
													"nativeSrc": "15691:59:14",
													"nodeType": "YulBlock",
													"src": "15691:59:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15713:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15713:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15721:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15721:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15709:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15709:3:14"
																		},
																		"nativeSrc": "15709:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15709:14:14"
																	},
																	{
																		"hexValue": "416c7265616479206d696e74656421",
																		"kind": "string",
																		"nativeSrc": "15725:17:14",
																		"nodeType": "YulLiteral",
																		"src": "15725:17:14",
																		"type": "",
																		"value": "Already minted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15702:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15702:6:14"
																},
																"nativeSrc": "15702:41:14",
																"nodeType": "YulFunctionCall",
																"src": "15702:41:14"
															},
															"nativeSrc": "15702:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "15702:41:14"
														}
													]
												},
												"name": "store_literal_in_memory_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2",
												"nativeSrc": "15585:165:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15683:6:14",
														"nodeType": "YulTypedName",
														"src": "15683:6:14",
														"type": ""
													}
												],
												"src": "15585:165:14"
											},
											{
												"body": {
													"nativeSrc": "15902:220:14",
													"nodeType": "YulBlock",
													"src": "15902:220:14",
													"statements": [
														{
															"nativeSrc": "15912:74:14",
															"nodeType": "YulAssignment",
															"src": "15912:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15978:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15978:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15983:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15983:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15919:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15919:58:14"
																},
																"nativeSrc": "15919:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15919:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15912:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15912:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16084:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16084:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2",
																	"nativeSrc": "15995:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15995:88:14"
																},
																"nativeSrc": "15995:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15995:93:14"
															},
															"nativeSrc": "15995:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15995:93:14"
														},
														{
															"nativeSrc": "16097:19:14",
															"nodeType": "YulAssignment",
															"src": "16097:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16108:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16108:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16113:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16113:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16104:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16104:3:14"
																},
																"nativeSrc": "16104:12:14",
																"nodeType": "YulFunctionCall",
																"src": "16104:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16097:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16097:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15756:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15890:3:14",
														"nodeType": "YulTypedName",
														"src": "15890:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15898:3:14",
														"nodeType": "YulTypedName",
														"src": "15898:3:14",
														"type": ""
													}
												],
												"src": "15756:366:14"
											},
											{
												"body": {
													"nativeSrc": "16299:248:14",
													"nodeType": "YulBlock",
													"src": "16299:248:14",
													"statements": [
														{
															"nativeSrc": "16309:26:14",
															"nodeType": "YulAssignment",
															"src": "16309:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16321:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16321:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16332:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16332:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16317:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16317:3:14"
																},
																"nativeSrc": "16317:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16317:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16309:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16309:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16356:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16356:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16367:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16367:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16352:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16352:3:14"
																		},
																		"nativeSrc": "16352:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16352:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16375:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16375:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16381:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16381:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16371:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16371:3:14"
																		},
																		"nativeSrc": "16371:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16371:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16345:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16345:6:14"
																},
																"nativeSrc": "16345:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16345:47:14"
															},
															"nativeSrc": "16345:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16345:47:14"
														},
														{
															"nativeSrc": "16401:139:14",
															"nodeType": "YulAssignment",
															"src": "16401:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16535:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16535:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16409:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16409:124:14"
																},
																"nativeSrc": "16409:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16409:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16401:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16401:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16128:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16279:9:14",
														"nodeType": "YulTypedName",
														"src": "16279:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16294:4:14",
														"nodeType": "YulTypedName",
														"src": "16294:4:14",
														"type": ""
													}
												],
												"src": "16128:419:14"
											},
											{
												"body": {
													"nativeSrc": "16667:34:14",
													"nodeType": "YulBlock",
													"src": "16667:34:14",
													"statements": [
														{
															"nativeSrc": "16677:18:14",
															"nodeType": "YulAssignment",
															"src": "16677:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16692:3:14",
																"nodeType": "YulIdentifier",
																"src": "16692:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16677:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "16677:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16553:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16639:3:14",
														"nodeType": "YulTypedName",
														"src": "16639:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16644:6:14",
														"nodeType": "YulTypedName",
														"src": "16644:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16655:11:14",
														"nodeType": "YulTypedName",
														"src": "16655:11:14",
														"type": ""
													}
												],
												"src": "16553:148:14"
											},
											{
												"body": {
													"nativeSrc": "16817:280:14",
													"nodeType": "YulBlock",
													"src": "16817:280:14",
													"statements": [
														{
															"nativeSrc": "16827:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16827:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16874:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16874:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16841:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "16841:32:14"
																},
																"nativeSrc": "16841:39:14",
																"nodeType": "YulFunctionCall",
																"src": "16841:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16831:6:14",
																	"nodeType": "YulTypedName",
																	"src": "16831:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16889:96:14",
															"nodeType": "YulAssignment",
															"src": "16889:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16973:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16973:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16978:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16978:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16896:76:14",
																	"nodeType": "YulIdentifier",
																	"src": "16896:76:14"
																},
																"nativeSrc": "16896:89:14",
																"nodeType": "YulFunctionCall",
																"src": "16896:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16889:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16889:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17033:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "17033:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17040:4:14",
																				"nodeType": "YulLiteral",
																				"src": "17040:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17029:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17029:3:14"
																		},
																		"nativeSrc": "17029:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17029:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17047:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17047:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17052:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17052:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16994:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "16994:34:14"
																},
																"nativeSrc": "16994:65:14",
																"nodeType": "YulFunctionCall",
																"src": "16994:65:14"
															},
															"nativeSrc": "16994:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "16994:65:14"
														},
														{
															"nativeSrc": "17068:23:14",
															"nodeType": "YulAssignment",
															"src": "17068:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17079:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17079:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17084:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17084:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17075:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17075:3:14"
																},
																"nativeSrc": "17075:16:14",
																"nodeType": "YulFunctionCall",
																"src": "17075:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17068:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17068:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16707:390:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16798:5:14",
														"nodeType": "YulTypedName",
														"src": "16798:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16805:3:14",
														"nodeType": "YulTypedName",
														"src": "16805:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16813:3:14",
														"nodeType": "YulTypedName",
														"src": "16813:3:14",
														"type": ""
													}
												],
												"src": "16707:390:14"
											},
											{
												"body": {
													"nativeSrc": "17287:251:14",
													"nodeType": "YulBlock",
													"src": "17287:251:14",
													"statements": [
														{
															"nativeSrc": "17298:102:14",
															"nodeType": "YulAssignment",
															"src": "17298:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17387:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17387:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17396:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17396:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17305:81:14",
																	"nodeType": "YulIdentifier",
																	"src": "17305:81:14"
																},
																"nativeSrc": "17305:95:14",
																"nodeType": "YulFunctionCall",
																"src": "17305:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17298:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17298:3:14"
																}
															]
														},
														{
															"nativeSrc": "17410:102:14",
															"nodeType": "YulAssignment",
															"src": "17410:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17499:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17499:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17508:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17508:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17417:81:14",
																	"nodeType": "YulIdentifier",
																	"src": "17417:81:14"
																},
																"nativeSrc": "17417:95:14",
																"nodeType": "YulFunctionCall",
																"src": "17417:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17410:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17410:3:14"
																}
															]
														},
														{
															"nativeSrc": "17522:10:14",
															"nodeType": "YulAssignment",
															"src": "17522:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17529:3:14",
																"nodeType": "YulIdentifier",
																"src": "17529:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17522:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17522:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17103:435:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17258:3:14",
														"nodeType": "YulTypedName",
														"src": "17258:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17264:6:14",
														"nodeType": "YulTypedName",
														"src": "17264:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17272:6:14",
														"nodeType": "YulTypedName",
														"src": "17272:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17283:3:14",
														"nodeType": "YulTypedName",
														"src": "17283:3:14",
														"type": ""
													}
												],
												"src": "17103:435:14"
											},
											{
												"body": {
													"nativeSrc": "17602:40:14",
													"nodeType": "YulBlock",
													"src": "17602:40:14",
													"statements": [
														{
															"nativeSrc": "17613:22:14",
															"nodeType": "YulAssignment",
															"src": "17613:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17629:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17629:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17623:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "17623:5:14"
																},
																"nativeSrc": "17623:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17623:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17613:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17613:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "17544:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17585:5:14",
														"nodeType": "YulTypedName",
														"src": "17585:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17595:6:14",
														"nodeType": "YulTypedName",
														"src": "17595:6:14",
														"type": ""
													}
												],
												"src": "17544:98:14"
											},
											{
												"body": {
													"nativeSrc": "17743:73:14",
													"nodeType": "YulBlock",
													"src": "17743:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17760:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17760:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17765:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17765:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17753:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17753:6:14"
																},
																"nativeSrc": "17753:19:14",
																"nodeType": "YulFunctionCall",
																"src": "17753:19:14"
															},
															"nativeSrc": "17753:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "17753:19:14"
														},
														{
															"nativeSrc": "17781:29:14",
															"nodeType": "YulAssignment",
															"src": "17781:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17800:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17800:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17805:4:14",
																		"nodeType": "YulLiteral",
																		"src": "17805:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17796:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17796:3:14"
																},
																"nativeSrc": "17796:14:14",
																"nodeType": "YulFunctionCall",
																"src": "17796:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17781:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "17781:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "17648:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17715:3:14",
														"nodeType": "YulTypedName",
														"src": "17715:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17720:6:14",
														"nodeType": "YulTypedName",
														"src": "17720:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17731:11:14",
														"nodeType": "YulTypedName",
														"src": "17731:11:14",
														"type": ""
													}
												],
												"src": "17648:168:14"
											},
											{
												"body": {
													"nativeSrc": "17912:283:14",
													"nodeType": "YulBlock",
													"src": "17912:283:14",
													"statements": [
														{
															"nativeSrc": "17922:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17922:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17968:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17968:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "17936:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "17936:31:14"
																},
																"nativeSrc": "17936:38:14",
																"nodeType": "YulFunctionCall",
																"src": "17936:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17926:6:14",
																	"nodeType": "YulTypedName",
																	"src": "17926:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17983:77:14",
															"nodeType": "YulAssignment",
															"src": "17983:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18048:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18048:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18053:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18053:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "17990:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "17990:57:14"
																},
																"nativeSrc": "17990:70:14",
																"nodeType": "YulFunctionCall",
																"src": "17990:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17983:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17983:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18108:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "18108:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18115:4:14",
																				"nodeType": "YulLiteral",
																				"src": "18115:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18104:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18104:3:14"
																		},
																		"nativeSrc": "18104:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18104:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18122:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18122:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18127:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18127:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18069:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "18069:34:14"
																},
																"nativeSrc": "18069:65:14",
																"nodeType": "YulFunctionCall",
																"src": "18069:65:14"
															},
															"nativeSrc": "18069:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "18069:65:14"
														},
														{
															"nativeSrc": "18143:46:14",
															"nodeType": "YulAssignment",
															"src": "18143:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18154:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18154:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18181:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18181:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18159:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "18159:21:14"
																		},
																		"nativeSrc": "18159:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18159:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18150:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18150:3:14"
																},
																"nativeSrc": "18150:39:14",
																"nodeType": "YulFunctionCall",
																"src": "18150:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18143:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18143:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "17822:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17893:5:14",
														"nodeType": "YulTypedName",
														"src": "17893:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17900:3:14",
														"nodeType": "YulTypedName",
														"src": "17900:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17908:3:14",
														"nodeType": "YulTypedName",
														"src": "17908:3:14",
														"type": ""
													}
												],
												"src": "17822:373:14"
											},
											{
												"body": {
													"nativeSrc": "18401:440:14",
													"nodeType": "YulBlock",
													"src": "18401:440:14",
													"statements": [
														{
															"nativeSrc": "18411:27:14",
															"nodeType": "YulAssignment",
															"src": "18411:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18423:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18423:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18434:3:14",
																		"nodeType": "YulLiteral",
																		"src": "18434:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18419:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18419:3:14"
																},
																"nativeSrc": "18419:19:14",
																"nodeType": "YulFunctionCall",
																"src": "18419:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18411:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18411:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18492:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18492:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18505:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18505:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18516:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18516:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18501:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18501:3:14"
																		},
																		"nativeSrc": "18501:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18501:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18448:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18448:43:14"
																},
																"nativeSrc": "18448:71:14",
																"nodeType": "YulFunctionCall",
																"src": "18448:71:14"
															},
															"nativeSrc": "18448:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "18448:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18573:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18573:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18586:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18586:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18597:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18597:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18582:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18582:3:14"
																		},
																		"nativeSrc": "18582:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18582:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18529:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18529:43:14"
																},
																"nativeSrc": "18529:72:14",
																"nodeType": "YulFunctionCall",
																"src": "18529:72:14"
															},
															"nativeSrc": "18529:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "18529:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18655:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18655:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18668:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18668:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18679:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18679:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18664:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18664:3:14"
																		},
																		"nativeSrc": "18664:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18664:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18611:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18611:43:14"
																},
																"nativeSrc": "18611:72:14",
																"nodeType": "YulFunctionCall",
																"src": "18611:72:14"
															},
															"nativeSrc": "18611:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "18611:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18704:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18704:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18715:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18715:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18700:3:14"
																		},
																		"nativeSrc": "18700:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18700:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18724:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18724:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18730:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18730:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18720:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18720:3:14"
																		},
																		"nativeSrc": "18720:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18720:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18693:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18693:6:14"
																},
																"nativeSrc": "18693:48:14",
																"nodeType": "YulFunctionCall",
																"src": "18693:48:14"
															},
															"nativeSrc": "18693:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "18693:48:14"
														},
														{
															"nativeSrc": "18750:84:14",
															"nodeType": "YulAssignment",
															"src": "18750:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18820:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18820:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "18829:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18829:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18758:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "18758:61:14"
																},
																"nativeSrc": "18758:76:14",
																"nodeType": "YulFunctionCall",
																"src": "18758:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18750:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18750:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "18201:640:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18349:9:14",
														"nodeType": "YulTypedName",
														"src": "18349:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18361:6:14",
														"nodeType": "YulTypedName",
														"src": "18361:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18369:6:14",
														"nodeType": "YulTypedName",
														"src": "18369:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18377:6:14",
														"nodeType": "YulTypedName",
														"src": "18377:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18385:6:14",
														"nodeType": "YulTypedName",
														"src": "18385:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18396:4:14",
														"nodeType": "YulTypedName",
														"src": "18396:4:14",
														"type": ""
													}
												],
												"src": "18201:640:14"
											},
											{
												"body": {
													"nativeSrc": "18909:79:14",
													"nodeType": "YulBlock",
													"src": "18909:79:14",
													"statements": [
														{
															"nativeSrc": "18919:22:14",
															"nodeType": "YulAssignment",
															"src": "18919:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18934:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18934:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18928:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "18928:5:14"
																},
																"nativeSrc": "18928:13:14",
																"nodeType": "YulFunctionCall",
																"src": "18928:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18919:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "18919:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18976:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "18976:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "18950:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "18950:25:14"
																},
																"nativeSrc": "18950:32:14",
																"nodeType": "YulFunctionCall",
																"src": "18950:32:14"
															},
															"nativeSrc": "18950:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "18950:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "18847:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18887:6:14",
														"nodeType": "YulTypedName",
														"src": "18887:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18895:3:14",
														"nodeType": "YulTypedName",
														"src": "18895:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18903:5:14",
														"nodeType": "YulTypedName",
														"src": "18903:5:14",
														"type": ""
													}
												],
												"src": "18847:141:14"
											},
											{
												"body": {
													"nativeSrc": "19070:273:14",
													"nodeType": "YulBlock",
													"src": "19070:273:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "19116:83:14",
																"nodeType": "YulBlock",
																"src": "19116:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19118:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "19118:77:14"
																			},
																			"nativeSrc": "19118:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19118:79:14"
																		},
																		"nativeSrc": "19118:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19118:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19091:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19091:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19100:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19100:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19087:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19087:3:14"
																		},
																		"nativeSrc": "19087:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19087:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19112:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19112:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19083:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19083:3:14"
																},
																"nativeSrc": "19083:32:14",
																"nodeType": "YulFunctionCall",
																"src": "19083:32:14"
															},
															"nativeSrc": "19080:119:14",
															"nodeType": "YulIf",
															"src": "19080:119:14"
														},
														{
															"nativeSrc": "19209:127:14",
															"nodeType": "YulBlock",
															"src": "19209:127:14",
															"statements": [
																{
																	"nativeSrc": "19224:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19224:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19238:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19238:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19228:6:14",
																			"nodeType": "YulTypedName",
																			"src": "19228:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19253:73:14",
																	"nodeType": "YulAssignment",
																	"src": "19253:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19298:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19298:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19309:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "19309:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19294:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19294:3:14"
																				},
																				"nativeSrc": "19294:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19294:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19318:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19318:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "19263:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "19263:30:14"
																		},
																		"nativeSrc": "19263:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19263:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19253:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "19253:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "18994:349:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19040:9:14",
														"nodeType": "YulTypedName",
														"src": "19040:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19051:7:14",
														"nodeType": "YulTypedName",
														"src": "19051:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19063:6:14",
														"nodeType": "YulTypedName",
														"src": "19063:6:14",
														"type": ""
													}
												],
												"src": "18994:349:14"
											},
											{
												"body": {
													"nativeSrc": "19377:152:14",
													"nodeType": "YulBlock",
													"src": "19377:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19394:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19394:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19397:77:14",
																		"nodeType": "YulLiteral",
																		"src": "19397:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19387:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19387:6:14"
																},
																"nativeSrc": "19387:88:14",
																"nodeType": "YulFunctionCall",
																"src": "19387:88:14"
															},
															"nativeSrc": "19387:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "19387:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19491:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19491:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19494:4:14",
																		"nodeType": "YulLiteral",
																		"src": "19494:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19484:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19484:6:14"
																},
																"nativeSrc": "19484:15:14",
																"nodeType": "YulFunctionCall",
																"src": "19484:15:14"
															},
															"nativeSrc": "19484:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "19484:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19515:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19515:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19518:4:14",
																		"nodeType": "YulLiteral",
																		"src": "19518:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19508:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19508:6:14"
																},
																"nativeSrc": "19508:15:14",
																"nodeType": "YulFunctionCall",
																"src": "19508:15:14"
															},
															"nativeSrc": "19508:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "19508:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "19349:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "19349:180:14"
											},
											{
												"body": {
													"nativeSrc": "19661:206:14",
													"nodeType": "YulBlock",
													"src": "19661:206:14",
													"statements": [
														{
															"nativeSrc": "19671:26:14",
															"nodeType": "YulAssignment",
															"src": "19671:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19683:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19683:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19694:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19694:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19679:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19679:3:14"
																},
																"nativeSrc": "19679:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19679:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19671:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19671:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19751:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19751:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19764:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19764:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19775:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19775:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19760:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19760:3:14"
																		},
																		"nativeSrc": "19760:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19760:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19707:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19707:43:14"
																},
																"nativeSrc": "19707:71:14",
																"nodeType": "YulFunctionCall",
																"src": "19707:71:14"
															},
															"nativeSrc": "19707:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "19707:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19832:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19832:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19845:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19845:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19856:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19856:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19841:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19841:3:14"
																		},
																		"nativeSrc": "19841:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19841:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19788:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19788:43:14"
																},
																"nativeSrc": "19788:72:14",
																"nodeType": "YulFunctionCall",
																"src": "19788:72:14"
															},
															"nativeSrc": "19788:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "19788:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19535:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19625:9:14",
														"nodeType": "YulTypedName",
														"src": "19625:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19637:6:14",
														"nodeType": "YulTypedName",
														"src": "19637:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19645:6:14",
														"nodeType": "YulTypedName",
														"src": "19645:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19656:4:14",
														"nodeType": "YulTypedName",
														"src": "19656:4:14",
														"type": ""
													}
												],
												"src": "19535:332:14"
											},
											{
												"body": {
													"nativeSrc": "19901:152:14",
													"nodeType": "YulBlock",
													"src": "19901:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19918:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19918:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19921:77:14",
																		"nodeType": "YulLiteral",
																		"src": "19921:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19911:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19911:6:14"
																},
																"nativeSrc": "19911:88:14",
																"nodeType": "YulFunctionCall",
																"src": "19911:88:14"
															},
															"nativeSrc": "19911:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "19911:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20015:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20015:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20018:4:14",
																		"nodeType": "YulLiteral",
																		"src": "20018:4:14",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20008:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20008:6:14"
																},
																"nativeSrc": "20008:15:14",
																"nodeType": "YulFunctionCall",
																"src": "20008:15:14"
															},
															"nativeSrc": "20008:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "20008:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20039:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20039:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20042:4:14",
																		"nodeType": "YulLiteral",
																		"src": "20042:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20032:6:14"
																},
																"nativeSrc": "20032:15:14",
																"nodeType": "YulFunctionCall",
																"src": "20032:15:14"
															},
															"nativeSrc": "20032:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "20032:15:14"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19873:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "19873:180:14"
											},
											{
												"body": {
													"nativeSrc": "20102:43:14",
													"nodeType": "YulBlock",
													"src": "20102:43:14",
													"statements": [
														{
															"nativeSrc": "20112:27:14",
															"nodeType": "YulAssignment",
															"src": "20112:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20127:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "20127:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20134:4:14",
																		"nodeType": "YulLiteral",
																		"src": "20134:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20123:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20123:3:14"
																},
																"nativeSrc": "20123:16:14",
																"nodeType": "YulFunctionCall",
																"src": "20123:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20112:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20112:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "20059:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20084:5:14",
														"nodeType": "YulTypedName",
														"src": "20084:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20094:7:14",
														"nodeType": "YulTypedName",
														"src": "20094:7:14",
														"type": ""
													}
												],
												"src": "20059:86:14"
											},
											{
												"body": {
													"nativeSrc": "20212:51:14",
													"nodeType": "YulBlock",
													"src": "20212:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20229:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20229:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20250:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "20250:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "20234:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "20234:15:14"
																		},
																		"nativeSrc": "20234:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20234:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20222:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20222:6:14"
																},
																"nativeSrc": "20222:35:14",
																"nodeType": "YulFunctionCall",
																"src": "20222:35:14"
															},
															"nativeSrc": "20222:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "20222:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "20151:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20200:5:14",
														"nodeType": "YulTypedName",
														"src": "20200:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20207:3:14",
														"nodeType": "YulTypedName",
														"src": "20207:3:14",
														"type": ""
													}
												],
												"src": "20151:112:14"
											},
											{
												"body": {
													"nativeSrc": "20447:367:14",
													"nodeType": "YulBlock",
													"src": "20447:367:14",
													"statements": [
														{
															"nativeSrc": "20457:27:14",
															"nodeType": "YulAssignment",
															"src": "20457:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20469:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20469:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20480:3:14",
																		"nodeType": "YulLiteral",
																		"src": "20480:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20465:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20465:3:14"
																},
																"nativeSrc": "20465:19:14",
																"nodeType": "YulFunctionCall",
																"src": "20465:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20457:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20457:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20538:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20538:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20551:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20551:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20562:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20562:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20547:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20547:3:14"
																		},
																		"nativeSrc": "20547:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20547:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20494:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "20494:43:14"
																},
																"nativeSrc": "20494:71:14",
																"nodeType": "YulFunctionCall",
																"src": "20494:71:14"
															},
															"nativeSrc": "20494:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "20494:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20615:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20615:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20628:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20628:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20639:2:14",
																				"nodeType": "YulLiteral",
																				"src": "20639:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20624:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20624:3:14"
																		},
																		"nativeSrc": "20624:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20624:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "20575:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "20575:39:14"
																},
																"nativeSrc": "20575:68:14",
																"nodeType": "YulFunctionCall",
																"src": "20575:68:14"
															},
															"nativeSrc": "20575:68:14",
															"nodeType": "YulExpressionStatement",
															"src": "20575:68:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20697:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20697:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20710:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20710:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20721:2:14",
																				"nodeType": "YulLiteral",
																				"src": "20721:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20706:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20706:3:14"
																		},
																		"nativeSrc": "20706:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20706:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20653:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "20653:43:14"
																},
																"nativeSrc": "20653:72:14",
																"nodeType": "YulFunctionCall",
																"src": "20653:72:14"
															},
															"nativeSrc": "20653:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "20653:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20779:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20779:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20792:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20792:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20803:2:14",
																				"nodeType": "YulLiteral",
																				"src": "20803:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20788:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20788:3:14"
																		},
																		"nativeSrc": "20788:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20788:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20735:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "20735:43:14"
																},
																"nativeSrc": "20735:72:14",
																"nodeType": "YulFunctionCall",
																"src": "20735:72:14"
															},
															"nativeSrc": "20735:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "20735:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "20269:545:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20395:9:14",
														"nodeType": "YulTypedName",
														"src": "20395:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20407:6:14",
														"nodeType": "YulTypedName",
														"src": "20407:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20415:6:14",
														"nodeType": "YulTypedName",
														"src": "20415:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20423:6:14",
														"nodeType": "YulTypedName",
														"src": "20423:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20431:6:14",
														"nodeType": "YulTypedName",
														"src": "20431:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20442:4:14",
														"nodeType": "YulTypedName",
														"src": "20442:4:14",
														"type": ""
													}
												],
												"src": "20269:545:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already minted!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3219": [
									{
										"length": 32,
										"start": 1389
									},
									{
										"length": 32,
										"start": 1694
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630303C6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x630303C6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x94D008EF EQ PUSH2 0x2F8 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x238AC933 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x258AE582 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x512C91DF EQ PUSH2 0x238 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x494 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4A4 JUMPI POP PUSH2 0x4A3 DUP3 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4B9 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E5 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x530 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x507 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x530 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x513 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x544 DUP3 PUSH2 0xB9B JUMP JUMPDEST POP PUSH2 0x54E DUP3 PUSH2 0xC21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x567 DUP3 DUP3 PUSH2 0x562 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x612 DUP4 DUP4 PUSH2 0x60D PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x688 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x69A DUP5 DUP5 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x727 SWAP3 SWAP2 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x76C DUP3 PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x834 DUP5 DUP5 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x840 DUP3 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP PUSH2 0x84C DUP2 DUP5 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91F DUP6 DUP6 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x98A SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9B6 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA01 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA01 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA16 PUSH2 0xC5A JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA2C DUP5 DUP5 DUP5 PUSH2 0x58F JUMP JUMPDEST PUSH2 0xA38 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1137 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA49 DUP3 PUSH2 0xB9B JUMP JUMPDEST POP PUSH0 PUSH2 0xA53 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA9C JUMP JUMPDEST DUP1 PUSH2 0xA7B DUP5 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA8C SWAP3 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBA6 DUP4 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC18 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC6E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1402 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC7E DUP5 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBF JUMPI PUSH2 0xCBE DUP2 DUP5 DUP7 PUSH2 0x15C1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD4A JUMPI PUSH2 0xCFE PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC9 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xE8C DUP7 DUP7 PUSH2 0x1684 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE9C DUP3 DUP3 PUSH2 0x16D9 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF57 DUP4 DUP4 PUSH0 PUSH2 0xC73 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12E3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x117A PUSH2 0xC5A JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1258 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1250 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x130D DUP5 PUSH2 0x183B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x132B JUMPI PUSH2 0x132A PUSH2 0x1E30 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x135D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13BE JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13B3 JUMPI PUSH2 0x13B2 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x136A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x143A JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x156C JUMPI PUSH0 PUSH2 0x1449 DUP5 PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x14B3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14C6 JUMPI POP PUSH2 0x14C4 DUP2 DUP5 PUSH2 0xAA4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1508 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x156A JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15CC DUP4 DUP4 DUP4 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x167F JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1640 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1676 SWAP3 SWAP2 SWAP1 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x16C4 JUMPI PUSH0 DUP1 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x16B6 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1A4C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1837 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1719 JUMPI PUSH2 0x1718 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1763 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1777 JUMPI PUSH2 0x1776 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x17CE JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C5 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x17E1 JUMPI PUSH2 0x17E0 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI PUSH2 0x17F3 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1836 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182D SWAP2 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1897 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18D4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1903 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18F9 JUMPI PUSH2 0x18F8 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x192C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1951 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1947 JUMPI PUSH2 0x1946 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1974 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x24E5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1983 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A43 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A04 JUMPI POP PUSH2 0x1A03 DUP5 DUP5 PUSH2 0xAA4 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A42 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A2A DUP4 PUSH2 0xC21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1A88 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1B29 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1AAB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2581 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ACB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B1C JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1B29 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B78 DUP2 PUSH2 0x1B44 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B93 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BAE JUMPI PUSH2 0x1BAD PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBB DUP5 DUP3 DUP6 ADD PUSH2 0x1B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD8 DUP2 PUSH2 0x1BC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C39 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x1C43 DUP2 DUP6 PUSH2 0x1C01 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x1C5C DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7F DUP2 DUP5 PUSH2 0x1C2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C99 DUP2 PUSH2 0x1C87 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB4 DUP2 PUSH2 0x1C90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CDC DUP5 DUP3 DUP6 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E DUP3 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1E DUP2 PUSH2 0x1D04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D37 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D46 DUP2 PUSH2 0x1D04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D50 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D61 DUP2 PUSH2 0x1D3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8A DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D9B DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH2 0x1DBB PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DDA DUP7 DUP3 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DEB DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E07 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E22 DUP2 PUSH2 0x1DFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E66 DUP3 PUSH2 0x1C1F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E85 JUMPI PUSH2 0x1E84 PUSH2 0x1E30 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E97 PUSH2 0x1B33 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA3 DUP3 DUP3 PUSH2 0x1E5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1E30 JUMP JUMPDEST JUMPDEST PUSH2 0x1ECB DUP3 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF8 PUSH2 0x1EF3 DUP5 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x1E8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F14 JUMPI PUSH2 0x1F13 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH2 0x1F1F DUP5 DUP3 DUP6 PUSH2 0x1ED8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F3B JUMPI PUSH2 0x1F3A PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F77 DUP6 DUP3 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F97 PUSH2 0x1B40 JUMP JUMPDEST JUMPDEST PUSH2 0x1FA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF8 DUP5 DUP3 DUP6 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200A DUP2 PUSH2 0x1C87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2023 PUSH0 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x204D DUP7 DUP3 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x205E DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1B40 JUMP JUMPDEST JUMPDEST PUSH2 0x208B DUP7 DUP3 DUP8 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x209E DUP2 PUSH2 0x1BC4 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B9 DUP2 PUSH2 0x2095 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20D4 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20F3 DUP6 DUP3 DUP7 ADD PUSH2 0x20AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2122 DUP8 DUP3 DUP9 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2133 DUP8 DUP3 DUP9 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2144 DUP8 DUP3 DUP9 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2165 JUMPI PUSH2 0x2164 PUSH2 0x1B40 JUMP JUMPDEST JUMPDEST PUSH2 0x2171 DUP8 DUP3 DUP9 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2193 JUMPI PUSH2 0x2192 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2212 JUMPI PUSH2 0x2211 PUSH2 0x21BB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x222B PUSH0 DUP4 ADD DUP7 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x2238 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x2245 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D15 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2263 DUP3 PUSH2 0x224D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2274 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228C PUSH2 0x2287 DUP3 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x226A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22AC PUSH2 0x22A7 DUP3 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x2292 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22BD DUP3 DUP6 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x22CD DUP3 DUP5 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 PUSH1 0x11 DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x231C DUP3 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233E DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206D696E746564210000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2379 PUSH1 0xF DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2384 DUP3 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A6 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23C1 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x23CB DUP2 DUP6 PUSH2 0x23AD JUMP JUMPDEST SWAP4 POP PUSH2 0x23DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23F2 DUP3 DUP6 PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23FE DUP3 DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x242E DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x2438 DUP2 DUP6 PUSH2 0x2414 JUMP JUMPDEST SWAP4 POP PUSH2 0x2448 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x2451 DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x246F PUSH0 DUP4 ADD DUP8 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x247C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x2489 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2001 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x249B DUP2 DUP5 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B4 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24DC DUP5 DUP3 DUP6 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2525 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x2532 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x257B DUP2 PUSH2 0x2566 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH0 DUP4 ADD DUP8 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x25A1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2572 JUMP JUMPDEST PUSH2 0x25AE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x25BB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FAE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH0 DUP2 0xB4 CALLCODE PREVRANDAO REVERT 0xC4 GASPRICE SMOD 0xA9 0xC6 0xC4 EQ 0xBE PUSH0 0xDF POP MSIZE 0xDD ADDMOD NUMBER PUSH14 0x747577A63A025E88DC64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "254:1624:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;292:31:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1670:206:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1451:160:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;597:575:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;292:31:13:-;;;:::o;4143:578:1:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1670:206:13:-;1758:4;1778:17;1798:35;1812:8;1822:10;1798:13;:35::i;:::-;1778:55;;1863:6;1850:19;;:9;:19;;;1843:26;;;1670:206;;;;:::o;4787:132:1:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1451:160:13:-;1531:7;1584:8;1594;1567:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1557:47;;;;;;1550:54;;1451:160;;;;:::o;344:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;597:575:13:-;691:16;710:34;725:8;735;710:14;:34::i;:::-;691:53;;791:29;823:49;863:8;823:39;:49::i;:::-;791:81;;891:41;898:21;921:10;891:6;:41::i;:::-;883:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;993:13;:23;1007:8;993:23;;;;;;;;;;;;;;;;;;;;;;;;;992:24;984:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1068:25;1074:8;1084;1068:5;:25::i;:::-;1136:4;1110:13;:23;1124:8;1110:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;681:491;;597:575;;;:::o;2518:93:1:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:1:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;3702:255:7:-;3780:7;3800:17;3819:18;3839:16;3859:27;3870:4;3876:9;3859:10;:27::i;:::-;3799:87;;;;;;3896:28;3908:5;3915:8;3896:11;:28::i;:::-;3941:9;3934:16;;;;;3702:255;;;;:::o;1222:460:8:-;1298:14;1403:34;1397:4;1390:48;1505:11;1499:4;1492:25;1597:4;1591;1581:21;1571:31;;1222:460;;;:::o;9955:327:1:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:6:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:1:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;2129:766:7:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;12214:916:11:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:1:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;5140:1530:7:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:117::-;5873:1;5870;5863:12;5887:117;5996:1;5993;5986:12;6010:180;6058:77;6055:1;6048:88;6155:4;6152:1;6145:15;6179:4;6176:1;6169:15;6196:281;6279:27;6301:4;6279:27;:::i;:::-;6271:6;6267:40;6409:6;6397:10;6394:22;6373:18;6361:10;6358:34;6355:62;6352:88;;;6420:18;;:::i;:::-;6352:88;6460:10;6456:2;6449:22;6239:238;6196:281;;:::o;6483:129::-;6517:6;6544:20;;:::i;:::-;6534:30;;6573:33;6601:4;6593:6;6573:33;:::i;:::-;6483:129;;;:::o;6618:307::-;6679:4;6769:18;6761:6;6758:30;6755:56;;;6791:18;;:::i;:::-;6755:56;6829:29;6851:6;6829:29;:::i;:::-;6821:37;;6913:4;6907;6903:15;6895:23;;6618:307;;;:::o;6931:148::-;7029:6;7024:3;7019;7006:30;7070:1;7061:6;7056:3;7052:16;7045:27;6931:148;;;:::o;7085:423::-;7162:5;7187:65;7203:48;7244:6;7203:48;:::i;:::-;7187:65;:::i;:::-;7178:74;;7275:6;7268:5;7261:21;7313:4;7306:5;7302:16;7351:3;7342:6;7337:3;7333:16;7330:25;7327:112;;;7358:79;;:::i;:::-;7327:112;7448:54;7495:6;7490:3;7485;7448:54;:::i;:::-;7168:340;7085:423;;;;;:::o;7527:338::-;7582:5;7631:3;7624:4;7616:6;7612:17;7608:27;7598:122;;7639:79;;:::i;:::-;7598:122;7756:6;7743:20;7781:78;7855:3;7847:6;7840:4;7832:6;7828:17;7781:78;:::i;:::-;7772:87;;7588:277;7527:338;;;;:::o;7871:652::-;7948:6;7956;8005:2;7993:9;7984:7;7980:23;7976:32;7973:119;;;8011:79;;:::i;:::-;7973:119;8131:1;8156:53;8201:7;8192:6;8181:9;8177:22;8156:53;:::i;:::-;8146:63;;8102:117;8286:2;8275:9;8271:18;8258:32;8317:18;8309:6;8306:30;8303:117;;;8339:79;;:::i;:::-;8303:117;8444:62;8498:7;8489:6;8478:9;8474:22;8444:62;:::i;:::-;8434:72;;8229:287;7871:652;;;;;:::o;8529:118::-;8616:24;8634:5;8616:24;:::i;:::-;8611:3;8604:37;8529:118;;:::o;8653:222::-;8746:4;8784:2;8773:9;8769:18;8761:26;;8797:71;8865:1;8854:9;8850:17;8841:6;8797:71;:::i;:::-;8653:222;;;;:::o;8881:329::-;8940:6;8989:2;8977:9;8968:7;8964:23;8960:32;8957:119;;;8995:79;;:::i;:::-;8957:119;9115:1;9140:53;9185:7;9176:6;9165:9;9161:22;9140:53;:::i;:::-;9130:63;;9086:117;8881:329;;;;:::o;9216:118::-;9303:24;9321:5;9303:24;:::i;:::-;9298:3;9291:37;9216:118;;:::o;9340:222::-;9433:4;9471:2;9460:9;9456:18;9448:26;;9484:71;9552:1;9541:9;9537:17;9528:6;9484:71;:::i;:::-;9340:222;;;;:::o;9568:797::-;9654:6;9662;9670;9719:2;9707:9;9698:7;9694:23;9690:32;9687:119;;;9725:79;;:::i;:::-;9687:119;9845:1;9870:53;9915:7;9906:6;9895:9;9891:22;9870:53;:::i;:::-;9860:63;;9816:117;9972:2;9998:53;10043:7;10034:6;10023:9;10019:22;9998:53;:::i;:::-;9988:63;;9943:118;10128:2;10117:9;10113:18;10100:32;10159:18;10151:6;10148:30;10145:117;;;10181:79;;:::i;:::-;10145:117;10286:62;10340:7;10331:6;10320:9;10316:22;10286:62;:::i;:::-;10276:72;;10071:287;9568:797;;;;;:::o;10371:116::-;10441:21;10456:5;10441:21;:::i;:::-;10434:5;10431:32;10421:60;;10477:1;10474;10467:12;10421:60;10371:116;:::o;10493:133::-;10536:5;10574:6;10561:20;10552:29;;10590:30;10614:5;10590:30;:::i;:::-;10493:133;;;;:::o;10632:468::-;10697:6;10705;10754:2;10742:9;10733:7;10729:23;10725:32;10722:119;;;10760:79;;:::i;:::-;10722:119;10880:1;10905:53;10950:7;10941:6;10930:9;10926:22;10905:53;:::i;:::-;10895:63;;10851:117;11007:2;11033:50;11075:7;11066:6;11055:9;11051:22;11033:50;:::i;:::-;11023:60;;10978:115;10632:468;;;;;:::o;11106:943::-;11201:6;11209;11217;11225;11274:3;11262:9;11253:7;11249:23;11245:33;11242:120;;;11281:79;;:::i;:::-;11242:120;11401:1;11426:53;11471:7;11462:6;11451:9;11447:22;11426:53;:::i;:::-;11416:63;;11372:117;11528:2;11554:53;11599:7;11590:6;11579:9;11575:22;11554:53;:::i;:::-;11544:63;;11499:118;11656:2;11682:53;11727:7;11718:6;11707:9;11703:22;11682:53;:::i;:::-;11672:63;;11627:118;11812:2;11801:9;11797:18;11784:32;11843:18;11835:6;11832:30;11829:117;;;11865:79;;:::i;:::-;11829:117;11970:62;12024:7;12015:6;12004:9;12000:22;11970:62;:::i;:::-;11960:72;;11755:287;11106:943;;;;;;;:::o;12055:474::-;12123:6;12131;12180:2;12168:9;12159:7;12155:23;12151:32;12148:119;;;12186:79;;:::i;:::-;12148:119;12306:1;12331:53;12376:7;12367:6;12356:9;12352:22;12331:53;:::i;:::-;12321:63;;12277:117;12433:2;12459:53;12504:7;12495:6;12484:9;12480:22;12459:53;:::i;:::-;12449:63;;12404:118;12055:474;;;;;:::o;12535:180::-;12583:77;12580:1;12573:88;12680:4;12677:1;12670:15;12704:4;12701:1;12694:15;12721:320;12765:6;12802:1;12796:4;12792:12;12782:22;;12849:1;12843:4;12839:12;12870:18;12860:81;;12926:4;12918:6;12914:17;12904:27;;12860:81;12988:2;12980:6;12977:14;12957:18;12954:38;12951:84;;13007:18;;:::i;:::-;12951:84;12772:269;12721:320;;;:::o;13047:442::-;13196:4;13234:2;13223:9;13219:18;13211:26;;13247:71;13315:1;13304:9;13300:17;13291:6;13247:71;:::i;:::-;13328:72;13396:2;13385:9;13381:18;13372:6;13328:72;:::i;:::-;13410;13478:2;13467:9;13463:18;13454:6;13410:72;:::i;:::-;13047:442;;;;;;:::o;13495:94::-;13528:8;13576:5;13572:2;13568:14;13547:35;;13495:94;;;:::o;13595:::-;13634:7;13663:20;13677:5;13663:20;:::i;:::-;13652:31;;13595:94;;;:::o;13695:100::-;13734:7;13763:26;13783:5;13763:26;:::i;:::-;13752:37;;13695:100;;;:::o;13801:157::-;13906:45;13926:24;13944:5;13926:24;:::i;:::-;13906:45;:::i;:::-;13901:3;13894:58;13801:157;;:::o;13964:79::-;14003:7;14032:5;14021:16;;13964:79;;;:::o;14049:157::-;14154:45;14174:24;14192:5;14174:24;:::i;:::-;14154:45;:::i;:::-;14149:3;14142:58;14049:157;;:::o;14212:397::-;14352:3;14367:75;14438:3;14429:6;14367:75;:::i;:::-;14467:2;14462:3;14458:12;14451:19;;14480:75;14551:3;14542:6;14480:75;:::i;:::-;14580:2;14575:3;14571:12;14564:19;;14600:3;14593:10;;14212:397;;;;;:::o;14615:167::-;14755:19;14751:1;14743:6;14739:14;14732:43;14615:167;:::o;14788:366::-;14930:3;14951:67;15015:2;15010:3;14951:67;:::i;:::-;14944:74;;15027:93;15116:3;15027:93;:::i;:::-;15145:2;15140:3;15136:12;15129:19;;14788:366;;;:::o;15160:419::-;15326:4;15364:2;15353:9;15349:18;15341:26;;15413:9;15407:4;15403:20;15399:1;15388:9;15384:17;15377:47;15441:131;15567:4;15441:131;:::i;:::-;15433:139;;15160:419;;;:::o;15585:165::-;15725:17;15721:1;15713:6;15709:14;15702:41;15585:165;:::o;15756:366::-;15898:3;15919:67;15983:2;15978:3;15919:67;:::i;:::-;15912:74;;15995:93;16084:3;15995:93;:::i;:::-;16113:2;16108:3;16104:12;16097:19;;15756:366;;;:::o;16128:419::-;16294:4;16332:2;16321:9;16317:18;16309:26;;16381:9;16375:4;16371:20;16367:1;16356:9;16352:17;16345:47;16409:131;16535:4;16409:131;:::i;:::-;16401:139;;16128:419;;;:::o;16553:148::-;16655:11;16692:3;16677:18;;16553:148;;;;:::o;16707:390::-;16813:3;16841:39;16874:5;16841:39;:::i;:::-;16896:89;16978:6;16973:3;16896:89;:::i;:::-;16889:96;;16994:65;17052:6;17047:3;17040:4;17033:5;17029:16;16994:65;:::i;:::-;17084:6;17079:3;17075:16;17068:23;;16817:280;16707:390;;;;:::o;17103:435::-;17283:3;17305:95;17396:3;17387:6;17305:95;:::i;:::-;17298:102;;17417:95;17508:3;17499:6;17417:95;:::i;:::-;17410:102;;17529:3;17522:10;;17103:435;;;;;:::o;17544:98::-;17595:6;17629:5;17623:12;17613:22;;17544:98;;;:::o;17648:168::-;17731:11;17765:6;17760:3;17753:19;17805:4;17800:3;17796:14;17781:29;;17648:168;;;;:::o;17822:373::-;17908:3;17936:38;17968:5;17936:38;:::i;:::-;17990:70;18053:6;18048:3;17990:70;:::i;:::-;17983:77;;18069:65;18127:6;18122:3;18115:4;18108:5;18104:16;18069:65;:::i;:::-;18159:29;18181:6;18159:29;:::i;:::-;18154:3;18150:39;18143:46;;17912:283;17822:373;;;;:::o;18201:640::-;18396:4;18434:3;18423:9;18419:19;18411:27;;18448:71;18516:1;18505:9;18501:17;18492:6;18448:71;:::i;:::-;18529:72;18597:2;18586:9;18582:18;18573:6;18529:72;:::i;:::-;18611;18679:2;18668:9;18664:18;18655:6;18611:72;:::i;:::-;18730:9;18724:4;18720:20;18715:2;18704:9;18700:18;18693:48;18758:76;18829:4;18820:6;18758:76;:::i;:::-;18750:84;;18201:640;;;;;;;:::o;18847:141::-;18903:5;18934:6;18928:13;18919:22;;18950:32;18976:5;18950:32;:::i;:::-;18847:141;;;;:::o;18994:349::-;19063:6;19112:2;19100:9;19091:7;19087:23;19083:32;19080:119;;;19118:79;;:::i;:::-;19080:119;19238:1;19263:63;19318:7;19309:6;19298:9;19294:22;19263:63;:::i;:::-;19253:73;;19209:127;18994:349;;;;:::o;19349:180::-;19397:77;19394:1;19387:88;19494:4;19491:1;19484:15;19518:4;19515:1;19508:15;19535:332;19656:4;19694:2;19683:9;19679:18;19671:26;;19707:71;19775:1;19764:9;19760:17;19751:6;19707:71;:::i;:::-;19788:72;19856:2;19845:9;19841:18;19832:6;19788:72;:::i;:::-;19535:332;;;;;:::o;19873:180::-;19921:77;19918:1;19911:88;20018:4;20015:1;20008:15;20042:4;20039:1;20032:15;20059:86;20094:7;20134:4;20127:5;20123:16;20112:27;;20059:86;;;:::o;20151:112::-;20234:22;20250:5;20234:22;:::i;:::-;20229:3;20222:35;20151:112;;:::o;20269:545::-;20442:4;20480:3;20469:9;20465:19;20457:27;;20494:71;20562:1;20551:9;20547:17;20538:6;20494:71;:::i;:::-;20575:68;20639:2;20628:9;20624:18;20615:6;20575:68;:::i;:::-;20653:72;20721:2;20710:9;20706:18;20697:6;20653:72;:::i;:::-;20735;20803:2;20792:9;20788:18;20779:6;20735:72;:::i;:::-;20269:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1944400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getMessageHash(address,uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,bytes)": "infinite",
								"mintedAddress(address)": "2856",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"signer()": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"verify(bytes32,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 425,
									"end": 554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 505,
									"end": 510,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 512,
									"end": 519,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 547,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 531,
									"end": 547,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 425,
									"end": 554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 14
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3402,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3386,
									"end": 3403,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3380,
									"end": 3404,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3431,
									"end": 3449,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3420,
									"end": 3450,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3453,
									"end": 3532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "tag",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3624,
									"end": 3631,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3615,
									"end": 3621,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3558,
									"end": 3632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3351,
									"end": 3642,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3691,
									"end": 3700,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3687,
									"end": 3705,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3681,
									"end": 3706,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3733,
									"end": 3751,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3731,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3722,
									"end": 3752,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3755,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 3926,
									"end": 3933,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 3902,
									"end": 3924,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3860,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3652,
									"end": 3944,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4009,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3954,
									"end": 4083,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4187,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4176,
									"end": 4188,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4096,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4249,
									"end": 4326,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4246,
									"end": 4247,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 4327,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4346,
									"end": 4350,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 4336,
									"end": 4351,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 4367,
									"end": 4368,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4375,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4437,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4515,
									"end": 4516,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4505,
									"end": 4517,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4592,
									"end": 4596,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 4584,
									"end": 4590,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4580,
									"end": 4597,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4656,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4623,
									"end": 4641,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4620,
									"end": 4658,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 4673,
									"end": 4691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4438,
									"end": 4707,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4387,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4788,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4805,
									"end": 4806,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4798,
									"end": 4812,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4842,
									"end": 4846,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4713,
									"end": 4854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4944,
									"end": 4946,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4932,
									"end": 4937,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4924,
									"end": 4947,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4860,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5003,
									"end": 5011,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5053,
									"end": 5058,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5141,
									"end": 5147,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5175,
									"end": 5193,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 5244,
									"end": 5310,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5214,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 5362,
									"end": 5370,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5351,
									"end": 5360,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5400,
									"end": 5409,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5393,
									"end": 5398,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5453,
									"end": 5457,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5443,
									"end": 5451,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5439,
									"end": 5458,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5432,
									"end": 5437,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5429,
									"end": 5459,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5508,
									"end": 5515,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5542,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5471,
									"end": 5548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5582,
									"end": 5585,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5603,
									"end": 5608,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5554,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5730,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 5721,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5703,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5620,
									"end": 5762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 5837,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5768,
									"end": 5843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 5990,
									"end": 5997,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 5959,
									"end": 5998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 6093,
									"end": 6109,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 6069,
									"end": 6110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6054,
									"end": 6058,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6048,
									"end": 6059,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 6020,
									"end": 6111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6014,
									"end": 6018,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6007,
									"end": 6112,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5925,
									"end": 6118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5849,
									"end": 6118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6169,
									"end": 6172,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6124,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 6280,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 6379,
									"end": 6385,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6371,
									"end": 6377,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6321,
									"end": 6386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6256,
									"end": 6392,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6203,
									"end": 6392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6475,
									"end": 6478,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6468,
									"end": 6473,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6465,
									"end": 6479,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 6566,
									"end": 6567,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 6529,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "tag",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6502,
									"end": 6503,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6495,
									"end": 6500,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6491,
									"end": 6504,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6398,
									"end": 6584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6691,
									"end": 6693,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6686,
									"end": 6689,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6694,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6757,
									"end": 6762,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 6725,
									"end": 6763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 6827,
									"end": 6837,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 6809,
									"end": 6838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "tag",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6799,
									"end": 6807,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6795,
									"end": 6839,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6992,
									"end": 6994,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6980,
									"end": 6990,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6977,
									"end": 6995,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7013,
									"end": 7021,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "tag",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 7110,
									"end": 7113,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 7092,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7082,
									"end": 7090,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7078,
									"end": 7115,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7065,
									"end": 7076,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 7036,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6590,
									"end": 7133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7193,
									"end": 7201,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7248,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7233,
									"end": 7249,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7139,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 7387,
									"end": 7388,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7389,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 7375,
									"end": 7380,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7372,
									"end": 7373,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 7368,
									"end": 7381,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 7339,
									"end": 7390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7335,
									"end": 7391,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 7420,
									"end": 7424,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 7414,
									"end": 7418,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7410,
									"end": 7425,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7313,
									"end": 7431,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7512,
									"end": 7516,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7683,
									"end": 7686,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7677,
									"end": 7681,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 7658,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7717,
									"end": 7718,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 7713,
									"end": 7724,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7704,
									"end": 7725,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 7886,
									"end": 7889,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 7853,
									"end": 7890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "tag",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7955,
									"end": 7973,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7944,
									"end": 7974,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 7977,
									"end": 7995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "tag",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "tag",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 8053,
									"end": 8057,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8047,
									"end": 8058,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 8021,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "tag",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 8166,
									"end": 8172,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8158,
									"end": 8164,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 8106,
									"end": 8173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "tag",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8200,
									"end": 8201,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8228,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8256,
									"end": 8258,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8245,
									"end": 8259,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 8273,
									"end": 8274,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8930,
									"end": 8931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8947,
									"end": 8953,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 8987,
									"end": 9006,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8981,
									"end": 9007,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "tag",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 9107,
									"end": 9113,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 9100,
									"end": 9105,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 9047,
									"end": 9114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "tag",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 9034,
									"end": 9115,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8903,
									"end": 9125,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "tag",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8316,
									"end": 8325,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 8308,
									"end": 8314,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8304,
									"end": 8326,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 8354,
									"end": 8391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "tag",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8441,
									"end": 8448,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8438,
									"end": 8439,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8435,
									"end": 8449,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8520,
									"end": 8529,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8515,
									"end": 8518,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8511,
									"end": 8530,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8505,
									"end": 8531,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8497,
									"end": 8503,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8490,
									"end": 8532,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8571,
									"end": 8572,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8563,
									"end": 8569,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8618,
									"end": 8620,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8603,
									"end": 8621,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8464,
									"end": 8468,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8457,
									"end": 8469,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8654,
									"end": 8661,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8651,
									"end": 8670,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "154"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8721,
									"end": 8730,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8716,
									"end": 8719,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8712,
									"end": 8731,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8706,
									"end": 8732,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 8806,
									"end": 8810,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8794,
									"end": 8811,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 8764,
									"end": 8812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "tag",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8749,
									"end": 8813,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8671,
									"end": 8827,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "tag",
									"source": 14,
									"value": "154"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8873,
									"end": 8874,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8869,
									"end": 8870,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8857,
									"end": 8871,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8853,
									"end": 8875,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8847,
									"end": 8851,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8840,
									"end": 8876,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "tag",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7736,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "3219"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 1878,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220065f81b4f244fdc43a07a9c6c414be5fdf5059dd08436d747577a63a025e88dc64736f6c634300081a0033",
									".code": [
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "630303C6"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "C87B56DD"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "630303C6"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "6352211E"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "94D008EF"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "238AC933"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "238AC933"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "258AE582"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "512C91DF"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "81812FC"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 1878,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 292,
											"end": 323,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1670,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1670,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1670,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1451,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1451,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1451,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 344,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 344,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 344,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 597,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 597,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 292,
											"end": 323,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "3219"
										},
										{
											"begin": 292,
											"end": 323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 292,
											"end": 323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1795,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1812,
											"end": 1820,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1798,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1833,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1798,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1869,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "3219"
										},
										{
											"begin": 1850,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1869,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1567,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1604,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1604,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1604,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 344,
											"end": 390,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 344,
											"end": 390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 691,
											"end": 707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 725,
											"end": 733,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 735,
											"end": 743,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 710,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 710,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 710,
											"end": 744,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 710,
											"end": 744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 691,
											"end": 744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 691,
											"end": 744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 791,
											"end": 820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 863,
											"end": 871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 823,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 823,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 823,
											"end": 872,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 823,
											"end": 872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 791,
											"end": 872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 791,
											"end": 872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 891,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 898,
											"end": 919,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 921,
											"end": 931,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 891,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 891,
											"end": 932,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 883,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 954,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 883,
											"end": 954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1015,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 984,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 984,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1074,
											"end": 1082,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1084,
											"end": 1092,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 1068,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1140,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1110,
											"end": 1123,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 681,
											"end": 1172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 681,
											"end": 1172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3855,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3859,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3908,
											"end": 3913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3896,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3924,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3896,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1682,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1222,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1298,
											"end": 1312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1437,
											"name": "PUSH",
											"source": 8,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 1397,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1503,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 1492,
											"end": 1517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1601,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1602,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2581,
											"end": 2590,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2704,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2739,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2850,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2860,
											"end": 2869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2877,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 7,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 7,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 7,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5881,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 5764,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5875,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 6004,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 5887,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 5994,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5986,
											"end": 5998,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6190,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6010,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6058,
											"end": 6135,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6136,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6159,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 6152,
											"end": 6153,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6145,
											"end": 6160,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6176,
											"end": 6177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6184,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6196,
											"end": 6477,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 6196,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6301,
											"end": 6305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6279,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6267,
											"end": 6307,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6409,
											"end": 6415,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6394,
											"end": 6416,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6371,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6392,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6355,
											"end": 6417,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6440,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6352,
											"end": 6440,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6420,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6440,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6352,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6460,
											"end": 6470,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6239,
											"end": 6477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6196,
											"end": 6477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6196,
											"end": 6477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6196,
											"end": 6477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6612,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 6483,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6544,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 6544,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6544,
											"end": 6564,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6544,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6573,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6593,
											"end": 6599,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6573,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 6573,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6573,
											"end": 6606,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 6573,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6612,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6612,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6618,
											"end": 6925,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 6618,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6679,
											"end": 6683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6787,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6761,
											"end": 6767,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6758,
											"end": 6788,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6755,
											"end": 6811,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6755,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6755,
											"end": 6811,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6791,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6755,
											"end": 6811,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6755,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6829,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 6851,
											"end": 6857,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6829,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6829,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6829,
											"end": 6858,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 6829,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6821,
											"end": 6858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6821,
											"end": 6858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6913,
											"end": 6917,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6907,
											"end": 6911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6903,
											"end": 6918,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6618,
											"end": 6925,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6618,
											"end": 6925,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6618,
											"end": 6925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6618,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7079,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 6931,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7035,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7024,
											"end": 7027,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7019,
											"end": 7022,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7036,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 7070,
											"end": 7071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7052,
											"end": 7068,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7045,
											"end": 7072,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7079,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7079,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7079,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7244,
											"end": 7250,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 7203,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7187,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7187,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7187,
											"end": 7252,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 7187,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7178,
											"end": 7252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7178,
											"end": 7252,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7275,
											"end": 7281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7261,
											"end": 7282,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7313,
											"end": 7317,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7302,
											"end": 7318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7337,
											"end": 7340,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7330,
											"end": 7355,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 7358,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7358,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7437,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 7358,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7448,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 7495,
											"end": 7501,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7490,
											"end": 7493,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7485,
											"end": 7488,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7448,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 7448,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7448,
											"end": 7502,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 7448,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7168,
											"end": 7508,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7085,
											"end": 7508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7527,
											"end": 7865,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 7527,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7582,
											"end": 7587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7634,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7624,
											"end": 7628,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7608,
											"end": 7635,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7598,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 7598,
											"end": 7720,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7639,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 7639,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 7639,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7639,
											"end": 7718,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 7639,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7598,
											"end": 7720,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 7598,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7756,
											"end": 7762,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7743,
											"end": 7763,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 7855,
											"end": 7858,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7847,
											"end": 7853,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7840,
											"end": 7844,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7832,
											"end": 7838,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 7781,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7859,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 7781,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7772,
											"end": 7859,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7772,
											"end": 7859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7588,
											"end": 7865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7527,
											"end": 7865,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7527,
											"end": 7865,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7527,
											"end": 7865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7527,
											"end": 7865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7527,
											"end": 7865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7962,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8005,
											"end": 8007,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7984,
											"end": 7991,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7980,
											"end": 8003,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7976,
											"end": 8008,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8092,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 7973,
											"end": 8092,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8011,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8011,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 8011,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8011,
											"end": 8090,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8011,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8092,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 7973,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8201,
											"end": 8208,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8192,
											"end": 8198,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8181,
											"end": 8190,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 8156,
											"end": 8209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8146,
											"end": 8209,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8146,
											"end": 8209,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8102,
											"end": 8219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8286,
											"end": 8288,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8309,
											"end": 8315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8306,
											"end": 8336,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8339,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 8339,
											"end": 8418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8418,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8339,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8444,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8498,
											"end": 8505,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8478,
											"end": 8487,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8474,
											"end": 8496,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8444,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 8444,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8444,
											"end": 8506,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8444,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8434,
											"end": 8506,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8434,
											"end": 8506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8229,
											"end": 8516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8647,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 8529,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 8616,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8611,
											"end": 8614,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8604,
											"end": 8641,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8875,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 8653,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8786,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 8865,
											"end": 8866,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8854,
											"end": 8863,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8850,
											"end": 8867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 8797,
											"end": 8868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8868,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 8797,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8875,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8875,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8881,
											"end": 9210,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 8881,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8989,
											"end": 8991,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8977,
											"end": 8986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8964,
											"end": 8987,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8960,
											"end": 8992,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 8995,
											"end": 9074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9115,
											"end": 9116,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9185,
											"end": 9192,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9176,
											"end": 9182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9165,
											"end": 9174,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9161,
											"end": 9183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9140,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 9140,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9140,
											"end": 9193,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9140,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9130,
											"end": 9193,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9130,
											"end": 9193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9086,
											"end": 9203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8881,
											"end": 9210,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8881,
											"end": 9210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8881,
											"end": 9210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8881,
											"end": 9210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8881,
											"end": 9210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9216,
											"end": 9334,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 9216,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9303,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9321,
											"end": 9326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9303,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 9303,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9303,
											"end": 9327,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9303,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9298,
											"end": 9301,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9291,
											"end": 9328,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9216,
											"end": 9334,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9216,
											"end": 9334,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9216,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9562,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 9340,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9473,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9469,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9448,
											"end": 9474,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9448,
											"end": 9474,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9484,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9550,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 9554,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9528,
											"end": 9534,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9484,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 9484,
											"end": 9555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9484,
											"end": 9555,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9484,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9562,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9668,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9698,
											"end": 9705,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9694,
											"end": 9717,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9690,
											"end": 9722,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 9725,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 9912,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9895,
											"end": 9904,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9913,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 9870,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9860,
											"end": 9923,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9860,
											"end": 9923,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 10043,
											"end": 10050,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10023,
											"end": 10032,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10019,
											"end": 10041,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 9998,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9988,
											"end": 10051,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9988,
											"end": 10051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9943,
											"end": 10061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10130,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10117,
											"end": 10126,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10100,
											"end": 10132,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10157,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10148,
											"end": 10178,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10181,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 10181,
											"end": 10260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 10260,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10181,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10340,
											"end": 10347,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10331,
											"end": 10337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10320,
											"end": 10329,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10316,
											"end": 10338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10286,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10348,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10286,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10276,
											"end": 10348,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10276,
											"end": 10348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10071,
											"end": 10358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 10365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10371,
											"end": 10487,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 10371,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10456,
											"end": 10461,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 10441,
											"end": 10462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10462,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10441,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10434,
											"end": 10439,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10431,
											"end": 10463,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10421,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10421,
											"end": 10481,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10475,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10479,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10421,
											"end": 10481,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10421,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10371,
											"end": 10487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10371,
											"end": 10487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10493,
											"end": 10626,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 10493,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10561,
											"end": 10581,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10552,
											"end": 10581,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10552,
											"end": 10581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10590,
											"end": 10620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10590,
											"end": 10620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 10590,
											"end": 10620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10590,
											"end": 10620,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 10590,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10493,
											"end": 10626,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10493,
											"end": 10626,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10493,
											"end": 10626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10493,
											"end": 10626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10493,
											"end": 10626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10754,
											"end": 10756,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10742,
											"end": 10751,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10733,
											"end": 10740,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10752,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10725,
											"end": 10757,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10722,
											"end": 10841,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10722,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 10722,
											"end": 10841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10760,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 10760,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 10760,
											"end": 10839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10760,
											"end": 10839,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 10760,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10722,
											"end": 10841,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 10722,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10880,
											"end": 10881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 10950,
											"end": 10957,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10941,
											"end": 10947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 10939,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10926,
											"end": 10948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 10905,
											"end": 10958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10958,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 10905,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10851,
											"end": 10968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11033,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 11075,
											"end": 11082,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11055,
											"end": 11064,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11073,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11033,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 11033,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11033,
											"end": 11083,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 11033,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11023,
											"end": 11083,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11023,
											"end": 11083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10978,
											"end": 11093,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 11100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11201,
											"end": 11207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11209,
											"end": 11215,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11231,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11274,
											"end": 11277,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11262,
											"end": 11271,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11253,
											"end": 11260,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11272,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11245,
											"end": 11278,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11362,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11242,
											"end": 11362,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11281,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 11281,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11281,
											"end": 11360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11281,
											"end": 11360,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 11281,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11362,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11242,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11401,
											"end": 11402,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 11471,
											"end": 11478,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11462,
											"end": 11468,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11451,
											"end": 11460,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11447,
											"end": 11469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11426,
											"end": 11479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 11426,
											"end": 11479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11426,
											"end": 11479,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 11426,
											"end": 11479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11416,
											"end": 11479,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11416,
											"end": 11479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11372,
											"end": 11489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11528,
											"end": 11530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 11599,
											"end": 11606,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11590,
											"end": 11596,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11579,
											"end": 11588,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11575,
											"end": 11597,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 11554,
											"end": 11607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11544,
											"end": 11607,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11544,
											"end": 11607,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11499,
											"end": 11617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11656,
											"end": 11658,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 11727,
											"end": 11734,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11718,
											"end": 11724,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11707,
											"end": 11716,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11703,
											"end": 11725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11682,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 11682,
											"end": 11735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11682,
											"end": 11735,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 11682,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11672,
											"end": 11735,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11672,
											"end": 11735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11627,
											"end": 11745,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11812,
											"end": 11814,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11797,
											"end": 11815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11784,
											"end": 11816,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11835,
											"end": 11841,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11832,
											"end": 11862,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11829,
											"end": 11946,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11829,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 11829,
											"end": 11946,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11865,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 11865,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 11865,
											"end": 11944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11865,
											"end": 11944,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 11865,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11829,
											"end": 11946,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 11829,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11970,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 12024,
											"end": 12031,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12015,
											"end": 12021,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12000,
											"end": 12022,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11970,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 11970,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11970,
											"end": 12032,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 11970,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11960,
											"end": 12032,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11960,
											"end": 12032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11755,
											"end": 12042,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11106,
											"end": 12049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12131,
											"end": 12137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12159,
											"end": 12166,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12151,
											"end": 12183,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12148,
											"end": 12267,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12148,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 12148,
											"end": 12267,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12186,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 12186,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 12186,
											"end": 12265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12186,
											"end": 12265,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 12186,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12148,
											"end": 12267,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 12148,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12306,
											"end": 12307,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12331,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12376,
											"end": 12383,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12356,
											"end": 12365,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12352,
											"end": 12374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12331,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 12331,
											"end": 12384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12331,
											"end": 12384,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12331,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12384,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12277,
											"end": 12394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12433,
											"end": 12435,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12459,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 12504,
											"end": 12511,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12484,
											"end": 12493,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12480,
											"end": 12502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 12459,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12512,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 12459,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12449,
											"end": 12512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12449,
											"end": 12512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12404,
											"end": 12522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12055,
											"end": 12529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12535,
											"end": 12715,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12535,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12660,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12580,
											"end": 12581,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12573,
											"end": 12661,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12680,
											"end": 12684,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12670,
											"end": 12685,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12704,
											"end": 12708,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12701,
											"end": 12702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12694,
											"end": 12709,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 13041,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 12721,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12765,
											"end": 12771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12803,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12792,
											"end": 12804,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 12804,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 12804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12850,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12851,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12860,
											"end": 12941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 12860,
											"end": 12941,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12926,
											"end": 12930,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 12918,
											"end": 12924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12904,
											"end": 12931,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12904,
											"end": 12931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12860,
											"end": 12941,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 12860,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12977,
											"end": 12991,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12957,
											"end": 12975,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12954,
											"end": 12992,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 12951,
											"end": 13035,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 13007,
											"end": 13025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 13035,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 12951,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12772,
											"end": 13041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 13041,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 13041,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 13041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 13041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13196,
											"end": 13200,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13236,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13223,
											"end": 13232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13219,
											"end": 13237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13211,
											"end": 13237,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13211,
											"end": 13237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 13315,
											"end": 13316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13304,
											"end": 13313,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13300,
											"end": 13317,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13291,
											"end": 13297,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 13247,
											"end": 13318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13318,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 13247,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 13396,
											"end": 13398,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13385,
											"end": 13394,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13372,
											"end": 13378,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 13328,
											"end": 13400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13410,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 13478,
											"end": 13480,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13467,
											"end": 13476,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13454,
											"end": 13460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13410,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 13410,
											"end": 13482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13410,
											"end": 13482,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 13410,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13495,
											"end": 13589,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 13495,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13536,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13576,
											"end": 13581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13568,
											"end": 13582,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13547,
											"end": 13582,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13547,
											"end": 13582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13495,
											"end": 13589,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13495,
											"end": 13589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13495,
											"end": 13589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13495,
											"end": 13589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13595,
											"end": 13689,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 13595,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13634,
											"end": 13641,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13663,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 13677,
											"end": 13682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13663,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 13663,
											"end": 13683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13663,
											"end": 13683,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 13663,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13652,
											"end": 13683,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13652,
											"end": 13683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13595,
											"end": 13689,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13595,
											"end": 13689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13595,
											"end": 13689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13595,
											"end": 13689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13795,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 13695,
											"end": 13795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13734,
											"end": 13741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13763,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 13783,
											"end": 13788,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13763,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 13763,
											"end": 13789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13763,
											"end": 13789,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 13763,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13752,
											"end": 13789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13752,
											"end": 13789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13795,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13795,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13801,
											"end": 13958,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 13801,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13906,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 13944,
											"end": 13949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 13926,
											"end": 13950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13906,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 13906,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13906,
											"end": 13951,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 13906,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13901,
											"end": 13904,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13894,
											"end": 13952,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13801,
											"end": 13958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13801,
											"end": 13958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13801,
											"end": 13958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14043,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 13964,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14003,
											"end": 14010,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14032,
											"end": 14037,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14021,
											"end": 14037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14021,
											"end": 14037,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14043,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14049,
											"end": 14206,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 14049,
											"end": 14206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 14174,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 14192,
											"end": 14197,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14174,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 14174,
											"end": 14198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14174,
											"end": 14198,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 14174,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 14154,
											"end": 14199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14199,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 14154,
											"end": 14199,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14149,
											"end": 14152,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14142,
											"end": 14200,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14049,
											"end": 14206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14049,
											"end": 14206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14049,
											"end": 14206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14352,
											"end": 14355,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 14438,
											"end": 14441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14429,
											"end": 14435,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14367,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 14367,
											"end": 14442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14367,
											"end": 14442,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 14367,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14467,
											"end": 14469,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 14462,
											"end": 14465,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14458,
											"end": 14470,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14451,
											"end": 14470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14451,
											"end": 14470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14480,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 14551,
											"end": 14554,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14542,
											"end": 14548,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14480,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 14480,
											"end": 14555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14480,
											"end": 14555,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 14480,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14580,
											"end": 14582,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14575,
											"end": 14578,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14600,
											"end": 14603,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14593,
											"end": 14603,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14593,
											"end": 14603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14615,
											"end": 14782,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 14615,
											"end": 14782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "PUSH",
											"source": 14,
											"value": "496E76616C6964207369676E6174757265000000000000000000000000000000"
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14743,
											"end": 14749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14739,
											"end": 14753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14732,
											"end": 14775,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14615,
											"end": 14782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14615,
											"end": 14782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14930,
											"end": 14933,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 15015,
											"end": 15017,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 15010,
											"end": 15013,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 14951,
											"end": 15018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14944,
											"end": 15018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14944,
											"end": 15018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 15116,
											"end": 15119,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 15027,
											"end": 15120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15145,
											"end": 15147,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15140,
											"end": 15143,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15136,
											"end": 15148,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15148,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14788,
											"end": 15154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15579,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 15160,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15326,
											"end": 15330,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15364,
											"end": 15366,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15353,
											"end": 15362,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15349,
											"end": 15367,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15341,
											"end": 15367,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15341,
											"end": 15367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15413,
											"end": 15422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15407,
											"end": 15411,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15403,
											"end": 15423,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15399,
											"end": 15400,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15388,
											"end": 15397,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15384,
											"end": 15401,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15377,
											"end": 15424,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15441,
											"end": 15572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 15567,
											"end": 15571,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15441,
											"end": 15572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 15441,
											"end": 15572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15441,
											"end": 15572,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 15441,
											"end": 15572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15433,
											"end": 15572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15433,
											"end": 15572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15579,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15585,
											"end": 15750,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 15585,
											"end": 15750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15725,
											"end": 15742,
											"name": "PUSH",
											"source": 14,
											"value": "416C7265616479206D696E746564210000000000000000000000000000000000"
										},
										{
											"begin": 15721,
											"end": 15722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15713,
											"end": 15719,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15709,
											"end": 15723,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15702,
											"end": 15743,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15585,
											"end": 15750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15585,
											"end": 15750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15756,
											"end": 16122,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 15756,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15898,
											"end": 15901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15919,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 15983,
											"end": 15985,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 15978,
											"end": 15981,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15919,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 15919,
											"end": 15986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15919,
											"end": 15986,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 15919,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15912,
											"end": 15986,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15912,
											"end": 15986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15995,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 16084,
											"end": 16087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15995,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 15995,
											"end": 16088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15995,
											"end": 16088,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 15995,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16113,
											"end": 16115,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16108,
											"end": 16111,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16104,
											"end": 16116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16097,
											"end": 16116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16097,
											"end": 16116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15756,
											"end": 16122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15756,
											"end": 16122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15756,
											"end": 16122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15756,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16128,
											"end": 16547,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 16128,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16298,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16332,
											"end": 16334,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16321,
											"end": 16330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16309,
											"end": 16335,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16309,
											"end": 16335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16381,
											"end": 16390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16367,
											"end": 16368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16356,
											"end": 16365,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16352,
											"end": 16369,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16345,
											"end": 16392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16535,
											"end": 16539,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 16409,
											"end": 16540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16540,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16409,
											"end": 16540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16401,
											"end": 16540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16401,
											"end": 16540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16128,
											"end": 16547,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16128,
											"end": 16547,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16128,
											"end": 16547,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16128,
											"end": 16547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16553,
											"end": 16701,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 16553,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16655,
											"end": 16666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16692,
											"end": 16695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16553,
											"end": 16701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16553,
											"end": 16701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16553,
											"end": 16701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16553,
											"end": 16701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16553,
											"end": 16701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 17097,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 16707,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16813,
											"end": 16816,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16841,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16874,
											"end": 16879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16841,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 16841,
											"end": 16880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16841,
											"end": 16880,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16841,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16896,
											"end": 16985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 16978,
											"end": 16984,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16973,
											"end": 16976,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16896,
											"end": 16985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 16896,
											"end": 16985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16896,
											"end": 16985,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 16896,
											"end": 16985,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16889,
											"end": 16985,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16889,
											"end": 16985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16994,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 17052,
											"end": 17058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17047,
											"end": 17050,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17040,
											"end": 17044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17033,
											"end": 17038,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17029,
											"end": 17045,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16994,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 16994,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16994,
											"end": 17059,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 16994,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17084,
											"end": 17090,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17079,
											"end": 17082,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17075,
											"end": 17091,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17068,
											"end": 17091,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17068,
											"end": 17091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16817,
											"end": 17097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 17097,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 17097,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 17097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 17097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 17097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17283,
											"end": 17286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17305,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 17396,
											"end": 17399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17387,
											"end": 17393,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17305,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 17305,
											"end": 17400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17305,
											"end": 17400,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 17305,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17400,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17417,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 17508,
											"end": 17511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17499,
											"end": 17505,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17417,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 17417,
											"end": 17512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17417,
											"end": 17512,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 17417,
											"end": 17512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17410,
											"end": 17512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17410,
											"end": 17512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17529,
											"end": 17532,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17522,
											"end": 17532,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17522,
											"end": 17532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17544,
											"end": 17642,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 17544,
											"end": 17642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17595,
											"end": 17601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17629,
											"end": 17634,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17623,
											"end": 17635,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17613,
											"end": 17635,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17613,
											"end": 17635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17544,
											"end": 17642,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17544,
											"end": 17642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17544,
											"end": 17642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17544,
											"end": 17642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17648,
											"end": 17816,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 17648,
											"end": 17816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17731,
											"end": 17742,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17771,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17760,
											"end": 17763,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17753,
											"end": 17772,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17805,
											"end": 17809,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17800,
											"end": 17803,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17796,
											"end": 17810,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17781,
											"end": 17810,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17781,
											"end": 17810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17648,
											"end": 17816,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17648,
											"end": 17816,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17648,
											"end": 17816,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17648,
											"end": 17816,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17648,
											"end": 17816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17822,
											"end": 18195,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 17822,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17908,
											"end": 17911,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17936,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 17968,
											"end": 17973,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17936,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 17936,
											"end": 17974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17936,
											"end": 17974,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 17936,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17990,
											"end": 18060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 18053,
											"end": 18059,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18048,
											"end": 18051,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17990,
											"end": 18060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 17990,
											"end": 18060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17990,
											"end": 18060,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 17990,
											"end": 18060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 18060,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 18060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18069,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 18127,
											"end": 18133,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18122,
											"end": 18125,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18115,
											"end": 18119,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18108,
											"end": 18113,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18104,
											"end": 18120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18069,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 18069,
											"end": 18134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18069,
											"end": 18134,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 18069,
											"end": 18134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18159,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 18181,
											"end": 18187,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18159,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 18159,
											"end": 18188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18159,
											"end": 18188,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 18159,
											"end": 18188,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18154,
											"end": 18157,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18150,
											"end": 18189,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18143,
											"end": 18189,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18143,
											"end": 18189,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17912,
											"end": 18195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17822,
											"end": 18195,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17822,
											"end": 18195,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17822,
											"end": 18195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17822,
											"end": 18195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17822,
											"end": 18195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18396,
											"end": 18400,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18434,
											"end": 18437,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 18423,
											"end": 18432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18419,
											"end": 18438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18411,
											"end": 18438,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18411,
											"end": 18438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18448,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 18516,
											"end": 18517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18501,
											"end": 18518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18492,
											"end": 18498,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 18448,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 18448,
											"end": 18519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18448,
											"end": 18519,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 18448,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 18597,
											"end": 18599,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18586,
											"end": 18595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18582,
											"end": 18600,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18573,
											"end": 18579,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 18529,
											"end": 18601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18601,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 18529,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 18679,
											"end": 18681,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18668,
											"end": 18677,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 18682,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18655,
											"end": 18661,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 18611,
											"end": 18683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18730,
											"end": 18739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18724,
											"end": 18728,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18715,
											"end": 18717,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 18704,
											"end": 18713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18693,
											"end": 18741,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18758,
											"end": 18834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 18829,
											"end": 18833,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 18826,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18758,
											"end": 18834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 18758,
											"end": 18834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18758,
											"end": 18834,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 18758,
											"end": 18834,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18750,
											"end": 18834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18750,
											"end": 18834,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18847,
											"end": 18988,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 18847,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18903,
											"end": 18908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18934,
											"end": 18940,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18928,
											"end": 18941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 18919,
											"end": 18941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18919,
											"end": 18941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18950,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 18976,
											"end": 18981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18950,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 18950,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18950,
											"end": 18982,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 18950,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18847,
											"end": 18988,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18847,
											"end": 18988,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18847,
											"end": 18988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18847,
											"end": 18988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18847,
											"end": 18988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18994,
											"end": 19343,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 18994,
											"end": 19343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19063,
											"end": 19069,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19112,
											"end": 19114,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19100,
											"end": 19109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19091,
											"end": 19098,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19087,
											"end": 19110,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19083,
											"end": 19115,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 19080,
											"end": 19199,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19080,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 19080,
											"end": 19199,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19118,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 19118,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 19118,
											"end": 19197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19118,
											"end": 19197,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 19118,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19080,
											"end": 19199,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 19080,
											"end": 19199,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19238,
											"end": 19239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19263,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 19318,
											"end": 19325,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19309,
											"end": 19315,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19298,
											"end": 19307,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19294,
											"end": 19316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19263,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 19263,
											"end": 19326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19263,
											"end": 19326,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 19263,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19253,
											"end": 19326,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19253,
											"end": 19326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19209,
											"end": 19336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18994,
											"end": 19343,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18994,
											"end": 19343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18994,
											"end": 19343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18994,
											"end": 19343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18994,
											"end": 19343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19349,
											"end": 19529,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 19349,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19397,
											"end": 19474,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19394,
											"end": 19395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19387,
											"end": 19475,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19494,
											"end": 19498,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 19491,
											"end": 19492,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 19484,
											"end": 19499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19518,
											"end": 19522,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 19515,
											"end": 19516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19508,
											"end": 19523,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19656,
											"end": 19660,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19694,
											"end": 19696,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19683,
											"end": 19692,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19679,
											"end": 19697,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19671,
											"end": 19697,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19671,
											"end": 19697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19707,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 19775,
											"end": 19776,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19764,
											"end": 19773,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19760,
											"end": 19777,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19751,
											"end": 19757,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19707,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 19707,
											"end": 19778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19707,
											"end": 19778,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 19707,
											"end": 19778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19788,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 19856,
											"end": 19858,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19845,
											"end": 19854,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19841,
											"end": 19859,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19832,
											"end": 19838,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19788,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 19788,
											"end": 19860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19788,
											"end": 19860,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 19788,
											"end": 19860,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19873,
											"end": 20053,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 19873,
											"end": 20053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19921,
											"end": 19998,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19918,
											"end": 19919,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19911,
											"end": 19999,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20018,
											"end": 20022,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 20015,
											"end": 20016,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 20008,
											"end": 20023,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20042,
											"end": 20046,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 20039,
											"end": 20040,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20032,
											"end": 20047,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 20059,
											"end": 20145,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 20059,
											"end": 20145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20101,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20134,
											"end": 20138,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 20127,
											"end": 20132,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20123,
											"end": 20139,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 20112,
											"end": 20139,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20112,
											"end": 20139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20059,
											"end": 20145,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20059,
											"end": 20145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20059,
											"end": 20145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20059,
											"end": 20145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20151,
											"end": 20263,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 20151,
											"end": 20263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 20250,
											"end": 20255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 20234,
											"end": 20256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20256,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 20234,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20229,
											"end": 20232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20222,
											"end": 20257,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20151,
											"end": 20263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20151,
											"end": 20263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20151,
											"end": 20263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20442,
											"end": 20446,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20480,
											"end": 20483,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 20469,
											"end": 20478,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20465,
											"end": 20484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20457,
											"end": 20484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20457,
											"end": 20484,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20494,
											"end": 20565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 20562,
											"end": 20563,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20551,
											"end": 20560,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20547,
											"end": 20564,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20538,
											"end": 20544,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20494,
											"end": 20565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 20494,
											"end": 20565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20494,
											"end": 20565,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 20494,
											"end": 20565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20575,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 20639,
											"end": 20641,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20628,
											"end": 20637,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20624,
											"end": 20642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20615,
											"end": 20621,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20575,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 20575,
											"end": 20643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20575,
											"end": 20643,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 20575,
											"end": 20643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20653,
											"end": 20725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 20721,
											"end": 20723,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20710,
											"end": 20719,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20706,
											"end": 20724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20697,
											"end": 20703,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20653,
											"end": 20725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 20653,
											"end": 20725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20653,
											"end": 20725,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 20653,
											"end": 20725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20735,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 20803,
											"end": 20805,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20792,
											"end": 20801,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20788,
											"end": 20806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20779,
											"end": 20785,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20735,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 20735,
											"end": 20807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20735,
											"end": 20807,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 20735,
											"end": 20807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20269,
											"end": 20814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/l2/t1/SignatureNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getMessageHash(address,uint256)": "512c91df",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,bytes)": "94d008ef",
							"mintedAddress(address)": "630303c6",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"signer()": "238ac933",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"verify(bytes32,bytes)": "258ae582"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_msgHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/l2/t1/SignatureNFT.sol\":\"SignatureNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/l2/t1/SignatureNFT.sol\":{\"keccak256\":\"0x0fa2be32439c71a53446a4c1221c21db48f00ef652c0bcd76dec3fc0aa5420d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53654048d5681783df11cabe7a6faeb4e58202eeac331ae53001360a9853e89\",\"dweb:/ipfs/QmdKZsQFXHXESSrPJSqdToPNxYJ1SnRyyXxEw4zvThRyqY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 3223,
								"contract": "contracts/l2/t1/SignatureNFT.sol:SignatureNFT",
								"label": "mintedAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							2039
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							2051
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1593
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1339,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1338,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1594,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1593,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 2040,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2039,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1338,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2039,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								2039,
								2051,
								1338
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2038,
										2050
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2038,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2039,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2051,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1406,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 2052,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								2051
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								2051
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1308,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1308,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1308,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1338,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1338,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1338,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3105
						],
						"SignedMath": [
							3210
						],
						"Strings": [
							1593
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 3106,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1341,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3105,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 3211,
							"src": "165:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1343,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3210,
										"src": "173:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593
							],
							"name": "Strings",
							"nameLocation": "259:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1348,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "273:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1346,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1351,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "335:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1349,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1358,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:6"
									},
									"src": "470:66:6"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "708:627:6",
										"statements": [
											{
												"id": 1404,
												"nodeType": "UncheckedBlock",
												"src": "718:611:6",
												"statements": [
													{
														"assignments": [
															1367
														],
														"declarations": [
															{
																"constant": false,
																"id": 1367,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "742:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1374,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1370,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1368,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3105,
																		"src": "759:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3105_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2925,
																	"src": "759:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:6"
													},
													{
														"assignments": [
															1376
														],
														"declarations": [
															{
																"constant": false,
																"id": 1376,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "794:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1375,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1381,
														"initialValue": {
															"arguments": [
																{
																	"id": 1379,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "828:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1377,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:6"
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "849:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:6"
													},
													{
														"AST": {
															"nativeSrc": "930:67:6",
															"nodeType": "YulBlock",
															"src": "930:67:6",
															"statements": [
																{
																	"nativeSrc": "948:35:6",
																	"nodeType": "YulAssignment",
																	"src": "948:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:6",
																						"nodeType": "YulLiteral",
																						"src": "971:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:6"
																				},
																				"nativeSrc": "967:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:6"
																		},
																		"nativeSrc": "955:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1367,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:6",
																"valueSize": 1
															}
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "921:76:6"
													},
													{
														"body": {
															"id": 1400,
															"nodeType": "Block",
															"src": "1023:269:6",
															"statements": [
																{
																	"expression": {
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:6",
																		"subExpression": {
																			"id": 1387,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "1041:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1389,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:6",
																		"nodeType": "YulBlock",
																		"src": "1124:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:6"
																									},
																									"nativeSrc": "1164:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:6"
																							},
																							"nativeSrc": "1159:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:6"
																					},
																					"nativeSrc": "1146:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:6"
																				},
																				"nativeSrc": "1146:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1348,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1383,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1361,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1390,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:6"
																},
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1227:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1260:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1399,
																	"nodeType": "IfStatement",
																	"src": "1256:21:6",
																	"trueBody": {
																		"id": 1398,
																		"nodeType": "Break",
																		"src": "1272:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1401,
														"nodeType": "WhileStatement",
														"src": "1010:282:6"
													},
													{
														"expression": {
															"id": 1402,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "1312:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1365,
														"id": 1403,
														"nodeType": "Return",
														"src": "1305:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:6"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "693:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:6"
									},
									"scope": 1593,
									"src": "637:698:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1511:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1542:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "1588:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1424,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3210_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3209,
																		"src": "1573:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1423,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1564:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1414,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1430,
												"nodeType": "Return",
												"src": "1521:75:6"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:6"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1496:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:6"
									},
									"scope": 1593,
									"src": "1435:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "1782:100:6",
										"statements": [
											{
												"id": 1450,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "1835:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1444,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1442,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3105,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3105_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3047,
																			"src": "1842:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1440,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1452,
																	1535,
																	1555
																],
																"referencedDeclaration": 1535,
																"src": "1823:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1449,
														"nodeType": "Return",
														"src": "1816:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1729:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:6"
									},
									"scope": 1593,
									"src": "1708:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2095:435:6",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2105:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"id": 1464,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1455,
													"src": "2126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:6"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2141:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1466,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1471,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2177:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:6"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2198:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1479,
														"indexExpression": {
															"hexValue": "30",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:6"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1483,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2223:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1485,
														"indexExpression": {
															"hexValue": "31",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:6"
											},
											{
												"body": {
													"id": 1517,
													"nodeType": "Block",
													"src": "2293:95:6",
													"statements": [
														{
															"expression": {
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1503,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "2307:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1505,
																	"indexExpression": {
																		"id": 1504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1506,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "2319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1510,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1507,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "2330:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1512,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:6"
														},
														{
															"expression": {
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1513,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2361:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "2281:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"initializationExpression": {
													"assignments": [
														1490
													],
													"declarations": [
														{
															"constant": false,
															"id": 1490,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1518,
															"src": "2253:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1489,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1496,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1492,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:6",
														"subExpression": {
															"id": 1500,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2290:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2401:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "2397:96:6",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "2418:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1523,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "2468:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1524,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2475:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1522,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "2439:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1526,
															"nodeType": "RevertStatement",
															"src": "2432:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2516:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1529,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1533,
												"nodeType": "Return",
												"src": "2502:21:6"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2026:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:6"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2080:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:6"
									},
									"scope": 1593,
									"src": "2005:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2762:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1548,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2807:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1546,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1551,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2815:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1543,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1535,
															1555
														],
														"referencedDeclaration": 1535,
														"src": "2779:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1553,
												"nodeType": "Return",
												"src": "2772:58:6"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:6"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2747:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:6"
									},
									"scope": 1593,
									"src": "2689:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2992:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1567,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "3015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1572,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "3034:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1570,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "3063:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1576,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1585,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "3086:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1583,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1582,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1590,
												"nodeType": "Return",
												"src": "3002:87:6"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2929:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2946:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2986:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:6"
									},
									"scope": 1593,
									"src": "2914:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1594,
							"src": "251:2847:6",
							"usedErrors": [
								1358
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1941
						]
					},
					"id": 1942,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1596,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:7",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1941,
							"linearizedBaseContracts": [
								1941
							],
							"name": "ECDSA",
							"nameLocation": "352:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1601,
									"members": [
										{
											"id": 1597,
											"name": "NoError",
											"nameLocation": "392:7:7",
											"nodeType": "EnumValue",
											"src": "392:7:7"
										},
										{
											"id": 1598,
											"name": "InvalidSignature",
											"nameLocation": "409:16:7",
											"nodeType": "EnumValue",
											"src": "409:16:7"
										},
										{
											"id": 1599,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:7",
											"nodeType": "EnumValue",
											"src": "435:22:7"
										},
										{
											"id": 1600,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:7",
											"nodeType": "EnumValue",
											"src": "467:17:7"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:7",
									"nodeType": "EnumDefinition",
									"src": "364:126:7"
								},
								{
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:7",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1604,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:7"
									},
									"src": "564:30:7"
								},
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:7",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1609,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "699:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:7"
									},
									"src": "665:50:7"
								},
								{
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:7",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1614,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "840:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:7"
									},
									"src": "811:40:7"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "2242:653:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1629,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "2256:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1664,
													"nodeType": "Block",
													"src": "2781:108:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1655,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "2815:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:7",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1599,
																		"src": "2815:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1601",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1659,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1619,
																					"src": "2860:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:7",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1657,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1662,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1628,
															"id": 1663,
															"nodeType": "Return",
															"src": "2795:83:7"
														}
													]
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "2252:637:7",
												"trueBody": {
													"id": 1650,
													"nodeType": "Block",
													"src": "2280:495:7",
													"statements": [
														{
															"assignments": [
																1634
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1634,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1650,
																	"src": "2294:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1633,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1635,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:7"
														},
														{
															"assignments": [
																1637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1637,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1650,
																	"src": "2317:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1636,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1638,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:7"
														},
														{
															"assignments": [
																1640
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1640,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1650,
																	"src": "2340:7:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1641,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:7"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:7",
																"nodeType": "YulBlock",
																"src": "2548:171:7",
																"statements": [
																	{
																		"nativeSrc": "2566:32:7",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:7",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:7",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:7"
																					},
																					"nativeSrc": "2577:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:7"
																			},
																			"nativeSrc": "2571:27:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:7"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:7",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:7",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:7",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:7"
																					},
																					"nativeSrc": "2626:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:7"
																			},
																			"nativeSrc": "2620:27:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:7"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:7",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:7",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:7",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:7"
																							},
																							"nativeSrc": "2683:20:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:7"
																					},
																					"nativeSrc": "2677:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:7"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:7"
																			},
																			"nativeSrc": "2669:36:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:7"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:7"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1634,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1637,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1619,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1619,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1619,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:7",
																	"valueSize": 1
																}
															],
															"id": 1642,
															"nodeType": "InlineAssembly",
															"src": "2539:180:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1644,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "2750:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1645,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "2756:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1646,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "2759:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1647,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "2762:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1643,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1667,
																		1747,
																		1855
																	],
																	"referencedDeclaration": 1855,
																	"src": "2739:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1628,
															"id": 1649,
															"nodeType": "Return",
															"src": "2732:32:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:7",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2149:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2163:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:7"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2210:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2219:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1601",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1623,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1601,
														"src": "2219:12:7"
													},
													"referencedDeclaration": 1601,
													"src": "2219:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1601",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2233:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:7"
									},
									"scope": 1941,
									"src": "2129:766:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "3789:168:7",
										"statements": [
											{
												"assignments": [
													1678,
													1681,
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1678,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "3800:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1677,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "3819:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1601",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1680,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1679,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1601,
																"src": "3819:12:7"
															},
															"referencedDeclaration": 1601,
															"src": "3819:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1683,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "3839:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1682,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1688,
												"initialValue": {
													"arguments": [
														{
															"id": 1685,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "3870:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1686,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "3876:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1684,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1747,
															1855
														],
														"referencedDeclaration": 1667,
														"src": "3859:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1690,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "3908:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1691,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "3915:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1689,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "3896:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1601_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:7"
											},
											{
												"expression": {
													"id": 1694,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1678,
													"src": "3941:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1676,
												"id": 1695,
												"nodeType": "Return",
												"src": "3934:16:7"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:7",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3719:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3733:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3780:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:7"
									},
									"scope": 1941,
									"src": "3702:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "4285:342:7",
										"statements": [
											{
												"id": 1745,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:7",
												"statements": [
													{
														"assignments": [
															1715
														],
														"declarations": [
															{
																"constant": false,
																"id": 1715,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1745,
																"src": "4319:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1714,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1722,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1716,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "4331:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1717,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:7"
													},
													{
														"assignments": [
															1724
														],
														"declarations": [
															{
																"constant": false,
																"id": 1724,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1745,
																"src": "4522:7:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1723,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1737,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1729,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1704,
																							"src": "4547:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1727,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1733,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1725,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1739,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "4596:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1740,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "4602:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1741,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "4605:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1742,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "4608:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1738,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1667,
																	1747,
																	1855
																],
																"referencedDeclaration": 1855,
																"src": "4585:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1713,
														"id": 1744,
														"nodeType": "Return",
														"src": "4578:32:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:7",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4193:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4207:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4218:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:7"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4253:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4262:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1601",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1708,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1601,
														"src": "4262:12:7"
													},
													"referencedDeclaration": 1601,
													"src": "4262:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1601",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4276:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:7"
									},
									"scope": 1941,
									"src": "4173:454:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "4840:164:7",
										"statements": [
											{
												"assignments": [
													1760,
													1763,
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "4851:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1759,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1763,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "4870:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1601",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1762,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1761,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1601,
																"src": "4870:12:7"
															},
															"referencedDeclaration": 1601,
															"src": "4870:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "4890:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1764,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"arguments": [
														{
															"id": 1767,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "4921:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1768,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "4927:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1769,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "4930:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1766,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1747,
															1855
														],
														"referencedDeclaration": 1747,
														"src": "4910:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "4955:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1774,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "4962:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1772,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "4943:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1601_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:7"
											},
											{
												"expression": {
													"id": 1777,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1760,
													"src": "4988:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1758,
												"id": 1778,
												"nodeType": "Return",
												"src": "4981:16:7"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:7",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4771:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1749,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4785:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4796:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:7"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4831:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:7"
									},
									"scope": 1941,
									"src": "4754:250:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "5298:1372:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1801,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "6194:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1799,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"nodeType": "IfStatement",
												"src": "6182:164:7",
												"trueBody": {
													"id": 1814,
													"nodeType": "Block",
													"src": "6267:79:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1805,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1809,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "6301:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:7",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1600,
																		"src": "6301:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1601",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1811,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "6333:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1798,
															"id": 1813,
															"nodeType": "Return",
															"src": "6281:54:7"
														}
													]
												}
											},
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "6440:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1816,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1824,
												"initialValue": {
													"arguments": [
														{
															"id": 1819,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "6467:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1820,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "6473:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1821,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "6476:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1822,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "6479:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1818,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1825,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "6495:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "6491:113:7",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "6517:87:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1835,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "6551:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:7",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1598,
																		"src": "6551:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1601",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1837,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1798,
															"id": 1842,
															"nodeType": "Return",
															"src": "6531:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1845,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "6622:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1846,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "6630:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:7",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1597,
															"src": "6630:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1848,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1852,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1853,
												"nodeType": "Return",
												"src": "6614:49:7"
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:7",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5169:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5191:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1784,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5208:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5227:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:7"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5266:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5275:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1601",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1793,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1601,
														"src": "5275:12:7"
													},
													"referencedDeclaration": 1601,
													"src": "5275:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1601",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5289:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:7"
									},
									"scope": 1941,
									"src": "5140:1530:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "6897:166:7",
										"statements": [
											{
												"assignments": [
													1870,
													1873,
													1875
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "6908:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1873,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "6927:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1601",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1872,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1871,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1601,
																"src": "6927:12:7"
															},
															"referencedDeclaration": 1601,
															"src": "6927:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "6947:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1874,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1882,
												"initialValue": {
													"arguments": [
														{
															"id": 1877,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "6978:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1878,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "6984:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1879,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "6987:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1880,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "6990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1876,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1747,
															1855
														],
														"referencedDeclaration": 1855,
														"src": "6967:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1601_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1884,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "7014:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1885,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "7021:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1883,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "7002:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1601_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:7"
											},
											{
												"expression": {
													"id": 1888,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1870,
													"src": "7047:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1889,
												"nodeType": "Return",
												"src": "7040:16:7"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:7",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6820:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6834:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1859,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6843:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6854:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:7"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6888:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:7"
									},
									"scope": 1941,
									"src": "6803:260:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "7268:460:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1601",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "7282:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1601",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1901,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "7291:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:7",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1597,
														"src": "7291:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1601",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1601",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1906,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "7378:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1907,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "7387:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:7",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1598,
															"src": "7387:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1601",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1914,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "7483:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1601",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1915,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "7492:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:7",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1599,
																"src": "7492:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1601",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1601",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1926,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "7617:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1601",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1927,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "7626:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1601_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:7",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1600,
																	"src": "7626:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1601",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1935,
															"nodeType": "IfStatement",
															"src": "7613:109:7",
															"trueBody": {
																"id": 1934,
																"nodeType": "Block",
																"src": "7658:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1931,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "7702:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1930,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1614,
																				"src": "7679:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1933,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:7"
																	}
																]
															}
														},
														"id": 1936,
														"nodeType": "IfStatement",
														"src": "7479:243:7",
														"trueBody": {
															"id": 1925,
															"nodeType": "Block",
															"src": "7529:78:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1921,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1897,
																						"src": "7586:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1920,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1919,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1918,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1609,
																			"src": "7550:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1924,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:7"
																}
															]
														}
													},
													"id": 1937,
													"nodeType": "IfStatement",
													"src": "7374:348:7",
													"trueBody": {
														"id": 1913,
														"nodeType": "Block",
														"src": "7418:55:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1910,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "7439:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1912,
																"nodeType": "RevertStatement",
																"src": "7432:30:7"
															}
														]
													}
												},
												"id": 1938,
												"nodeType": "IfStatement",
												"src": "7278:444:7",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "7313:55:7",
													"statements": [
														{
															"functionReturnParameters": 1899,
															"id": 1904,
															"nodeType": "Return",
															"src": "7327:7:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:7",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "7217:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1601",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1894,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1893,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1601,
														"src": "7217:12:7"
													},
													"referencedDeclaration": 1601,
													"src": "7217:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1601",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "7237:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:7"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:7"
									},
									"scope": 1941,
									"src": "7196:532:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1942,
							"src": "344:7386:7",
							"usedErrors": [
								1604,
								1609,
								1614
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2015
						],
						"Strings": [
							1593
						]
					},
					"id": 2016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1943,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 1945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 1594,
							"src": "149:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1944,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1593,
										"src": "157:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1946,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:8",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2015,
							"linearizedBaseContracts": [
								2015
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "1314:368:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:8",
													"nodeType": "YulBlock",
													"src": "1376:300:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:8",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:8",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:8"
																},
																"nativeSrc": "1390:48:8",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:8"
															},
															"nativeSrc": "1390:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:8",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:8"
																},
																"nativeSrc": "1492:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:8"
															},
															"nativeSrc": "1492:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:8"
														},
														{
															"nativeSrc": "1571:31:8",
															"nodeType": "YulAssignment",
															"src": "1571:31:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:8",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:8"
																},
																"nativeSrc": "1581:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:8"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1952,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1949,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:8",
														"valueSize": 1
													}
												],
												"id": 1954,
												"nodeType": "InlineAssembly",
												"src": "1367:309:8"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:8",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1254:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:8"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1298:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:8"
									},
									"scope": 2015,
									"src": "1222:460:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "2234:143:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1973,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1959,
																						"src": "2343:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1974,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:8",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1971,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1593,
																					"src": "2326:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1593_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:8",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1406,
																				"src": "2326:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1969,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1977,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "2361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1965,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:8",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1964,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1963,
												"id": 1980,
												"nodeType": "Return",
												"src": "2244:126:8"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:8",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2180:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1958,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:8"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2225:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1961,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:8"
									},
									"scope": 2015,
									"src": "2148:229:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "2831:80:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1996,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2887:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1997,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "2898:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1993,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1992,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2000,
												"nodeType": "Return",
												"src": "2841:63:8"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:8",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "2761:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "2780:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:8"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "2822:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1989,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:8"
									},
									"scope": 2015,
									"src": "2720:191:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "3462:292:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:8",
													"nodeType": "YulBlock",
													"src": "3524:224:8",
													"statements": [
														{
															"nativeSrc": "3538:22:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:8"
																},
																"nativeSrc": "3549:11:8",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:8"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:8",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:8"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:8",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:8",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:8"
																},
																"nativeSrc": "3573:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:8"
															},
															"nativeSrc": "3573:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:8",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:8"
																		},
																		"nativeSrc": "3616:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:8"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:8",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:8"
																},
																"nativeSrc": "3609:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:8"
															},
															"nativeSrc": "3609:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:8",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:8"
																		},
																		"nativeSrc": "3668:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:8"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:8"
																},
																"nativeSrc": "3661:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:8"
															},
															"nativeSrc": "3661:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:8"
														},
														{
															"nativeSrc": "3708:30:8",
															"nodeType": "YulAssignment",
															"src": "3708:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:8",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:8"
																},
																"nativeSrc": "3718:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:8"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2010,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2005,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:8",
														"valueSize": 1
													},
													{
														"declaration": 2007,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:8",
														"valueSize": 1
													}
												],
												"id": 2012,
												"nodeType": "InlineAssembly",
												"src": "3515:233:8"
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:8",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "3378:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "3403:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2006,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:8"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "3446:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:8"
									},
									"scope": 2015,
									"src": "3353:401:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2016,
							"src": "521:3235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2039
						],
						"IERC165": [
							2051
						]
					},
					"id": 2040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2040,
							"sourceUnit": 2052,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2018,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2021,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "687:7:9"
									},
									"id": 2022,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2020,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2039,
							"linearizedBaseContracts": [
								2039,
								2051
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2050
									],
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2030,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2032,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2051_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2051_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2031,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2051",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2036,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 2039,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2040,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						]
					},
					"id": 2052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2042,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 2051,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2052,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3105
						]
					},
					"id": 3106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2054,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3105,
							"linearizedBaseContracts": [
								3105
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2057,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2062,
									"members": [
										{
											"id": 2058,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 2059,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 2060,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 2061,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 2092,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															2075
														],
														"declarations": [
															{
																"constant": false,
																"id": 2075,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2092,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2079,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2076,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2077,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2081,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2085,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2073,
															"id": 2086,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2089,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2090,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2073,
														"id": 2091,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 3105,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 2120,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2107,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2113,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2105,
															"id": 2112,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2115,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2116,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2118,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2105,
														"id": 2119,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 3105,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 2162,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2134,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2141,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2133,
															"id": 2140,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															2143
														],
														"declarations": [
															{
																"constant": false,
																"id": 2143,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2162,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2142,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2147,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2148,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2149,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2151,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2157,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2133,
															"id": 2156,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2159,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2160,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2133,
														"id": 2161,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 3105,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 2190,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2183,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2175,
															"id": 2182,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2185,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2186,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2169,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2188,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2175,
														"id": 2189,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 3105,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2218,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2204,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2211,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2203,
															"id": 2210,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2213,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2214,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2216,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2203,
														"id": 2217,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 3105,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2230,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2231,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2234,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2233,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2229,
												"id": 2236,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 3105,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2248,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2249,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2247,
												"id": 2254,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 3105,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2278,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2266,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2267,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2270,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2259,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2271,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2273,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2277,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 3105,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2289,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2297,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2296,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2293,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2288,
															"id": 2295,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2298,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2302,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2282,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2306,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2288,
												"id": 2311,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2280,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 3105,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2437,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2326
														],
														"declarations": [
															{
																"constant": false,
																"id": 2326,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2325,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2330,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2316,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2328,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2333,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2318,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2334,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2335,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2342,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2338,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2339,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2324,
																	"id": 2341,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2344,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2345,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2351,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2350,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2347,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2057,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2349,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2353
														],
														"declarations": [
															{
																"constant": false,
																"id": 2353,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2352,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2354,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2353,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2353,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2353,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2318,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2355,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2357
														],
														"declarations": [
															{
																"constant": false,
																"id": 2357,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2364,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2358,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2360,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2365,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2366,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2368,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2371,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2373
														],
														"declarations": [
															{
																"constant": false,
																"id": 2373,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2372,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2380,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2375,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2381,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2383,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2384,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2388,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2389,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2391,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2392,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2396,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2397,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2399,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2400,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2404,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2405,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2407,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2408,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2412,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2413,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2415,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2416,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2420,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2421,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2423,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2424,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2428,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2429,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2430,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2431,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2434,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2435,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2324,
														"id": 2436,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 3105,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2455
												],
												"declarations": [
													{
														"constant": false,
														"id": 2455,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"arguments": [
														{
															"id": 2457,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2458,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2459,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2456,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2439,
															2482
														],
														"referencedDeclaration": 2439,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2463,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2062",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2062",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2462,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3104,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2466,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2467,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2468,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2446,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2465,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2478,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2477,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2473,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2455,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2476,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2479,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2455,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2453,
												"id": 2480,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2448,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2447,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 2062,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 3105,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2593,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2490,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2496,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2495,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2489,
															"id": 2494,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2498
												],
												"declarations": [
													{
														"constant": false,
														"id": 2498,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2593,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2507,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2501,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2500,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2761,
																			2796
																		],
																		"referencedDeclaration": 2761,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2505,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2592,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2508,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2509,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2510,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2511,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2514,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2518,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2519,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2520,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2521,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2522,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2525,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2529,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2531,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2532,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2533,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2536,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2540,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2541,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2542,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2543,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2544,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2547,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2551,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2552,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2553,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2554,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2555,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2562,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2563,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2564,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2565,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2566,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2569,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2573,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2574,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2575,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2576,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2577,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2580,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2584,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2586,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2498,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2587,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2588,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2498,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2585,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2489,
														"id": 2591,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 3105,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2628,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2627,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2606
														],
														"declarations": [
															{
																"constant": false,
																"id": 2606,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2627,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2610,
														"initialValue": {
															"arguments": [
																{
																	"id": 2608,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2607,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2594,
																	2629
																],
																"referencedDeclaration": 2594,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2611,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2606,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2613,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2600,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2612,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2615,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2606,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2616,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2606,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2618,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2597,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2604,
														"id": 2626,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2598,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 2062,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 3105,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2638
												],
												"declarations": [
													{
														"constant": false,
														"id": 2638,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2760,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2640,
												"initialValue": {
													"hexValue": "30",
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2757,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2641,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2654,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2671,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2685,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2684,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2683,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2686,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2700,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2699,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2694,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2695,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2701,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2715,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2714,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2706,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2709,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2716,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2730,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2729,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2721,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2724,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2731,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2745,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2744,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2736,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2739,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2756,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2755,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2754,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2758,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2638,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2636,
												"id": 2759,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2630,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 3105,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2794,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2773
														],
														"declarations": [
															{
																"constant": false,
																"id": 2773,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2794,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2772,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2777,
														"initialValue": {
															"arguments": [
																{
																	"id": 2775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2764,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2774,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2761,
																	2796
																],
																"referencedDeclaration": 2761,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2778,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2773,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2780,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2767,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2779,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2784,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2782,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2783,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2773,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2785,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2771,
														"id": 2793,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2766,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2765,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 2062,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 3105,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2805
												],
												"declarations": [
													{
														"constant": false,
														"id": 2805,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2924,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2807,
												"initialValue": {
													"hexValue": "30",
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2921,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2808,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2824,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2823,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2813,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2818,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2819,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2822,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2825,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2841,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2840,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2830,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2836,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2839,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2842,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2858,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2857,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2852,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2856,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2875,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2874,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2870,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2873,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2876,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2892,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2891,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2886,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2890,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2893,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2909,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2908,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2903,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2904,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2907,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2910,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2920,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2919,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2915,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2918,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2922,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2805,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2803,
												"id": 2923,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 3105,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2958,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2937
														],
														"declarations": [
															{
																"constant": false,
																"id": 2937,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2958,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2936,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2941,
														"initialValue": {
															"arguments": [
																{
																	"id": 2939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2928,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2938,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2925,
																	2960
																],
																"referencedDeclaration": 2925,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2944,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2931,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2943,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2948,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2946,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2947,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2937,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2949,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2935,
														"id": 2957,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2926,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2930,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2929,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 2062,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 3105,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3046,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2969
												],
												"declarations": [
													{
														"constant": false,
														"id": 2969,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3046,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2971,
												"initialValue": {
													"hexValue": "30",
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 3043,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2986,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2985,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2977,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2980,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2981,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2984,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2987,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3001,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 3000,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2992,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2995,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2996,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3002,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3016,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 3015,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 3009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3007,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3010,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3011,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3014,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3031,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 3030,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3022,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3025,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3029,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3032,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3042,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 3041,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3037,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3040,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3044,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2969,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2967,
												"id": 3045,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2961,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 3105,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3084,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 3083,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															3059
														],
														"declarations": [
															{
																"constant": false,
																"id": 3059,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 3083,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3063,
														"initialValue": {
															"arguments": [
																{
																	"id": 3061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3050,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3060,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3047,
																	3085
																],
																"referencedDeclaration": 3047,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3064,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3059,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3066,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3053,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3065,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3068,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3071,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3069,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3059,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3070,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3072,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3074,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3050,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3080,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3057,
														"id": 3082,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3048,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3051,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 2062,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 3105,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3103,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3096,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3089,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2062",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2062",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3094,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3093,
												"id": 3102,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 3086,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3087,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 2062,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 3105,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3106,
							"src": "203:14914:11",
							"usedErrors": [
								2057
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3210
						]
					},
					"id": 3211,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3108,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:12",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3210,
							"linearizedBaseContracts": [
								3210
							],
							"name": "SignedMath",
							"nameLocation": "224:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "376:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3111,
															"src": "393:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "397:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3113,
														"src": "405:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:12",
													"trueExpression": {
														"id": 3121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3111,
														"src": "401:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3117,
												"id": 3124,
												"nodeType": "Return",
												"src": "386:20:12"
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:12",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "325:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3110,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "335:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3112,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:12"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "368:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3115,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:12"
									},
									"scope": 3210,
									"src": "312:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3143,
										"nodeType": "Block",
										"src": "555:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3136,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "572:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3137,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3131,
															"src": "576:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "584:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:12",
													"trueExpression": {
														"id": 3139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3129,
														"src": "580:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3135,
												"id": 3142,
												"nodeType": "Return",
												"src": "565:20:12"
											}
										]
									},
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:12",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "504:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3128,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "514:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3130,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:12"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "547:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3133,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:12"
									},
									"scope": 3210,
									"src": "491:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "797:162:12",
										"statements": [
											{
												"assignments": [
													3155
												],
												"declarations": [
													{
														"constant": false,
														"id": 3155,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 3187,
														"src": "859:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3154,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3168,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3156,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3147,
																	"src": "871:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3157,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3149,
																	"src": "875:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3159,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3160,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3147,
																				"src": "882:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3161,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3149,
																				"src": "886:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3163,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3166,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3169,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3155,
														"src": "911:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3174,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3155,
																						"src": "931:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3172,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3170,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3179,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3147,
																				"src": "945:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3180,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3149,
																				"src": "949:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3182,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3184,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3153,
												"id": 3186,
												"nodeType": "Return",
												"src": "904:48:12"
											}
										]
									},
									"documentation": {
										"id": 3145,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:12",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "746:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "756:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:12"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "789:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:12"
									},
									"scope": 3210,
									"src": "729:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3208,
										"nodeType": "Block",
										"src": "1103:158:12",
										"statements": [
											{
												"id": 3207,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3198,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3191,
																			"src": "1228:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:12",
																		"subExpression": {
																			"id": 3202,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3191,
																			"src": "1242:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:12",
																	"trueExpression": {
																		"id": 3201,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3191,
																		"src": "1237:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3195,
														"id": 3206,
														"nodeType": "Return",
														"src": "1213:31:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3189,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:12",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "1061:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3190,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:12"
									},
									"returnParameters": {
										"id": 3195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "1094:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:12"
									},
									"scope": 3210,
									"src": "1048:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3211,
							"src": "216:1047:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:12"
				},
				"id": 12
			},
			"contracts/l2/t1/SignatureNFT.sol": {
				"ast": {
					"absolutePath": "contracts/l2/t1/SignatureNFT.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ECDSA": [
							1941
						],
						"ERC165": [
							2039
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							2051
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"MessageHashUtils": [
							2015
						],
						"SignatureNFT": [
							3333
						],
						"Strings": [
							1593
						]
					},
					"id": 3334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3334,
							"sourceUnit": 1146,
							"src": "32:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 3213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3334,
							"sourceUnit": 1942,
							"src": "90:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"id": 3214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3334,
							"sourceUnit": 2016,
							"src": "153:73:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 3215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "228:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3216,
										"name": "ERC721",
										"nameLocations": [
											"279:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "279:6:13"
									},
									"id": 3217,
									"nodeType": "InheritanceSpecifier",
									"src": "279:6:13"
								}
							],
							"canonicalName": "SignatureNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3333,
							"linearizedBaseContracts": [
								3333,
								1145,
								89,
								1308,
								1262,
								2039,
								2051,
								1338
							],
							"name": "SignatureNFT",
							"nameLocation": "263:12:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "238ac933",
									"id": 3219,
									"mutability": "immutable",
									"name": "signer",
									"nameLocation": "317:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 3333,
									"src": "292:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3218,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "292:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "630303c6",
									"id": 3223,
									"mutability": "mutable",
									"name": "mintedAddress",
									"nameLocation": "377:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3333,
									"src": "344:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3222,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "353:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "344:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3221,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "364:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3240,
										"nodeType": "Block",
										"src": "521:33:13",
										"statements": [
											{
												"expression": {
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3236,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3219,
														"src": "531:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3237,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3229,
														"src": "540:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "531:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3239,
												"nodeType": "ExpressionStatement",
												"src": "531:16:13"
											}
										]
									},
									"id": 3241,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3232,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3225,
													"src": "505:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3233,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3227,
													"src": "512:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3234,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3231,
												"name": "ERC721",
												"nameLocations": [
													"498:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "498:6:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "498:22:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "451:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "437:19:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "472:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "458:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "458:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3229,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "489:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "481:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:61:13"
									},
									"returnParameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:0:13"
									},
									"scope": 3333,
									"src": "425:129:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3291,
										"nodeType": "Block",
										"src": "681:491:13",
										"statements": [
											{
												"assignments": [
													3251
												],
												"declarations": [
													{
														"constant": false,
														"id": 3251,
														"mutability": "mutable",
														"name": "_msgHash",
														"nameLocation": "699:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 3291,
														"src": "691:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3250,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "691:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3256,
												"initialValue": {
													"arguments": [
														{
															"id": 3253,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3243,
															"src": "725:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3254,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3245,
															"src": "735:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3252,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "710:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "710:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "691:53:13"
											},
											{
												"assignments": [
													3258
												],
												"declarations": [
													{
														"constant": false,
														"id": 3258,
														"mutability": "mutable",
														"name": "_ethSignedMessageHash",
														"nameLocation": "799:21:13",
														"nodeType": "VariableDeclaration",
														"scope": 3291,
														"src": "791:29:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3257,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "791:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3263,
												"initialValue": {
													"arguments": [
														{
															"id": 3261,
															"name": "_msgHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3251,
															"src": "863:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3259,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "823:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2015_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 3260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "840:22:13",
														"memberName": "toEthSignedMessageHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1956,
														"src": "823:39:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "791:81:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3266,
																	"name": "_ethSignedMessageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3258,
																	"src": "898:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3267,
																	"name": "_signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3247,
																	"src": "921:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 3265,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3332,
																"src": "891:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (bytes32,bytes memory) view returns (bool)"
																}
															},
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "891:41:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "934:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 3264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "883:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3271,
												"nodeType": "ExpressionStatement",
												"src": "883:71:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "992:24:13",
															"subExpression": {
																"baseExpression": {
																	"id": 3273,
																	"name": "mintedAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3223,
																	"src": "993:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3275,
																"indexExpression": {
																	"id": 3274,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3243,
																	"src": "1007:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "993:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479206d696e74656421",
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1018:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2",
																"typeString": "literal_string \"Already minted!\""
															},
															"value": "Already minted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8c1251cf956b248a9d2d35725be22d45e0999fd4fb0503d0d68aeae1e2df8b2",
																"typeString": "literal_string \"Already minted!\""
															}
														],
														"id": 3272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "984:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3279,
												"nodeType": "ExpressionStatement",
												"src": "984:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3281,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3243,
															"src": "1074:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3282,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3245,
															"src": "1084:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3280,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1068:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3284,
												"nodeType": "ExpressionStatement",
												"src": "1068:25:13"
											},
											{
												"expression": {
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3285,
															"name": "mintedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "1110:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3287,
														"indexExpression": {
															"id": 3286,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3243,
															"src": "1124:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1110:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1136:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1110:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3290,
												"nodeType": "ExpressionStatement",
												"src": "1110:30:13"
											}
										]
									},
									"functionSelector": "94d008ef",
									"id": 3292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "606:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "619:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "611:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "637:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "629:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "660:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "647:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "647:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:61:13"
									},
									"returnParameters": {
										"id": 3249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:0:13"
									},
									"scope": 3333,
									"src": "597:575:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3309,
										"nodeType": "Block",
										"src": "1540:71:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3304,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3294,
																	"src": "1584:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3305,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3296,
																	"src": "1594:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3302,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1567:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1571:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1567:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1567:36:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3301,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1557:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:47:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3300,
												"id": 3308,
												"nodeType": "Return",
												"src": "1550:54:13"
											}
										]
									},
									"functionSelector": "512c91df",
									"id": 3310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "1460:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1483:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "1475:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1501:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "1493:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:36:13"
									},
									"returnParameters": {
										"id": 3300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "1531:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:9:13"
									},
									"scope": 3333,
									"src": "1451:160:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3331,
										"nodeType": "Block",
										"src": "1768:108:13",
										"statements": [
											{
												"assignments": [
													3320
												],
												"declarations": [
													{
														"constant": false,
														"id": 3320,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "1786:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3331,
														"src": "1778:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1778:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3326,
												"initialValue": {
													"arguments": [
														{
															"id": 3323,
															"name": "_msgHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3312,
															"src": "1812:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3324,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3314,
															"src": "1822:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3321,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "1798:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1941_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1804:7:13",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "1798:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1778:55:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "1850:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3328,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3219,
														"src": "1863:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1850:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3318,
												"id": 3330,
												"nodeType": "Return",
												"src": "1843:26:13"
											}
										]
									},
									"functionSelector": "258ae582",
									"id": 3332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1679:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "_msgHash",
												"nameLocation": "1694:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3332,
												"src": "1686:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1717:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 3332,
												"src": "1704:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1704:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:43:13"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3332,
												"src": "1758:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1758:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:6:13"
									},
									"scope": 3333,
									"src": "1670:206:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3334,
							"src": "254:1624:13",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								1604,
								1609,
								1614
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "32:1846:13"
				},
				"id": 13
			}
		}
	}
}